{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/js/osweb/backends/keyboard.js","webpack:///./src/js/osweb/classes/var_store.js","webpack:///./src/js/osweb/backends/clock.js","webpack:///./src/js/osweb/items/item.js","webpack:///./src/js/osweb/util/matrix.js","webpack:///./src/js/osweb/items/loop.js","webpack:///./src/js/osweb/items/sequence.js","webpack:///./src/js/osweb/items/coroutines.js","webpack:///./src/js/osweb/backends/mouse.js","webpack:///./src/js/osweb/items/generic_response.js","webpack:///./src/js/osweb/items/sketchpad.js","webpack:///./src/js/osweb/items/feedback.js","webpack:///./src/js/osweb/items/inline_script.js","webpack:///./src/js/osweb/items/inline_javascript.js","webpack:///./src/js/osweb/items/keyboard_response.js","webpack:///./src/js/osweb/items/mouse_response.js","webpack:///./src/js/osweb/items/logger.js","webpack:///./src/js/osweb/backends/sampler.js","webpack:///./src/js/osweb/items/sampler.js","webpack:///./src/js/osweb/items/synth.js","webpack:///./src/js/osweb/elements/base_element.js","webpack:///./src/js/osweb/elements/arrow.js","webpack:///./src/js/osweb/elements/circle.js","webpack:///./src/js/osweb/elements/ellipse.js","webpack:///./src/js/osweb/elements/fixdot.js","webpack:///./src/js/osweb/elements/gabor.js","webpack:///./src/js/osweb/elements/image.js","webpack:///./src/js/osweb/elements/line.js","webpack:///./src/js/osweb/elements/noise.js","webpack:///./src/js/osweb/elements/rect.js","webpack:///./src/js/osweb/elements/textline.js","webpack:///./src/js/osweb/widgets/widget.js","webpack:///./src/js/osweb/widgets/button.js","webpack:///./src/js/osweb/widgets/checkbox.js","webpack:///./src/js/osweb/widgets/themes.js","webpack:///./src/js/osweb/widgets/form.js","webpack:///./src/js/osweb/widgets/image_widget.js","webpack:///./src/js/osweb/widgets/image_button.js","webpack:///./src/js/osweb/widgets/label.js","webpack:///./src/js/osweb/widgets/rating_scale.js","webpack:///./src/js/osweb/widgets/text_input.js","webpack:///./src/js/osweb/plugins/advanced_delay.js","webpack:///./src/js/osweb/plugins/form_base.js","webpack:///./src/js/osweb/plugins/form_consent.js","webpack:///./src/js/osweb/plugins/form_multiple_choice.js","webpack:///./src/js/osweb/plugins/form_text_display.js","webpack:///./src/js/osweb/plugins/form_text_input.js","webpack:///./src/js/osweb/backends/video.js","webpack:///./src/js/osweb/system/constants.js","webpack:///./src/js/osweb/plugins/media_player.js","webpack:///./src/js/osweb/plugins/notepad.js","webpack:///./src/js/osweb/plugins/repeat_cycle.js","webpack:///./src/js/osweb/plugins/reset_feedback.js","webpack:///./src/js/osweb/plugins/touch_response.js","webpack:///./src/js/osweb/system/debugger.js","webpack:///./src/js/osweb/system/convertor.js","webpack:///./src/js/osweb/system/events.js","webpack:///./src/js/osweb/system/parameters.js","webpack:///./src/js/osweb/system/screen.js","webpack:///./src/js/osweb/system/session.js","webpack:///./src/js/osweb/util/files.js","webpack:///./src/js/osweb/system/transfer.js","webpack:///./src/js/osweb/classes/item_stack.js","webpack:///./src/js/osweb/classes/item_store.js","webpack:///./src/js/osweb/classes/file_pool_store.js","webpack:///./src/js/osweb/classes/syntax.js","webpack:///./src/js/osweb/python/python_math.js","webpack:///./src/js/osweb/python/python_opensesame.js","webpack:///./src/js/osweb/python/python_random.js","webpack:///./src/js/osweb/python/python_string.js","webpack:///./src/js/osweb/python/python.js","webpack:///./src/js/osweb/backends/log.js","webpack:///./src/js/osweb/items/experiment.js","webpack:///./src/js/osweb/system/runner.js","webpack:///./src/js/osweb/index.js","webpack:///./src/app.js","webpack:///./src/js/osweb/backends/canvas.js","webpack:///./src/js/osweb/backends/styles.js","webpack:///./src/js/osweb/classes/javascript_workspace.js","webpack:///./src/js/osweb/classes/python_workspace.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","1","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Keyboard","experiment","timeOut","keyList","this","_experiment","_keyList","_timeOut","_SYNONIEM_MAP","responses","defaults","synoniem","_synonyms","button","_runner","_events","_run","constants","RESPONSE_KEYBOARD","moderators","keyDownEvent","event","shiftKey","ctrlKey","altKey","visible","_renderer","view","focus","tmp","document","createElement","body","appendChild","removeChild","VarStore","item","parent","_item","_parent","_ignored_properties","variable","defaultValue","evaluate","valid","addQuotes","_bypass_proxy","syntax","eval_text","inspect","includes","variables","pairs","has","preserve","unset","Clock","_startTime","_now","performance","now","Math","round","webkitNow","Date","getTime","ms","RESPONSE_DURATION","Item","script","constructor","_status","STATUS_NONE","clock","count","python_workspace","_pythonWorkspace","response_store","_responseStore","_syntax","vars","STATUS_FINALIZE","_currentItem","run","response","pMs","sleep","time","line","trim","charAt","comments","fromAscii","parse_comment","parse_cmd","cmd","args","set","_debugger","addError","reset","lines","split","parse_variable","parse_line","STATUS_INITIALIZE","addMessage","type","_prepare_complete","unstack","srcMatrix","TypeError","values","reduce","acc","cycle","entries","val","stack","columns","keys","map","row","shuffleVert","matrix","grouped","cols","prev","shuffleHoriz","vals","res","sortCol","col","Error","sort","reverseRows","ReferenceError","roll","amount","column","parseInt","rollN","list","unshift","pop","weight","weightCol","Loop","description","_break_if","_cycles","_index","_keyboard","from_string","cycles","repeat","skip","offset","order","break_if","instruction","params","remove_quotes","Number","_pythonParser","_prepare","undefined","combos","_runstatement","e","wholeRepeats","floor","partialRepeats","allCycles","Array","remainder","position","random","skipVal","concat","items","_items","set_item_onset","break_if_val","compile_cond","repeat_cycle","msg","apply_cycle","breakIf","_eval","_complete","_itemStore","prepare","execute","Sequence","flush_keyboard","cond","_itemStack","tokens","flush","currentItem","Coroutines","tasks","schedule","arglist","kwdict","task","item_name","start_time","start","end_time","end","run_if","runif","taskParams","Task","sortBy","launch","active","dt","t0","running","_loop","started","_active","status","step","RUNNING","ABORTED","stopped","TIMER_BREAK","TIMER_EXIT","TIMER_ERROR","_state","setTimeout","kill","abort_on_end","state","UNINITIALISED","_coroutine","isFunction","coroutine","next","newState","done","FINISHED","Mouse","buttonList","_buttonList","_visible","show_cursor","RESPONSE_MOUSE","_mouseMoveEvent","rtTime","clientX","clientY","events","_mouse_press","_mouseDownEvent","pos","show","style","cursor","GenericResponse","_allowed_responses","_duration","_duration_func","_mouse","_responsetype","RESPONSE_NONE","_timeout","auto_response","process_feedback","synonyms","timeout","_timeStamp","process_response_timeout","process_response_keypress","process_response_mouseclick","allowed_responses","String","replace","duration","_get_default_from_synoniem","prepare_duration_keypress","prepare_duration_mouseclick","RESPONSE_SOUND","RESPONSE_VIDEO","auto_responder","final_duration","_set_config","auto_responder_mouse","sleep_for_duration","get_key","get_click","_sampler","wait","_video_player","rect","getBoundingClientRect","scale","min","right","left","width","bottom","top","height","center_x","center_y","cursor_x","cursor_y","retval","_start_response_interval","sri","_end_response_interval","sanitize","resp","response_bookkeeping","set_mouse_coordinates","correct","toString","total_correct","total_response_time","response_time","total_responses","accuracy","average_response_time","avg_rt","self","prepare_timeout","prepare_allowed_responses","prepare_duration","Sketchpad","canvas","Canvas","elements","a","b","z_index","_isClass","element","_newElementClass","_compare","clear","is_shown","draw","backgroundColor","_styles","background_color","set_sri","process_response","Feedback","reset_variables","reset_feedback","InlineScript","_prepare_run","_prepare_tree","_run_tree","_process_nodes","read_run_lines","read_prepare_lines","_parse","InlineJavaScript","workspace","_javascriptWorkspace","KeyboardResponse","_flush","correct_response","keyDownHandler","keypress","_processKeyboardEvent","addEventListener","proceed","removeEventListener","MouseResponse","resp_codes","mouseDownHandler","_processMouseEvent","touchHandler","changedTouches","Logger","logvars","auto_log","_log","write_vars","audioCtx","AudioContext","webkitAudioContext","console","warning","SamplerBackend","source","volume","pitch","pan","fade","block","sample","cloneNode","error","onended","_audioEnded","createMediaElementSource","resume","connect","applyFilters","play","nodes","destination","gainNode","createGain","gain","setValueAtTime","currentTime","linearRampToValueAtTime","StereoPannerNode","Sampler","_sample","fade_in","stop_after","_pool","Synth","BaseElement","sketchpad","show_if","fix_coordinates","uniform_coordinates","only_keywords","pool","properties","_properties","xc","yc","prop","eval_properties","Arrow","color","penwidth","x1","y1","x2","y2","styles","Styles","fill","arrow","arrow_body_width","arrow_body_length","arrow_head_width","Circle","x","y","circle","Ellipse","w","h","ellipse","Fixdot","fixdot","Gabor","gabor","orient","freq","env","size","stdev","phase","color1","color2","bgmode","ImageElement","_file","image","file","center","Line","Noise","noise","Rect","Textline","font_family","font_size","font_bold","font_italic","html","text","font_underline","Widget","form","var","_container","Container","Graphics","lineStyle","_canvas","_convertColorValue","_themes","theme","lineColorLeftTop","moveTo","_width","lineTo","_height","lineColorRightBottom","rectangle","beginFill","drawRect","endFill","addChild","ButtonWidget","frame","set_var","text_style","fontFamily","fontSize","fontStyle","fontWeight","foreground","text_element","Text","only_render","interactive","buttonMode","hitArea","Rectangle","on","draw_frame","draw_text","CheckBoxWidget","checked","click_accepts","group","_checkbox","box_lines","box_fill","removeChildren","set_checked","widgets","pVal","pVar","join","Themes","box_size","FormWidget","rows","spacing","margins","clicks","span","colNr","rowNr","_groupId","background","focus_widget","render","setFocus","TIMER_FORM","widget","colSpan","rowSpan","form_width","form_height","range","ImageWidget","adjust","path","img","getContext","drawImage","sprite","PIXI","Sprite","Texture","fromCanvas","ar","ImageButtonWidget","LabelWidget","buffer_context","font","words","line_length","word","word_length","measureText","text_elements","text_lines","lineProperties","_getTextBaseline","RatingScaleWidget","default","orientation","_checkBoxes","_getGroupId","_processNodes","_nodes","isNaN","parseFloat","isFinite","labels","box_check","container","horizontal","cx","cy","_h","dx","_drawBorder","_x","_drawCheckBox","_drawText","dy","_y","children","set_value","currentTarget","TextInputWidget","stub","return_accepts","inputField","keyCode","AdvancedDelay","mean","std","u","v","max","sqrt","log","cos","PI","jitter","jitter_mode","_random_uniform","_random_gauss","FormBase","itemType","options","_form_options","_form_text","item_type","TIMER_NONE","_theme","_widgets","form_clicks","parameters","varName","substr","indexOf","varValue","substring","_type","colspan","rowspan","_w","_newWidgetClass","set_widget","_exec","FormConsent","decline_form","decline_message","exit","FormMultipleChoice","FormTextDisplay","FormTextInput","Video","audio","full_screen","_playing","_script","_video","_texture","from","_videoSprite","pause","_videoEnded","onplay","_videoPlay","_event_handler_always","itemClasses","loop","sequence","feedback","inline_script","inline_javascript","keyboard_response","mouse_response","logger","sampler","synth","coroutines","textline","TextLine","button_widget","checkbox_widget","form_widget","image_button_widget","image_widget","label_widget","rating_scale_widget","text_input_widget","themes","advanced_delay","form_base","form_consent","form_multiple_choice","form_text_display","form_text_input","media_player_mpy","_script_executed","stop","_update","event_handler","event_handler_trigger","notepad","condition","touch_response","_ncol","_nrow","cell","PRESSES_ONLY","RELEASES_ONLY","PRESSES_AND_RELEASES","RESPONSE_AUTOKEYBOARD","RESPONSE_AUTOMOUSE","STATUS_BUILD","STATUS_EXECUTE","TIMER_WAIT","TIMER_PAUSE","TIMER_RESUME","TIMER_DONE","Debugger","runner","enabled","messageLog","errorText","context","isPlainObject","notify","_onError","url","messageText","Convertor","variabelName","match","newItem","pair","parseValue","variableName","parseLine","Events","_keyDownEvent","_keyDownHandler","_keyPressMode","_keyUpHandler","_mouseDownHandler","_mouseMoveHandler","_mousePressMode","_mouseUpHandler","_responseGiven","_responseList","_responseType","_soundHasEnded","_statePrevious","_timeHandler","_videoHasEnded","_KEY_CODES","_KEY_SHIFTCODES","_keyDown","_keyUp","_mouseDown","_mouseMove","_mouseUp","_touchStartHandler","_touchStart","Ticker","add","_time","remove","location","_screen","_showPauseScreen","keyboardState","keyboardResponse","_convertKeyCode","preventDefault","mouseState","mouseResponse","_finalize","responseType","responseList","Parameters","_itemCounter","_parameters","_subject","set_subject","_setupClickScreen","_updateIntroScreen","dataType","title","prompt","promptEnabled","_processParameters","_processParameter","_transferParameters","parameter","_exit","_prompt","_onParamConfirm","_onParamCancel","Screen","_click","_fullScreen","requestFullscreen","_fullScreenChanged","_fullScreenError","webkitRequestFullscreen","mozRequestFullScreen","msRequestFullscreen","exitFullscreen","webkitExitFullscreen","mozCancelFullScreen","msExitFullscreen","fullscreenElement","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","_scaleMode","margin","display","_currentCanvas","clientWidth","clientHeight","resize","_scale_x","_scale_y","_confirm","_onFullScreenConfirm","_onFullScreenCancel","debugger","_introScreen","screenCenter","logoPath","logoSrc","oswebLogo","oswebTitle","versionInfo","VERSION_NUMBER","copyrightText","getFullYear","_statusText","clickHandler","_clearIntroScreen","_initialize","percentage","yOuter","_progressBarOuter","_progressBarInner","xOuter","hOuter","_onPauseScreenConfirm","_onPauseScreenCancel","Session","_date","_session","_getSessionInformation","navigator","appCodeName","appName","appVersion","getDate","getMonth","getHours","getMinutes","getSeconds","getUTCDate","getUTCMonth","getUTCFullYear","screen","availHeight","availWidth","colorDepth","outerheight","outerwidth","pixelDepth","screenX","screenY","platform","FileStreamer","chunkSize","rewind","getFileSize","fileReader","FileReader","blob","Promise","resolve","reject","onloadend","target","byteLength","progress","readAsArrayBuffer","decompress","zipfile","onProgress","fs","inflator","pako","Inflate","isEndOfFile","readBlock","err","untar","buffer","readFileAsText","inputFile","temporaryFileReader","onerror","abort","DOMException","onload","readAsText","parseUrl","str","host","getHost","origin","URL","Transfer","isString","isObject","File","_readOsexpFromFile","osScript","uri","fetch","href","remoteFile","_processScript","_readWebFonts","osexp","Blob","osexpFile","_readExpFile","message","_updateProgressBar","files","expFileIndex","findIndex","expFile","poolFiles","filter","_processOsexpPoolItems","axios","onDownloadProgress","lengthComputable","loaded","total","test","userAgent","contents","asyncIterator","currentIndex","currentFile","folder","whole","group1","fromCharCode","ext","lastIndexOf","toLowerCase","Image","src","getBlobUrl","ado","Audio","WebFont","load","google","families","urls","inactive","resultData","FormData","append","xhr","XMLHttpRequest","open","send","ItemStack","stackItem","ItemStore","className","string","_newItemClass","suggestion","uniqueName","FilePoolStore","new_name","old_path","new_path","Syntax","isNumber","cnd","bytecode","expression","ast","_run_statement","content","in_entity","escapeBrackets","unescapeBrackets","nr","strip_slashes","add_slashes","count_quotes","kwargs","parsed","Boolean","convert_if_numeric","safe_wrap","strict","allowVars","NBrackets","chartype","i1","i2","nBrackets","PythonMath","E","pi","filbert","pythonRuntime","imports","ceil","copysign","fabs","factorial","fmod","frexp","fsum","acos","asin","atan","atan2","hypot","sin","tan","iterable","PythonOpenSesame","_objects","close","write","functions","copy_sketchpad","keyboard","mouse","set_subject_nr","sometimes","xy_circle","xy_distance","xy_from_polar","xy_grid","xy_random","xy_to_polar","auto_prepare","style_args","resp_args","playback_args","osc","attack","decay","rho","phi0","pole","phi","min_dist","PythonRandom","shuffle","temporaryValue","randomIndex","PythonString","fillchar","PythonParser","python_math","python_opensesame","python_random","python_string","_classes","_function_stack","_global_return_value","_inline_script","_node","_onConsole","_stack","_statement","_variables","parseFn","parse","locations","ranges","identifier","toNumber","node","return_values","index","_set_node","_get_element_value","return_value","_set_return_value","tmp_value","operator","_set_element_value","break","arguments","callee","tmp_arguments","caller","_get_element","_get_context","global_return_value","init","update","tmp_range","consequent","alternate","returnValue","argument","declarations","id","_process_nodes_jump","_process_nodes_timeout","_array_expression","_assignment_expression","_binary_expression","_block_statement","_break_statement","_call_expression","_empty_statement","_expression_statement","_for_statement","_for_in_statement","_function_expression","_identifier","_if_statement","_literal","_logical_expression","_member_expression","_new_expression","_program","_return_statement","_unary_expression","_update_expression","_variable_declaration","_variable_declarator","_while_statement","ast_tree","Log","varList","entry","onLog","_data","Experiment","JavaScriptWorkspace","debug","bidi","round_decimals","sessionid","valueOf","sound_freq","sound_sample_size","sound_channels","sound_buf_size","canvas_backend","pNr","subject_nr","subject_parity","def_str","_source","read_definition","init_display","datetime","opensesame_version","opensesame_codename","VERSION_NAME","init_clock","toUTCString","Runner","_mimetype","_name","_onFinished","_onLog","_target","_convertor","PythonWorkspace","_transfer","_setupContent","getElementById","autoDetectRenderer","antialias","transparent","resolution","confirm","fullScreen","introClick","introScreen","mimetype","onConsole","onFinished","onError","scaleMode","subject","_setupIntroScreen","_readSource","_build","parseScript","_clean_up","_fullScreenExit","_exitDisplay","_setupContext","OSWEB_VERSION_NAME","OSWEB_VERSION_NO","replaceAll","str1","str2","ignore","RegExp","_pySlice","osweb","printVersionInfo","getRunner","alertify","require","_font_string","sx","sy","ex","ey","bodyWidth","bodyLength","headWidth","pow","angle","_headWidth","p4","p1","p2","p3","p7","p6","doc","DOMParser","parseFromString","childNodes","some","nodeType","styleArgs","assign","textLine","fontBold","innerHTML","lineHeight","div","top1","top2","verticalAlign","scrollTop","ascent","descent","htmlNode","textBlock","currentStyle","elementStyle","_getStyle","nodeName","prev_height","x_pos","y_pos","text_dimensions","text_underline","attributes","textStyle","bounds","textElement","textContent","getBounds","dimension","_parseHtmlNode","points","_arrow_shape","polygon","drawCircle","shape","clone","drawEllipse","_fill","_background_color","_color","_penwidth","_match_env","ctx","px","getImageData","_convertColorValueToRGB","rx","ry","ux","uy","f","amp","exp","g","putImageData","fname","_fullScreenInit","verticles","drawPolygon","rgb","txt","_containsHTML","element_style","visibility","_initConstants","_bidi","_font_bold","_font_family","_font_italic","_font_size","_font_underline","_html","convertedColor","_DEFAULT_COLOURS","_isInt","isInteger","_DEFAULT_FONTS","_checkVal","VarStoreHandler","vars_proxy","Proxy","js","CanvasClass","eval","evalString"],"mappings":"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","file":"js/osweb.1.3.8.bundle.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t1: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,3]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/** Class representing a keyboard device. */\r\nexport default class Keyboard {\r\n  /**\r\n   * Create an object which represents a keyboard device.\r\n   * @param {Object} experiment - The experiment to which the logger belongs.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} keyList - List of acceptable response keys.\r\n   */\r\n  constructor (experiment, timeOut, keyList) {\r\n    // Create and set private properties.\r\n    this._experiment = experiment // Anchor to the experiment object.\r\n    this._keyList = (typeof keyList === 'undefined') ? [] : keyList // List of acceptable response keys.\r\n    this._timeOut = (typeof timeOut === 'undefined') ? null : timeOut // Duration in millisecond for time-out.\r\n\r\n    // Set constant properties.\r\n    this._SYNONIEM_MAP = [\r\n      ['space', ' ', 'SPACE'],\r\n      ['\"', 'quotedbl', 'QUOTEDBL'],\r\n      ['!', 'exclaim', 'EXCLAIM'],\r\n      ['#', 'hash', 'HASH'],\r\n      ['$', 'dollar', 'DOLLAR'],\r\n      ['&', 'ampersand', 'AMPERSAND'],\r\n      [\"'\", 'quote', 'QUOTE'],\r\n      ['(', 'leftbracket', 'leftparen', 'LEFTBRACKET', 'LEFTPAREN'],\r\n      [')', 'rightbracket', 'rightparen', 'RIGHTBRACKET', 'RIGHTPAREN'],\r\n      ['*', 'asteriks', 'ASTERISK'],\r\n      ['+', 'plus', 'PLUS'],\r\n      [',', 'comma', 'COMMA'],\r\n      ['-', 'minus', 'MINUS'],\r\n      ['.', 'period', 'PERIOD'],\r\n      ['/', 'slash', 'SLASH'],\r\n      ['1'],\r\n      ['2'],\r\n      ['3'],\r\n      ['4'],\r\n      ['5'],\r\n      ['6'],\r\n      ['7'],\r\n      ['8'],\r\n      ['9'],\r\n      ['0'],\r\n      ['=', 'equals', 'EQUALS'],\r\n      [':', 'colon', 'COLON'],\r\n      [';', 'semicolon', 'SEMICOLON'],\r\n      ['<', 'less', 'LESS'],\r\n      ['>', 'greater', 'GREATER'],\r\n      ['?', 'question', 'QUESTION'],\r\n      ['@', 'at', 'AT'],\r\n      ['a', 'A'],\r\n      ['b', 'B'],\r\n      ['c', 'C'],\r\n      ['d', 'D'],\r\n      ['e', 'E'],\r\n      ['f', 'F'],\r\n      ['g', 'G'],\r\n      ['h', 'H'],\r\n      ['i', 'I'],\r\n      ['j', 'J'],\r\n      ['k', 'K'],\r\n      ['l', 'L'],\r\n      ['m', 'M'],\r\n      ['n', 'N'],\r\n      ['o', 'O'],\r\n      ['p', 'P'],\r\n      ['q', 'Q'],\r\n      ['r', 'R'],\r\n      ['s', 'S'],\r\n      ['t', 'T'],\r\n      ['u', 'U'],\r\n      ['v', 'V'],\r\n      ['w', 'W'],\r\n      ['x', 'X'],\r\n      ['y', 'Y'],\r\n      ['z', 'Z'],\r\n      ['kp0', 'KP0'],\r\n      ['kp1', 'KP1'],\r\n      ['kp2', 'KP2'],\r\n      ['kp3', 'KP3'],\r\n      ['kp4', 'KP4'],\r\n      ['kp5', 'KP5'],\r\n      ['kp6', 'KP6'],\r\n      ['kp7', 'KP7'],\r\n      ['kp8', 'KP8'],\r\n      ['kp9', 'KP9'],\r\n      ['kp_divide', 'KP_DIVIDE'],\r\n      ['kp_enter', 'KP_ENTER'],\r\n      ['kp_equals', 'KP_EQUALS'],\r\n      ['kp_minus', 'KP_MINUS'],\r\n      ['kp_multiply', 'KP_MULTIPLY'],\r\n      ['kp_period', 'KP_PERIOD'],\r\n      ['kp_plus', 'KP_PLUS'],\r\n      ['\\\\', 'backslash', 'BACKSLASH'],\r\n      ['^', 'power', 'caret', 'POWER', 'CARET'],\r\n      ['_', 'underscore', 'UNDERSCORE'],\r\n      ['`', 'backquote', 'BACKQUOTE'],\r\n      ['f1', 'F1', 'help', 'HELP'],\r\n      ['f2', 'F2'],\r\n      ['f3', 'F3'],\r\n      ['f4', 'F4'],\r\n      ['f5', 'F5'],\r\n      ['f6', 'F6'],\r\n      ['f7', 'F7'],\r\n      ['f8', 'F8'],\r\n      ['f9', 'F9'],\r\n      ['f10', 'F10'],\r\n      ['f11', 'F11'],\r\n      ['f12', 'F12'],\r\n      ['f13', 'F13'],\r\n      ['f14', 'F14'],\r\n      ['f15', 'F15'],\r\n      ['up', 'UP'],\r\n      ['down', 'DOWN'],\r\n      ['left', 'LEFT'],\r\n      ['right', 'RIGHT'],\r\n      ['menu', 'MENU'],\r\n      ['lshift', 'left shift', 'LSHIFT', 'LEFT SHIFT'],\r\n      ['lctrl', 'left ctrl', 'LCTRL', 'LEFT CTRL'],\r\n      ['lalt', 'left alt', 'LALT', 'LEFT ALT'],\r\n      ['rshift', 'right shift', 'RSHIFT', 'RIGHT SHIFT'],\r\n      ['rctrl', 'right ctrl', 'RCTRL', 'RIGHT CTRL'],\r\n      ['ralt', 'right alt', 'alt gr', 'RALT', 'RIGHT ALT', 'ALT GR'],\r\n      ['page up', 'pageup', 'PAGE UP', 'PAGEUP'],\r\n      ['page down', 'pagedown', 'PAGE DOWN', 'PAGEDOWN'],\r\n      ['pause', 'PAUSE'],\r\n      ['scroll lock', 'scrollock', 'SCROLL LOCK', 'SCROLLOCK'],\r\n      ['caps lock', 'capslock', 'CAPS LOCK', 'CAPSLOCK'],\r\n      ['nummlock', 'NUMMLOCK'],\r\n      ['clear', 'CLEAR'],\r\n      ['enter', 'ENTER', 'return', 'RETURN'],\r\n      ['tab', 'TAB'],\r\n      ['backspace', 'BACKSPACE'],\r\n      ['end', 'END'],\r\n      ['home', 'HOME'],\r\n      ['insert', 'INSERT'],\r\n      ['delete', 'DELETE'],\r\n      ['sysreq', 'sys req', 'SYSREQ', 'SYS REQ'],\r\n      ['break', 'BREAK'],\r\n      ['escape', 'ESCAPE'],\r\n      ['print', 'PRINT'],\r\n      ['print screen', 'PRINT SCREEN'],\r\n      ['lmeta', 'left meta', 'LMETA', 'LEFT META', 'lsuper', 'LSUPER', 'left super', 'LEFT SUPER'],\r\n      ['rmeta', 'right meta', 'RMETA', 'RIGHT META', 'rsuper', 'right super', 'RSUPER', 'RIGHT SUPER'],\r\n      // key defined below are not supported yet.\r\n      ['euro', 'EURO'],\r\n      ['first', 'FIRST'],\r\n      ['last', 'LAST'],\r\n      ['kp enter', 'KP ENTER'],\r\n      ['kp equals', 'KP EQUALS'],\r\n      ['mode', 'MODE'],\r\n      ['unknown', 'UNKNOWN'],\r\n      ['unknown key', 'UNKNOWN KEY']\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Convert all response values to their default values (remove synoniems).\r\n   * @param {Array} responses - A list of response values.\r\n   * @return {Array} - List of default values for the given responses.\r\n   */\r\n  _get_default_from_synoniem (responses) {\r\n    const defaults = []\r\n    for (let i = 0; i < responses.length; i++) {\r\n      const synoniem = this._synonyms(responses[i])\r\n      defaults.push(synoniem[0])\r\n    }\r\n    return defaults\r\n  }\r\n\r\n  /**\r\n   * Set the configuration for the keyboard backend.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} keyList - List of acceptable response keys.\r\n   */\r\n  _set_config (timeOut, keyList) {\r\n    // Set the properties.\r\n    this._keyList = keyList\r\n    this._timeOut = timeOut\r\n  }\r\n\r\n  /**\r\n   * Convert a response value to its default value (remove synoniem).\r\n   * @param {String} button - A response.\r\n   * @return {String|Null} - Default value of the response.\r\n   */\r\n  _synonyms (button) {\r\n    if (typeof button !== 'undefined') {\r\n      for (let i = 0; i < this._SYNONIEM_MAP.length; i++) {\r\n        for (let j = 0; j < this._SYNONIEM_MAP[i].length; j++) {\r\n          if (this._SYNONIEM_MAP[i][j] === button) {\r\n            return this._SYNONIEM_MAP[i]\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  /** Clear all pending keyboard input. */\r\n  flush () {\r\n    // Always returns false because flusihing is not possible.\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Collects a single key press.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} keyList - List of acceptable response keys.\r\n   */\r\n  get_key (timeOut, keyList) {\r\n    // Collects a single key press.\r\n    this._keyList = (typeof keyList === 'undefined') ? this._keyList : keyList\r\n    this._timeOut = (typeof timeOut === 'undefined') ? this._timeOut : timeOut\r\n\r\n    if (this._experiment !== null) {\r\n      // Set the event processor.\r\n      this._experiment._runner._events._run(this._timeOut, constants.RESPONSE_KEYBOARD, this._keyList)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieve the moderator keys (LIST, CTRL, ALT) pressed during a response.\r\n   * @return {Array} - List of pressed moderator keys.\r\n   */\r\n  get_mods () {\r\n    var moderators = []\r\n    if (this._experiment._runner._events.keyDownEvent !== null) {\r\n      if (this._experiment._runner._events.keyDownEvent.event.shiftKey === true) {\r\n        moderators.push('shift')\r\n      }\r\n      if (this._experiment._runner._events.keyDownEvent.event.ctrlKey === true) {\r\n        moderators.push('ctrl')\r\n      }\r\n      if (this._experiment._runner._events.keyDownEvent.event.altKey === true) {\r\n        moderators.push('alt')\r\n      }\r\n    }\r\n    return moderators\r\n  }\r\n\r\n  /**\r\n   * Shows or hides a virtual keyboard.\r\n   * @param {Boolean} visible - If true the virtual keyboard is shown.\r\n   */\r\n  show_virtual_keyboard (visible) {\r\n    // Shows or hides a virtual keyboard.\r\n    if (visible === true) {\r\n      // Hack to show the virutal keyboard. ## Must be tested!\r\n      this._experiment._runner._renderer.view.focus()\r\n    } else {\r\n      // Hack to hide the virtual keyboard. ## Must be tested!\r\n      var tmp = document.createElement('input')\r\n      document.body.appendChild(tmp)\r\n      tmp.focus()\r\n      document.body.removeChild(tmp)\r\n    }\r\n  }\r\n}\r\n","/** Class representing a variable store. */\r\nexport default class VarStore {\r\n  /**\r\n   * Create a variable store object for all variables.\r\n   * @param {Object} item - The item to which the var_store belongs.\r\n   * @param {Object} parent - The parent global var_store.\r\n   */\r\n  constructor (item, parent) {\r\n    // Create and set private properties.\r\n    this._item = item\r\n    this._parent = parent\r\n    this._ignored_properties = [\r\n      '_item', '_parent', '_bypass_proxy', '_ignored_properties'\r\n    ]\r\n  };\r\n\r\n  /**\r\n   * Get the value of a variable from the store (or thje parent store).\r\n   * @param {String} variable - The name of the variable.\r\n   * @param {Boolean|Number|String} defaultValue - The default value for the variable.\r\n   * @param {Object} evaluate - The parent global var_store.\r\n   * @param {Object} valid - The parent global var_store.\r\n   * @param {Boolean} addQuotes - The add quotes toggle.\r\n   * @return {Boolean|Number|String} - The value of the given variable.\r\n   */\r\n  get (variable, defaultValue, evaluate, valid, addQuotes) {\r\n    // Set the optional arguments\r\n    defaultValue = (typeof defaultValue === 'undefined') ? null : defaultValue\r\n    evaluate = (typeof evaluate === 'undefined') ? true : evaluate\r\n    valid = (typeof valid === 'undefined') ? null : valid\r\n    var value = null\r\n    // Gets an experimental variable.\r\n    if (variable in this) {\r\n      this._bypass_proxy = true // Avoid Proxy feedback loop\r\n      if (typeof this[variable] === 'string' && evaluate === true) {\r\n        value = this._item.syntax.eval_text(this[variable], null, addQuotes)\r\n      } else {\r\n        value = this[variable]\r\n      }\r\n      this._bypass_proxy = false\r\n    }\r\n    // If value is not found locally, look in experiment object.\r\n    if (value == null && this._parent && variable in this._parent) {\r\n      this._parent._bypass_proxy = true // Avoid Proxy feedback loop\r\n      if (typeof this._parent[variable] === 'string' && evaluate === true) {\r\n        value = this._item.syntax.eval_text(this._parent[variable], null, addQuotes)\r\n      } else {\r\n        value = this._parent[variable]\r\n      }\r\n      this._parent._bypass_proxy = false\r\n    }\r\n    // Return function result.\r\n    return value\r\n  }\r\n\r\n  /**\r\n   * Check if the variable is part of the variable store.\r\n   * @param {String} variable - The name of the variable.\r\n   * @return {Boolean} - True if the variable is part of the store.\r\n   */\r\n  has (variable) {\r\n    return this.inspect().includes(variable)\r\n  }\r\n\r\n  /** Create a list of all avariables available.\r\n   * @return {Array} - Array containing names of all variables.\r\n   */\r\n  inspect () {\r\n    let variables = []\r\n    for (let variable in this) {\r\n      if (this._ignored_properties.includes(variable)) continue\r\n      variables.push(variable)\r\n    }\r\n    return variables\r\n  }\r\n\r\n  /** Create a list of value/name pairs.\r\n   * @return {Array} - Array containing name and values of all variables.\r\n   */\r\n  items () {\r\n    let pairs = {}\r\n    for (let variable of this.inspect()) {\r\n      pairs[variable] = this[variable]\r\n    }\r\n    return pairs\r\n  }\r\n\r\n  /**\r\n   * Set the value of a variable in the store.\r\n   * @param {String} variable - The name of the variable.\r\n   * @value {Boolean|Number|String} - Value of the variable to set.\r\n   */\r\n  set (variable, value) {\r\n    this[variable] = value\r\n  }\r\n\r\n  /**\r\n   * Unset (remove) a variable from the store.\r\n   * @param {String} variable - The name of the variable.\r\n   */\r\n  unset (variable) {\r\n    if (this.has(variable) === true) {\r\n      delete this[variable]\r\n    }\r\n  }\r\n\r\n  /** Create a list of variable names.\r\n   * @return {Array} - Array containing namesof all variables.\r\n   */\r\n  vars () {\r\n    return this.inspect()\r\n  }\r\n\r\n  /**\r\n   * Clears all experimental variables, except those that are explicitly\r\n   * preserved.\r\n   * @param {Array} preserve - An array of variable names to preserve.\r\n   */\r\n  clear (preserve) {\r\n    preserve = (typeof preserve === 'undefined') ? [] : preserve\r\n    for (let variable of this.inspect()) {\r\n      if (preserve.includes(variable)) continue\r\n      this.unset(variable)\r\n    }\r\n  }\r\n}\r\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/** Class representing the clock system. */\r\nexport default class Clock {\r\n  /**\r\n   * Create a clock object which controls a pseudo real-time clock.\r\n   * @param {Object} experiment - The experiment  to which the clock belongs.\r\n   */\r\n  constructor (experiment) {\r\n    // Create and set private properties.\r\n    this._experiment = experiment // Parent experiment item.\r\n    this._startTime = -1 // Start time anchor of the experiment.\r\n  }\r\n\r\n  /** Initialize the clock. */\r\n  _initialize () {\r\n    // Set the absolute start time of the expeirment.\r\n    this._startTime = this._now()\r\n  }\r\n\r\n  /** Get an absolute time stamp from the system in ms.\r\n   * @return {Number} - The current absolute time in ms.\r\n   */\r\n  _now () {\r\n    // Get the current time stamp using the best available timing method.\r\n    if (window.performance.now) {\r\n      return Math.round(window.performance.now())\r\n    } else if (window.performance.webkitNow) {\r\n      return Math.round(window.performance.webkitNow())\r\n    } else {\r\n      return new Date().getTime()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sleeps (pauses) for a duration (in milliseconds).\r\n   * @param {Number} ms - The duration to wait in ms.\r\n   */\r\n  sleep (ms) {\r\n    // Sleeps (pauses) for a duration (in milliseconds).\r\n    if (this._experiment !== null) {\r\n      // Set the event processor.\r\n      this._experiment._runner._events._run(ms, constants.RESPONSE_DURATION, null)\r\n    }\r\n  }\r\n\r\n  /** Get the relative time from the start of an experiment.\r\n   * @return {Number} - The current relative time in ms.\r\n   */\r\n  time () {\r\n    // Gives the current timestamp in milliseconds.\r\n    if (this._startTime !== -1) {\r\n      return (this._now() - this._startTime)\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n}\r\n","import { constants } from '../system/constants.js'\r\nimport VarStore from '../classes/var_store.js'\r\nimport Clock from '../backends/clock.js'\r\n\r\n/** Class representing an OpenSesame item. */\r\nexport default class Item {\r\n  constructor (experiment, name, script) {\r\n    // Create and set private properties.\r\n    this._parent = null\r\n    this._runner = (experiment.constructor.name === 'Runner') ? experiment : experiment._runner\r\n    this._status = constants.STATUS_NONE\r\n\r\n    // Create and set public properties.\r\n    this.clock = (experiment.constructor.name === 'Runner') ? new Clock(this) : experiment.clock\r\n    this.count = 0\r\n    this.experiment = (experiment.constructor.name === 'Runner') ? this : experiment\r\n    this.name = name\r\n    this.python_workspace = this._runner._pythonWorkspace\r\n    this.response_store = this._runner._responseStore\r\n    this.syntax = this._runner._syntax\r\n    this.vars = new VarStore(this, (experiment.constructor.name === 'Runner') ? null : this.experiment.vars)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Adjust the status of the item.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Implements the complete phase of the item.\r\n    if (this._parent !== null && this._runner._events._currentItem) {\r\n      // Return the process control to the parent of the element.\r\n      this._runner._events._currentItem = this._parent\r\n      this._runner._events._currentItem.run()\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare complete phase of an item. */\r\n  _prepare_complete () {\r\n  }\r\n\r\n  /** Implements the update phase of an item. */\r\n  _update (response) {\r\n  }\r\n\r\n  /**\r\n     * Pauses the object execution. !WARNING This function can not be implemented due the script blocking of javascript.\r\n     * @param {Number} pMs - The sleep time in milliseconds.\r\n     */\r\n  sleep (pMs) {\r\n    this.clock.sleep(pMs)\r\n  }\r\n\r\n  /**\r\n     * Returns the current time.\r\n     * @returns {Number} - The current time in ms from the start of the experiment.\r\n     */\r\n  time () {\r\n    // Returns the current time.\r\n    return this.clock.time()\r\n  }\r\n\r\n  /**\r\n     * Parses comments from a single definition line, indicated by # // or '.\r\n.    * @param {String} line - The definition line to be parsed.\r\n     * @returns {Boolean} - Return true if the commennt is succesfully parsed.\r\n     */\r\n  parse_comment (line) {\r\n    // Parses comments from a single definition line, indicated by # // or '.\r\n    line = line.trim()\r\n    if ((line.length > 0) && (line.charAt(0) === '#')) {\r\n      // Add comments to the array removing the first character.\r\n      this.comments.push(line.slice(1))\r\n      return true\r\n    } else if ((line.length > 1) && (line.charAt(0) === '/')) {\r\n      // Add comments to the array removing the first two characters.\r\n      this.comments.push(line.slice(2))\r\n      return true\r\n    } else {\r\n      return false\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Parses keywords  from a single definition line.\r\n     * @param {String} line - The definition line to be parsed.\r\n     * @param {Boolean} fromAscii - If true the source is ascii.\r\n     * @param {Boolean} evaluate - If true the keyword is evaluated.\r\n     * @returns {Object} - Returns the keywords found in the line.\r\n     */\r\n  parse_keyword (line, fromAscii, evaluate) {\r\n  }\r\n\r\n  /**\r\n     * Implements arbitrary line parsing, for item-specific requirements.\r\n     * @param {String} line - The definition line to be parsed.\r\n     */\r\n  parse_line (line) {\r\n  }\r\n\r\n  /**\r\n    * Reads a single variable from a single definition line.\r\n    * @param {String} line - The definition line to be parsed.\r\n    * @return {Boolean} - Return true if the variabel is succesfully parsed.\r\n    */\r\n  parse_variable (line) {\r\n    // Reads a single variable from a single definition line.\r\n    if (this.parse_comment(line)) {\r\n      return true\r\n    } else {\r\n      // Split the single line into a set of tokens.\r\n      const [cmd, args, kwargs] = this._runner._syntax.parse_cmd(line)\r\n      if (cmd === 'set') {\r\n        if (args.length !== 2) {\r\n          this._runner._debugger.addError('Failed to parse definition: ' + line)\r\n        } else {\r\n          this.vars.set(args[0], args[1])\r\n          return true\r\n        }\r\n      } else {\r\n        return false\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Parses the item from a definition string.\r\n.    * @param {String} script - The definition script line to be parsed.\r\n     */\r\n  from_string (script) {\r\n    // Parses the item from a definition string.\r\n    this.variables = {}\r\n    this.comments = []\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          this.parse_line(lines[i])\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the reset item variables method. */\r\n  reset () {\r\n  }\r\n\r\n  /** Implements the prepeare phase of an item. */\r\n  prepare () {\r\n    // Set the internal counter.\r\n    this.experiment.vars.set('count_' + this.name, this.count)\r\n    this.count++\r\n\r\n    // Set the status to initialize.\r\n    this._status = constants.STATUS_INITIALIZE\r\n\r\n    // For debugging.\r\n    this._runner._debugger.addMessage('prepare ' + this.name)\r\n\r\n    // Implements the complete phase of the item (to support blocking script in the prepare phase).\r\n    if (!(this.type === 'sequence' && this._parent.type === 'sequence')) {\r\n      if ((this._parent !== null) && (this.type !== 'feedback')) {\r\n        // Prepare cycle of parent.\r\n        this._parent._prepare_complete()\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Set a onset time stamp before running an item.\r\n     * @param {Number} time - The time to store as onset time.\r\n     */\r\n  set_item_onset (time) {\r\n    // Set a timestamp for the item's executions\r\n    time = (typeof time === 'undefined') ? this.clock.time() : time\r\n\r\n    // Add the time stamp to the variable list.\r\n    this.experiment.vars.set('time_' + this.name, time)\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    this._runner._debugger.addMessage('run ' + this.name)\r\n  }\r\n}\r\n","/**\n * Loop utility functions\n */\nimport combos from 'combos'\nimport {\n  isInteger,\n  isArray,\n  isPlainObject,\n  isString,\n  isEmpty,\n  shuffle,\n  zip,\n  zipObject,\n  fromPairs,\n  pick,\n  reverse\n} from 'lodash'\n\n/**\n * Group matrix values by their variables names\n *\n * @param {Object} srcMatrix The source matrix to transform\n * @returns {Object}\n */\nexport function unstack (srcMatrix) {\n  if (!isArray(srcMatrix)) {\n    throw new TypeError('srcMatrix should be an array')\n  }\n  return Object.values(srcMatrix).reduce((acc, cycle) => {\n    for (const [key, val] of Object.entries(cycle)) {\n      if (key in acc) {\n        acc[key].push(val)\n      } else {\n        acc[key] = [val]\n      }\n    }\n    return acc\n  }, {})\n}\n\n/**\n * Convert grouped by variable matrix back to a normal matrix\n * @param {array} srcMatrix\n * @returns {array}\n */\nexport function stack (srcMatrix) {\n  if (!isPlainObject(srcMatrix)) {\n    throw new TypeError('srcMatrix should be an object')\n  }\n  const columns = Object.keys(srcMatrix)\n  const rows = zip(...Object.values(srcMatrix))\n  return rows.map(row => zipObject(columns, row))\n}\n\n/**\n * Creates a full factorial design of all the variable values in the matrix\n * @param {array} matrix The array of cycles to fully cross\n * @returns {array}\n */\nexport function fullfactorial (matrix) {\n  return combos(unstack(matrix))\n}\n\n/**\n * Shuffles the order of the rows in the matrix. If a column/variable name\n * is specified, only the rows in this column are shuffled.\n *\n * @export\n * @param {array} matrix The matrix to be shuffled\n * @param {array} columns  Array containing the variable/column to be shuffled\n * @returns {array}\n */\nexport function shuffleVert (matrix, columns) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (typeof (columns) === 'undefined' || (isArray(columns) && columns.length === 0)) {\n    return shuffle(matrix)\n  } else if (!isArray(columns)) {\n    throw new TypeError('Invalid argument for columns passed to shuffleVert. Expects an array containing column names')\n  } else {\n    let grouped = unstack(matrix)\n    let cols = pick(grouped, columns)\n    cols = Object.entries(cols).reduce((prev, [key, values]) => {\n      prev[key] = shuffle(values)\n      return prev\n    }, {})\n    return stack({ ...grouped, ...cols })\n  }\n}\n\n/**\n * Shuffles the matrix horizontally; shuffle the values of the columns\n * If column names are specified, only these will be shuffled\n *\n * @export\n * @param {array} matrix\n * @param {array} columns\n * @returns {array}\n */\nexport function shuffleHoriz (matrix, columns) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (typeof columns === 'undefined') columns = []\n  if (!isArray(columns)) {\n    throw new TypeError('Invalid argument specified to shuffleHoriz. Expects an array that optionally contains column names to shuffle')\n  }\n  return Object.values(matrix).map(row => {\n    const vars = columns.length === 0\n      ? row\n      : pick(row, columns)\n    const keys = Object.keys(vars)\n    let vals = Object.values(vars)\n    vals = shuffle(vals)\n    const res = fromPairs(zip(keys, vals))\n    return { ...row, ...res }\n  })\n}\n\n/**\n * Sorts only the specified columns of the matrix\n *\n * @export\n * @param {array} matrix\n * @param {array} params\n * @returns array\n */\nexport function sortCol (matrix, col) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (!isString(col) || col === '') {\n    throw new Error('Invalid argument specified to sortCol. Expects a column name')\n  }\n  const grouped = unstack(matrix)\n  grouped[col].sort()\n  return stack(grouped)\n}\n\n/**\n * Reverses the matrix order\n * If column names are specified, only their orders are reversed\n * @export\n * @param {array} matrix\n * @param {array} columns\n * @returns {array}\n */\nexport function reverseRows (matrix, columns) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (typeof columns === 'undefined') columns = []\n  if (!isArray(columns)) {\n    throw new TypeError('Invalid argument specified to reverseRows. Expects an array containing a column name')\n  }\n  if (columns.length === 0) {\n    return reverse(matrix)\n  } else {\n    let grouped = unstack(matrix)\n    let cols = pick(grouped, columns)\n    if (isEmpty(cols)) {\n      throw new ReferenceError(`one or more of ${columns} were not found in the matrix`)\n    }\n    cols = Object.entries(cols).reduce((prev, [key, values]) => {\n      prev[key] = reverse(values)\n      return prev\n    }, {})\n    return stack({ ...grouped, ...cols })\n  }\n}\n\n/**\n * Rolls the matrix with the specified distance\n *\n * @export\n * @param {array} matrix\n * @param {array} params\n * @returns array\n */\nexport function roll (matrix, amount, column) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  // operate on a copy of the array to preserve the original\n  matrix = [...matrix]\n\n  amount = parseInt(amount)\n  if (!isInteger(amount)) {\n    throw new TypeError(`amount needs to be an integer, was ${amount}`)\n  }\n\n  if (!column) {\n    return rollN(matrix, amount)\n  }\n\n  if (!isString(column)) {\n    throw new TypeError(`column expects a string, was ${column}`)\n  } else {\n    let grouped = unstack(matrix)\n    if (!grouped.hasOwnProperty(column)) {\n      throw new ReferenceError(`Could not find column ${column} in matrix`)\n    }\n    grouped[column] = rollN(grouped[column], amount)\n    return stack(grouped)\n  }\n}\n\n/**\n * Roll array contents forward or backward by the specified amount\n *\n * @param {array} list\n * @param {int} list\n * @returns {array}\n */\nfunction rollN (list, amount) {\n  if (amount > 0) {\n    for (let i = 0; i < amount; i++) {\n      list.unshift(list.pop())\n    }\n  } else {\n    for (let i = 0; i > amount; i--) {\n      list.push(list.shift())\n    }\n  }\n  return list\n}\n\n/**\n * Duplicate (or remove) rows depending on the specified weight parameter\n *\n * @param {array} matrix The matrix containing the data\n * @param {string} weightCol The colom to use for weight values\n */\nexport function weight (matrix, weightCol) {\n  if (!isArray(matrix)) {\n    throw new TypeError('matrix should be of type array')\n  }\n  if (!isString(weightCol)) {\n    throw new TypeError('Invalid argument passed to weight. Expects a column name')\n  }\n  if (!matrix[0].hasOwnProperty(weightCol)) {\n    throw new ReferenceError(`Column '${weightCol}' not found in matrix`)\n  }\n  return matrix.reduce((result, item) => {\n    const weight = parseInt(item[weightCol])\n    if (!isInteger(weight)) {\n      throw new TypeError('Specified weight value is not an integer')\n    }\n    for (let i = 0; i < weight; i++) {\n      result.push(item)\n    }\n    return result\n  }, [])\n}\n","import {\r\n  isNumber,\r\n  shuffle,\r\n  sortBy\r\n} from 'lodash'\r\n\r\nimport Keyboard from '../backends/keyboard.js'\r\nimport {\r\n  constants\r\n} from '../system/constants.js'\r\nimport Item from './item.js'\r\n\r\nimport {\r\n  fullfactorial,\r\n  shuffleVert,\r\n  shuffleHoriz,\r\n  sortCol,\r\n  reverseRows,\r\n  roll,\r\n  weight\r\n} from '../util/matrix'\r\n\r\n/**\r\n * Class representing a sequence item.\r\n * @extends Item\r\n */\r\nexport default class Loop extends Item {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} experiment - The experiment item to which the item belongs.\r\n   * @param {String} name - The unique name of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.description = 'Repeatedly runs another item'\r\n    this.matrix = null\r\n\r\n    // Definition of private properties.\r\n    this._break_if = ''\r\n    this._cycles = []\r\n    this._index = -1\r\n    this._keyboard = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    this._status = constants.STATUS_FINALIZE\r\n    super._complete()\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.matrix = []\r\n    this.vars.cycles = 1\r\n    this.vars.repeat = 1\r\n    this.vars.skip = 0\r\n    this.vars.offset = 'no'\r\n    this.vars.order = 'random'\r\n    this.vars.item = ''\r\n    this.vars.break_if = 'never'\r\n  }\r\n\r\n  /**\r\n   * Parse a definition string and retrieve all properties of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  from_string (script) {\r\n    // Creates a loop from a definition in a string.\r\n    this.comments = []\r\n    this.variables = {}\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script != null) {\r\n      const lines = script.split('\\n')\r\n      for (let i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          const [instruction, ...params] = this.syntax.split(lines[i])\r\n\r\n          switch (instruction) {\r\n            case 'run':\r\n              if (params.length > 0) this.vars.item = params[0]\r\n              break\r\n            case 'setcycle':\r\n              if (params.length <= 2) {\r\n                this._runner._debugger.addError(`Incorrect setcycle command in item ${this.name}`)\r\n                break\r\n              }\r\n              const cycle = params[0]\r\n              const name = params[1]\r\n              let value = this.syntax.remove_quotes(params[2])\r\n              // Check if the value is numeric\r\n              value = isNumber(value) ? Number(value) : value\r\n              // If a python expression, convert to javascript.\r\n              if (value[0] === '=') {\r\n                // Parse the python statement.\r\n                value = this.experiment._runner._pythonParser._prepare(value.slice(1))\r\n                if (value !== null) {\r\n                  value = value.body[0]\r\n                }\r\n              }\r\n              if (this.matrix[cycle] === undefined) {\r\n                this.matrix[cycle] = {}\r\n              }\r\n              this.matrix[cycle][name] = value\r\n              break\r\n            case 'fullfactorial':\r\n              this.matrix = fullfactorial(this.matrix)\r\n              // Set the number of cycles to the length of the generated matrix\r\n              this.vars.cycles = this.matrix.length\r\n              break\r\n            case 'shuffle':\r\n              this.matrix = shuffleVert(this.matrix, params)\r\n              break\r\n            case 'shuffle_horiz':\r\n              this.matrix = shuffleHoriz(this.matrix, params)\r\n              break\r\n            case 'slice':\r\n              this.matrix = this.matrix.slice(...params)\r\n              // Set the number of cycles to the length of the generated matrix\r\n              this.vars.cycles = this.matrix.length\r\n              break\r\n            case 'sort':\r\n              this.matrix = sortCol(this.matrix, ...params)\r\n              break\r\n            case 'sortby':\r\n              this.matrix = sortBy(this.matrix, params)\r\n              break\r\n            case 'reverse':\r\n              this.matrix = reverseRows(this.matrix, params)\r\n              break\r\n            case 'roll':\r\n              this.matrix = roll(this.matrix, ...params)\r\n              break\r\n            case 'weight':\r\n              this.matrix = weight(this.matrix, ...params)\r\n              // Set the number of cycles to the length of the generated matrix\r\n              this.vars.cycles = this.matrix.length\r\n              break\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Prepares the variables for one single cycle within the loop.\r\n   * @param {Number} cycle -The cycle to apply.\r\n   */\r\n  apply_cycle (cycle) {\r\n    // Sets all the loop variables according to the cycle.\r\n    if (cycle in this.matrix) {\r\n      for (const variable in this.matrix[cycle]) {\r\n        // Get the value of the variable.\r\n        let value = this.matrix[cycle][variable]\r\n\r\n        // Check for python expression.\r\n        if (typeof value === 'object') {\r\n          // value contains ast tree, run the parser.\r\n          try {\r\n            // Evaluate the expression\r\n            value = this.experiment._runner._pythonParser._runstatement(value)\r\n          } catch (e) {\r\n            // Error during evaluation.\r\n            this.experiment._runner._debugger.addError(\r\n              'Failed to evaluate expression in in loop item: ' + this.name + ' (' + value + ')')\r\n          }\r\n        }\r\n\r\n        // Set the variable.\r\n        this.experiment.vars.set(variable, value)\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    //  First generate a list of cycle numbers\r\n    this._cycles = []\r\n    this._index = 0\r\n\r\n    // Walk through all complete repeats\r\n    var wholeRepeats = Math.floor(this.vars.get('repeat'))\r\n    for (let j = 0; j < wholeRepeats; j++) {\r\n      for (let i = 0; i < this.vars.cycles; i++) {\r\n        this._cycles.push(i)\r\n      }\r\n    }\r\n\r\n    // Add the leftover repeats.\r\n    const partialRepeats = this.vars.get('repeat') - wholeRepeats\r\n    if (partialRepeats > 0) {\r\n      const allCycles = Array.apply(null, {\r\n        length: this.vars.cycles\r\n      }).map(Number.call, Number)\r\n      const remainder = Math.floor(this.vars.cycles * partialRepeats)\r\n      for (let i = 0; i < remainder; i++) {\r\n        // Calculate random position.\r\n        const position = Math.floor(Math.random() * allCycles.length)\r\n        // Add position to cycles.\r\n        this._cycles.push(position)\r\n        // Remove position from array.\r\n        allCycles.splice(position, 1)\r\n      }\r\n    }\r\n\r\n    // Randomize the list if necessary.\r\n    if (this.vars.get('order') === 'random') {\r\n      this._cycles = shuffle(this._cycles)\r\n    } else {\r\n      const skipVal = this.vars.get('skip')\r\n      // In sequential order, the offset and the skip are relevant.\r\n      if (this._cycles.length < skipVal) {\r\n        this.experiment._runner._debugger.addError('The value of skip is too high in loop item. ' +\r\n          'You cannot skip more cycles than there are in: ' + this.name)\r\n      } else {\r\n        if (this.vars.get('offset') === 'yes') {\r\n          // Get the skip elements.\r\n          const skip = this._cycles.slice(0, skipVal)\r\n\r\n          // Remove the skip elements from the original location.\r\n          this._cycles = this._cycles.slice(skipVal)\r\n\r\n          // Add the skip element to the end.\r\n          this._cycles = this._cycles.concat(skip)\r\n        } else {\r\n          this._cycles = this._cycles.slice(skipVal)\r\n        }\r\n      }\r\n    }\r\n\r\n    this._keyboard = new Keyboard(this.experiment)\r\n\r\n    // Make sure the item to run exists.\r\n    if (this.experiment.items._items[this.vars.item] === 'undefined') {\r\n      this.experiment._runner._debugger.addError('Could not find an item which is called by loop item: ' +\r\n      this.name + ' (' + this.vars.item + ')')\r\n    }\r\n\r\n    super.prepare()\r\n\r\n    this.set_item_onset()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n\r\n    const break_if_val = this.vars.get('break_if')\r\n    this._break_if = ['never', ''].includes(break_if_val)\r\n      ? null\r\n      : this.syntax.compile_cond(break_if_val)\r\n\r\n    // Check if if the cycle must be repeated.\r\n    if (this.experiment.vars.repeat_cycle === 1 && isNumber(this._index)) {\r\n      this.experiment._runner._debugger.msg('Repeating cycle: ' + this._index)\r\n      this._cycles.push(this._index)\r\n      if (this.vars.get('order') === 'random') {\r\n        this._cycles = shuffle(this._cycles)\r\n      }\r\n      this.experiment.vars.repeat_cycle = 0\r\n    }\r\n\r\n    if (this._cycles.length > 0) {\r\n      this._index = this._cycles.shift()\r\n      this.apply_cycle(this._index)\r\n\r\n      if (this._break_if !== null) {\r\n        this.python_workspace['this'] = this\r\n\r\n        const breakIf = this.syntax.eval_text(this._break_if, null, true)\r\n\r\n        if (this.python_workspace._eval(breakIf) === true) {\r\n          this._complete()\r\n          return\r\n        }\r\n      }\r\n\r\n      if (this._runner._itemStore._items[this.vars.item].type === 'sequence') {\r\n        this.experiment._runner._itemStore.prepare(this.vars.item, this)\r\n      } else {\r\n        this.experiment._runner._itemStore.execute(this.vars.item, this)\r\n      }\r\n    } else {\r\n      // Break the loop.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport Keyboard from '../backends/keyboard.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a Sequence item.\r\n * @extends Item\r\n */\r\nexport default class Sequence extends Item {\r\n  /** The sequence class controls the running of a series of items. */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Create and set private properties.\r\n    this._index = -1\r\n    this._items = null\r\n    this._keyboard = null\r\n\r\n    // Create and set public properties.\r\n    this.description = 'Runs a number of items in sequence'\r\n    this.flush_keyboard = 'yes'\r\n    this.items = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the prepare complete phase of an item. */\r\n  _prepare_complete () {\r\n    // Generate the items list for the run cycle.\r\n    if (this._index < this.items.length) {\r\n      if ((this.items[this._index].item in this._runner._itemStore._items) === false) {\r\n        this._runner._debugger.addError('Could not find a child item which is called by sequence item: ' + this.name + ' (' + this.items[this._index].item.name + ')')\r\n      } else {\r\n        // Increase the current index.\r\n        this._index++\r\n\r\n        // Add the item to the internal list.\r\n        this._items.push({\r\n          'item': this.items[this._index - 1].item,\r\n          'cond': this.syntax.compile_cond(this.items[this._index - 1].cond)\r\n        })\r\n\r\n        // Prepare the item.\r\n        this._runner._itemStore.prepare(this.items[this._index - 1].item, this)\r\n      }\r\n    } else {\r\n      // Prepare process is done, start execution.\r\n      this._index = 0\r\n\r\n      // Remove the prepare phase form the stack.\r\n      this._runner._itemStack.pop()\r\n\r\n      // Check if this sequence is part of a parent sequence and must jump back in the prepare phase.\r\n      if (this._parent.type === 'sequence') {\r\n        this._parent._prepare_complete()\r\n      } else {\r\n        // Execute the next cycle of the sequence itself.\r\n        this._runner._itemStore.run(this.name, this._parent)\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.items = []\r\n    this.vars.flush_keyboard = 'yes'\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Parses a definition string.\r\n    this.variables = {}\r\n    this.comments = []\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          var tokens = this.syntax.split(lines[i])\r\n          if ((tokens.length > 0) && (tokens[0] === 'run')) {\r\n            var item = tokens[1]\r\n            var cond = 'always'\r\n            if (tokens.length > 2) {\r\n              cond = tokens[2]\r\n            }\r\n            // Push the item and condition definition to the items list.\r\n            this.items.push({\r\n              'item': item,\r\n              'cond': cond\r\n            })\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Inherited.\r\n    super.prepare()\r\n\r\n    // Create a keyboard to flush responses at the start of the run phase\r\n    if (this.vars.flush_keyboard === 'yes') {\r\n      this._keyboard = new Keyboard(this.experiment)\r\n    } else {\r\n      this._keyboard = null\r\n    }\r\n\r\n    // Generate the items list for the run cycle.\r\n    this._index = 0\r\n    this._items = []\r\n\r\n    // Prepare the items.\r\n    this._prepare_complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Check if all items have been processed.\r\n    if (this._index < this._items.length) {\r\n      // Flush the keyboard at the beginning of the sequence.\r\n      if ((this._index === 0) && (this.vars.flush_keyboard === 'yes')) {\r\n        this._keyboard.flush()\r\n      }\r\n\r\n      // Increase the current index.\r\n      this._index++\r\n      const currentItem = this._items[this._index - 1]\r\n\r\n      // Set the workspace.\r\n      this._runner._pythonWorkspace['self'] = this\r\n\r\n      // Check if the item may run.\r\n      if (this._runner._pythonWorkspace._eval(currentItem.cond) === true) {\r\n        // run the current item of the sequence object.\r\n        this._runner._itemStore.run(currentItem.item, this)\r\n      } else {\r\n        // Execute the next cycle of the sequence itself.\r\n        this.run()\r\n      }\r\n    } else {\r\n      // sequence is finalized.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import sortBy from 'lodash/sortBy'\nimport isFunction from 'lodash/isFunction'\n\nimport Item from './item.js'\nimport { constants } from '../system/constants.js'\n\n/**\n * Class representing coroutines\n * @extends Item\n */\nexport default class Coroutines extends Item {\n  constructor (experiment, name, script) {\n    // Inherited create.\n    super(experiment, name, script)\n    // Definition of public properties.\n    this.description = 'Repeatedly runs another item'\n    // The tasks to perform\n    this.tasks = []\n    // The tasks to perform this iteration\n    this.schedule = []\n    // Process the script.\n    this.from_string(script)\n  }\n\n  from_string (script) {\n    if (script === null) return\n    for (let s of script.split('\\n')) {\n      const [cmd, arglist, kwdict] = this.experiment.syntax.parse_cmd(s)\n      if (cmd === 'set') {\n        const [variable, value] = arglist\n        this.vars[variable] = value\n      }\n      if (cmd === 'run' && arglist.length) {\n        const task = {\n          item_name: arglist.shift(),\n          start_time: kwdict.start || 0,\n          end_time: kwdict.end || 0,\n          run_if: kwdict.runif || 'always'\n        }\n        this.tasks.push(task)\n      }\n    }\n  }\n\n  prepare () {\n    this._runner._debugger.addMessage(`Preparing coroutines item '${this.name}'`)\n    this.schedule = this.tasks.reduce((result, taskParams) => {\n      const item_name = this._runner._syntax.eval_text(taskParams.item_name, this.vars)\n      const item = this._runner._itemStore._items[item_name]\n      if (!item) {\n        const msg = `Coroutines '${this.name}' - could not find item: ${item_name}`\n        this._runner._debugger.addError(msg)\n        throw new Error(msg)\n      }\n      this._runner._pythonWorkspace['self'] = this\n      if (this._runner._pythonWorkspace._eval(taskParams.run_if) === true) {\n        const start_time = this._runner._syntax.eval_text(taskParams.start_time, this.vars)\n        const end_time = this._runner._syntax.eval_text(taskParams.end_time, this.vars)\n        result.push(new Task(item, item_name, start_time, end_time,\n          taskParams.item_name === this.vars.get('end_after_item')))\n      }\n      return result\n    }, [])\n    super.prepare()\n  }\n\n  run () {\n    this._runner._debugger.addMessage(`Running coroutines item '${this.name}'`)\n    super.run()\n    // Prepare all tasks\n    for (let task of this.schedule) {\n      this._runner._itemStore.prepare(task.item_name, this)\n    }\n    this.schedule = sortBy(this.schedule, 'start_time')\n    // Launch all tasks and wrap them in the coroutine helper\n    for (let task of this.schedule) {\n      this._runner._debugger.addMessage(`Launching task '${task.item_name}'`)\n      task.launch()\n    }\n\n    this.active = []\n    this.dt = 0\n    this.t0 = performance.now()\n    this.running = true\n\n    this._loop()\n  }\n\n  _loop () {\n    while (this.schedule.length > 0 && this.schedule[0].started(this.dt)) {\n      this.active.push(this.schedule.shift())\n    }\n    this.active = sortBy(this.active, 'end_time')\n    let _active = []\n    for (let task of this.active) {\n      let status = task.step()\n      if (status === task.RUNNING) {\n        _active.push(task)\n        continue\n      }\n      if (status === task.ABORTED) {\n        this.running = false\n      }\n    }\n    this.active = _active\n    while (this.active.length > 0 && this.active[0].stopped(this.dt)) {\n      this.active.shift()\n    }\n\n    this.dt = performance.now() - this.t0\n    if (this.running && this.dt < this.vars.get('duration') &&\n      ![constants.TIMER_BREAK, constants.TIMER_EXIT, constants.TIMER_ERROR]\n        .includes(this._runner._events._state)) {\n      setTimeout(this._loop.bind(this), 0) // The well-known trick to deal with JS async nature...\n    } else {\n      // Kill all remaining tasks\n      for (let task of this.active) {\n        this._runner._debugger.addMessage(`Killing task '${task.item_name}'`)\n        task.kill()\n      }\n      this._complete()\n    }\n  }\n}\n\nclass Task {\n  UNINITIALISED = 0\n  RUNNING = 1\n  FINISHED = 2\n  ABORTED = -1\n\n  constructor (item, item_name, start_time, end_time, abort_on_end) {\n    this.item = item\n    this.item_name = item_name\n    this.start_time = start_time\n    this.end_time = end_time\n    this.abort_on_end = abort_on_end\n    this.state = this.UNINITIALISED\n    this._coroutine = null\n    this.step = () => { throw new Error('Task has not been initialized') }\n  }\n\n  launch () {\n    if (!isFunction(this.item.coroutine)) {\n      throw new Error(`Item ${this.item_name} does not have correct coroutine implementation`)\n    }\n    this._coroutine = this.item.coroutine()\n    this._coroutine.next()\n    this.step = () => {\n      // console.log(`Stepping ${this.item_name}`)\n      const { value, done } = this._coroutine.next(true)\n      if (value === false) {\n        this.state = this.ABORTED\n        return this.ABORTED\n      }\n      if (done === true) {\n        let newState\n        if (this.abort_on_end) {\n          newState = this.ABORTED\n        } else {\n          newState = this.FINISHED\n        }\n        this.state = newState\n        return this.state\n      }\n      return this.state // Should be this.RUNNING\n    }\n    this.state = this.RUNNING\n  }\n\n  started (dt) {\n    return dt >= this.start_time\n  }\n\n  stopped (dt) {\n    if (dt < this.end_time) {\n      return false\n    }\n    return this.kill()\n  }\n\n  kill () {\n    let response = this._coroutine.next(false)\n    if (response.done === true) {\n      this.state = this.FINISHED\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/** Class representing a mouse device. */\r\nexport default class Mouse {\r\n  /**\r\n   * Create an object which represents a mouse device.\r\n   * @param {Object} experiment - The experiment to which the logger belongs.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} buttonList - List of acceptable response buttons.\r\n   * @param {Boolean} visible - Toggle for showing the mouse cursor.\r\n   */\r\n  constructor (experiment, timeOut, buttonList, visible) {\r\n    // Create and set public properties.\r\n    this._experiment = experiment\r\n    this._timeOut = (typeof timeOut === 'undefined') ? null : timeOut\r\n    this._buttonList = (typeof buttonList === 'undefined') ? null : buttonList\r\n    this._visible = (typeof visible === 'undefined') ? false : visible\r\n\r\n    // Set constant properties.\r\n    this._SYNONIEM_MAP = [\r\n      ['1', 'left_button'],\r\n      ['2', 'middle_button'],\r\n      ['3', 'right_button'],\r\n      ['4', 'scroll_up'],\r\n      ['5', 'scroll_down']\r\n    ]\r\n  }\r\n\r\n  /**\r\n   * Convert all response values to their default values (remove synoniems).\r\n   * @param {Array} responses - A list of response values.\r\n   * @return {Array} - List of default values for the given responses.\r\n   */\r\n  _get_default_from_synoniem (responses) {\r\n    // Return the default synoniem value from a response.\r\n    var defaults = []\r\n    for (var i = 0; i < responses.length; i++) {\r\n      var synoniem = this._synonyms(responses[i])\r\n      defaults.push(synoniem[0])\r\n    }\r\n    return defaults\r\n  }\r\n\r\n  /**\r\n   * Set the configuration for the mouse backend.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} buttonList - List of acceptable response buttons.\r\n   * @param {Boolean} visible - Toggle for showing the mouse cursor.\r\n   */\r\n  _set_config (timeOut, buttonList, visible) {\r\n    // Set mouse properties.\r\n    this._timeOut = timeOut\r\n    this._buttonList = buttonList\r\n    this._visible = visible\r\n  }\r\n\r\n  /**\r\n   * Convert a response value to its default value (remove synoniem).\r\n   * @param {String} button - A response.\r\n   * @return {String|Null} - Default value of the response or null if none.\r\n   */\r\n  _synonyms (button) {\r\n    if (typeof button !== 'undefined') {\r\n      for (var i = 0; i < this._SYNONIEM_MAP.length; i++) {\r\n        for (var j = 0; j < this._SYNONIEM_MAP[i].length; j++) {\r\n          if (this._SYNONIEM_MAP[i][j] === button) {\r\n            return this._SYNONIEM_MAP[i]\r\n          }\r\n        }\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  /** Clear all pending mouse input. */\r\n  flush () {\r\n    // Always returns false because flusihing is not possible.\r\n    return false\r\n  }\r\n\r\n  /**\r\n   * Collects a single mouse click.\r\n   * @param {Number} timeOut - Duration in ms for time out.\r\n   * @param {Array} buttonList - List of acceptable response buttons.\r\n   * @param {Boolean} visible - Toggle for showing the mouse cursor.\r\n   */\r\n  get_click (timeOut, buttonList, visible) {\r\n    // Collects a single mouse click.\r\n    this._timeOut = (typeof timeOut === 'undefined') ? this._timeOut : timeOut\r\n    this._buttonList = (typeof buttonList === 'undefined') ? this._buttonList : buttonList\r\n    this._visible = (typeof visible === 'undefined') ? this._visible : visible\r\n\r\n    if (this._experiment !== null) {\r\n      // Hide or show the mouse.\r\n      this.show_cursor(this._visible)\r\n\r\n      // Set the event processor.\r\n      this._experiment._runner._events._run(this._timeOut, constants.RESPONSE_MOUSE, this._buttonList)\r\n    };\r\n  }\r\n\r\n  /**\r\n   *  Returns the current mouse position. !Warning: this methods uses the state in\r\n   *  the last known mouse move, not the current state.\r\n   *  @param {Object} - Object with time, x and y coordinate of the mouse cursor.\r\n   */\r\n  get_pos () {\r\n    // Returns the current mouse position. !Warning: this methods uses the state in the last known mouse respone, not the current state.\r\n    if (this._experiment._runner._events._mouseMoveEvent !== null) {\r\n      return {\r\n        'rtTime': this._experiment._runner._events._mouseMoveEvent.rtTime,\r\n        'x': this._experiment._runner._events._mouseMoveEvent.event.clientX,\r\n        'y': this._experiment._runner._events._mouseMoveEvent.event.clientY\r\n      }\r\n    } else {\r\n      return {\r\n        'rtTime': -1,\r\n        'x': -1,\r\n        'y': -1\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   *  Returns the current mouse position. !Warning: this methods uses the state in\r\n   *  the last known mouse press, not the current state.\r\n   *  @param {Object} - Object with the state of the mouse buttons.\r\n   */\r\n  get_pressed () {\r\n    // Returns the current button state of the mouse buttons. !Warning: this methods uses the state in the last known mouse respone, not the current state.\r\n    if (this._experiment._runner.events._mouse_press !== null) {\r\n      return {\r\n        'buttons': [(this._experiment._runner._events._mouseDownEvent.event.button === 0),\r\n          (this._experiment._runner._events._mouseDownEvent.event.button === 1),\r\n          (this._experiment._runner._events._mouseDownEvent.event.button === 2)\r\n        ]\r\n      }\r\n    } else {\r\n      return {\r\n        'buttons': [null, null, null]\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Sets the current position of the cursor. */\r\n  set_pos (pos) {}\r\n\r\n  /**\r\n   * Shows or hides the mouse cursor.\r\n   * @param {Boolean} show - If true the mouse cursor is shown.\r\n   */\r\n  show_cursor (show) {\r\n    // Set the property\r\n    this._visible = show\r\n\r\n    // Immediately changes the visibility of the mouse cursor.\r\n    if (show === true) {\r\n      // Show the mouse cursor.\r\n      this._experiment._runner._renderer.view.style.cursor = 'default'\r\n    } else {\r\n      // Set the cursor visibility to none.\r\n      this._experiment._runner._renderer.view.style.cursor = 'none'\r\n    }\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport Keyboard from '../backends/keyboard.js'\r\nimport Mouse from '../backends/mouse.js'\r\nimport {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a GeneralResponse item.\r\n * @extends Item\r\n */\r\nexport default class GenericResponse extends Item {\r\n  /** The sequence class controls the running of a serie of items. */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Create and set private properties.\r\n    this._allowed_responses = null\r\n    this._duration = 0\r\n    this._duration_func = null\r\n    this._keyboard = null\r\n    this._mouse = null\r\n    this._responsetype = constants.RESPONSE_NONE\r\n    this._timeout = -1\r\n\r\n    // Create and set public properties.\r\n    this.auto_response = 'a'\r\n    this.process_feedback = false\r\n    this.synonyms = null\r\n  }\r\n\r\n  /** Implements the complete phase of the general response item. */\r\n  _complete () {\r\n    // Check if a timeout has occured which must be treaded as a response.\r\n    if ((typeof this.vars.timeout !== 'undefined') &&\r\n      ((this.experiment._runner._events._timeStamp - this.experiment.vars.get('time_' + this.name)) > this.vars.timeout)) {\r\n      // Process the timeout none response.\r\n      this.process_response_timeout()\r\n    }\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /**\r\n     * Implements the update response phase of the general response item.\r\n     * @param {Object} response - The response object which is evaluated.\r\n     */\r\n  _update (response) {\r\n    if (response !== null) {\r\n      // Implements the update response phase of the item.\r\n      if ((this._responsetype === constants.RESPONSE_KEYBOARD) &&\r\n        (response.type === constants.RESPONSE_KEYBOARD)) {\r\n        this.process_response_keypress(response)\r\n      } else if ((this._responsetype === constants.RESPONSE_MOUSE) &&\r\n        (response.type === constants.RESPONSE_MOUSE)) {\r\n        this.process_response_mouseclick(response)\r\n      }\r\n    }\r\n  }\r\n\r\n  /** The auto responder method for simulated keyboard interaction. */\r\n  auto_responser () {}\r\n\r\n  /** The auto responder method for simulated mouse interaction. */\r\n  auto_responser_mouse () {}\r\n\r\n  /** Prepare the list with allowed responses */\r\n  prepare_allowed_responses () {\r\n    // Prepare the allowed responses.\r\n    if (this.vars.get('allowed_responses') === null) {\r\n      this._allowed_responses = null\r\n    } else {\r\n      // Create a list of allowed responses that are separated by semicolons.\r\n      // Also trim any whitespace.\r\n      const allowed_responses = String(this.vars.get('allowed_responses')).split(';')\r\n        .map(item => (typeof item === 'string')\r\n          ? item.replace(/^\"(.*)\"$/g, '$1').trim()\r\n          : item)\r\n      if (this.vars.duration === 'keypress') {\r\n        // this._allowed_responses = allowed_responses;\r\n        this._allowed_responses = this._keyboard._get_default_from_synoniem(allowed_responses)\r\n      } else if (this.vars.duration === 'mouseclick') {\r\n        // For mouse responses, we don't check if the allowed responses make sense.\r\n        this._allowed_responses = this._mouse._get_default_from_synoniem(allowed_responses)\r\n      }\r\n\r\n      // If allowed responses are provided, the list should not be empty.\r\n      if (this._allowed_responses.length === 0) {\r\n        this.experiment._runner._debugger.addError(\r\n          'Defined responses are not valid in keyboard_response: ' +\r\n          this.name + ' (' + this.vars.get('allowed_responses') + ')')\r\n      }\r\n    }\r\n  }\r\n\r\n  // Prepare the duration of the stimulus interaction. */\r\n  prepare_duration () {\r\n    // Get duration.\r\n    this._duration = this.syntax.remove_quotes(this.vars.get('duration'))\r\n\r\n    // Prepare the duration.\r\n    if (this._duration !== null) {\r\n      if ((this._duration === 'keypress') || (this._duration === 'mouseclick') ||\r\n                (this._duration === 'sound') || (this._duration === 'video')) {\r\n        this._duration = -1\r\n        if (this.vars.duration === 'keypress') {\r\n          this.prepare_duration_keypress()\r\n          this._responsetype = constants.RESPONSE_KEYBOARD\r\n        } else if (this.vars.duration === 'mouseclick') {\r\n          this.prepare_duration_mouseclick()\r\n          this._responsetype = constants.RESPONSE_MOUSE\r\n        } else if (this.vars.duration === 'sound') {\r\n          this._responsetype = constants.RESPONSE_SOUND\r\n        } else if (this.vars.duration === 'video') {\r\n          this._responsetype = constants.RESPONSE_VIDEO\r\n        }\r\n      } else {\r\n        // Prepare a duration in milliseconds\r\n        this._duration = Number(this._duration)\r\n        if (this._duration === 0) {\r\n          this._responsetype = constants.RESPONSE_NONE\r\n        } else {\r\n          this._responsetype = constants.RESPONSE_DURATION\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Prepare the system for a keyboard duration interval. */\r\n  prepare_duration_keypress () {\r\n    // Prepare a keyboard duration.\r\n    this._keyboard = new Keyboard(this.experiment)\r\n    if (this.experiment.auto_response === true) {\r\n      this._duration_func = this.auto_responder\r\n    } else {\r\n      var final_duration = (this._timeout !== -1) ? this._timeout : this._duration\r\n      this._keyboard._set_config(final_duration, this._allowed_responses)\r\n    }\r\n  }\r\n\r\n  /** Prepare the system for a mouseclick duration interval. */\r\n  prepare_duration_mouseclick () {\r\n    // Prepare a mouseclick duration.\r\n    this._mouse = new Mouse(this.experiment)\r\n    if (this.experiment.auto_response === true) {\r\n      this._duration_func = this.auto_responder_mouse\r\n    } else {\r\n      var final_duration = (this._timeout !== -1) ? this._timeout : this._duration\r\n      this._mouse._set_config(final_duration, this._allowed_responses, false)\r\n    }\r\n  }\r\n\r\n  /** Prepare the system for a timeout. */\r\n  prepare_timeout () {\r\n    // Prepare the timeout.\r\n    if (this.vars.get('timeout') !== null) {\r\n      if (typeof this.vars.timeout === 'number') {\r\n        // Prepare a duration in milliseconds\r\n        this._timeout = this.vars.timeout\r\n      } else {\r\n        this._timeout = -1\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Select the type of stimulus response processing. */\r\n  process_response () {\r\n    // Start stimulus response cycle.\r\n    switch (this._responsetype) {\r\n    case constants.RESPONSE_NONE:\r\n      // Duration is 0, so complete the stimulus/response cycle.\r\n      this._status = constants.STATUS_FINALIZE\r\n      this._complete()\r\n      break\r\n    case constants.RESPONSE_DURATION:\r\n      this.sleep_for_duration()\r\n      break\r\n    case constants.RESPONSE_KEYBOARD:\r\n      this._keyboard.get_key()\r\n      break\r\n    case constants.RESPONSE_MOUSE:\r\n      this._mouse.get_click()\r\n      break\r\n    case constants.RESPONSE_SOUND:\r\n      this._sampler.wait()\r\n      break\r\n    case constants.RESPONSE_VIDEO:\r\n      this._video_player.wait()\r\n      break\r\n    }\r\n  }\r\n\r\n  /** Sets the mouse coordinates based **/\r\n  set_mouse_coordinates (clientX, clientY) {\r\n    // We need the top-left and scaling of the viewport to set the mouse\r\n    // coordinates so that 0,0 corresponds to the display center. The scaling\r\n    // needs to be taken into account also such that the viewport always has\r\n    // the same size in cursor coordinates, even if it's scaled down.\r\n    const rect = this._runner._renderer.view.getBoundingClientRect()\r\n    const scale = Math.min(\r\n      (rect.right - rect.left) / this.experiment.vars.width,\r\n      (rect.bottom - rect.top) / this.experiment.vars.height\r\n    )\r\n    const center_x = scale * this.experiment.vars.width / 2\r\n    const center_y = scale * this.experiment.vars.height / 2\r\n    this.experiment.vars.cursor_x = (clientX - center_x - rect.left) / scale\r\n    this.experiment.vars.cursor_y = (clientY - center_y - rect.top) / scale\r\n  }\r\n\r\n  /** Process a keyboard response. */\r\n  process_response_keypress (retval) {\r\n    this.experiment._start_response_interval = this.sri\r\n    this.experiment._end_response_interval = retval.rtTime\r\n    this.experiment.vars.response = this.syntax.sanitize(retval.resp)\r\n    this.synonyms = this._keyboard._synonyms(this.experiment.vars.response)\r\n    this.response_bookkeeping()\r\n  }\r\n\r\n  /** Process a mouse click response. */\r\n  process_response_mouseclick (retval) {\r\n    this.experiment._start_response_interval = this.sri\r\n    this.experiment._end_response_interval = retval.rtTime\r\n    this.experiment.vars.response = retval.resp\r\n    this.synonyms = this._mouse._synonyms(this.experiment.vars.response)\r\n    this.set_mouse_coordinates(retval.event.clientX, retval.event.clientY)\r\n    this.response_bookkeeping()\r\n  }\r\n\r\n  /** Process a time out response. */\r\n  process_response_timeout () {\r\n    this.experiment._start_response_interval = this.sri\r\n    this.experiment._end_response_interval = this.experiment._runner._events._timeStamp\r\n    this.experiment.vars.response = 'None'\r\n    this.synonyms = ['None', 'none']\r\n    this.response_bookkeeping()\r\n  }\r\n\r\n  /** General response logging after a stimulus/response. */\r\n  response_bookkeeping () {\r\n    // The respone and response_time variables are always set, for every response item\r\n    this.experiment.vars.set('response_time', this.experiment._end_response_interval - this.experiment._start_response_interval)\r\n    this.experiment.vars.set('response_' + this.name, this.experiment.vars.get('response'))\r\n    this.experiment.vars.set('response_time_' + this.name, this.experiment.vars.get('response_time'))\r\n    this.experiment._start_response_interval = null\r\n\r\n    // But correctness information is only set for dedicated response items,\r\n    // such as keyboard_response items, because otherwise we might confound the feedback\r\n    if (this.process_feedback === true) {\r\n      this.experiment.vars.correct = ''\r\n      if (this.vars.get('correct_response') !== null) {\r\n        // If a correct_response has been defined, we use it to determine accuracy etc.\r\n        if (this.synonyms !== null) {\r\n          if (this.synonyms.includes(this.syntax.remove_quotes(this.vars.get('correct_response').toString()))) {\r\n            this.experiment.vars.correct = 1\r\n            this.experiment.vars.total_correct = this.experiment.vars.total_correct + 1\r\n          } else {\r\n            this.experiment.vars.correct = 0\r\n          }\r\n        }\r\n      }\r\n      // Do some response bookkeeping\r\n      this.experiment.vars.total_response_time = this.experiment.vars.total_response_time + this.experiment.vars.response_time\r\n      this.experiment.vars.total_responses = this.experiment.vars.total_responses + 1\r\n      this.experiment.vars.accuracy = Math.round(100.0 * this.experiment.vars.total_correct / this.experiment.vars.total_responses)\r\n      this.experiment.vars.acc = this.experiment.vars.accuracy\r\n      this.experiment.vars.average_response_time = Math.round(this.experiment.vars.total_response_time / this.experiment.vars.total_responses)\r\n      this.experiment.vars.avg_rt = this.experiment.vars.average_response_time\r\n      this.experiment.vars.set('correct_' + this.name, this.vars.correct)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Sets or resets the start of the stimulus response interval.\r\n     * @param {Boolean} reset - If true reset the sri value.\r\n     */\r\n  set_sri (reset) {\r\n    // Sets the start of the response interval.\r\n    if (reset === true) {\r\n      this.sri = self.vars.get('time_' + this.name)\r\n      this.experiment._start_response_interval = this.vars.get('time_' + this.name)\r\n    }\r\n    if (!this.experiment._start_response_interval) {\r\n      this.sri = this.experiment.vars.get('time_' + this.name)\r\n    } else {\r\n      this.sri = this.experiment._start_response_interval\r\n    }\r\n  }\r\n\r\n  /** Sleep for a specified time. */\r\n  sleep_for_duration () {\r\n    // Sleep for a specified time.\r\n    this.sleep(this._duration)\r\n  }\r\n\r\n  /** Implements the prepare phase of the general response item. */\r\n  prepare () {\r\n    // Implements the prepare phase of the item.\r\n    this.prepare_timeout()\r\n    this.prepare_allowed_responses()\r\n    this.prepare_duration()\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport Canvas from '../backends/canvas.js'\r\n\r\n/**\r\n * Class representing a Sketchpad item.\r\n * @extends GeneralResponse\r\n */\r\nexport default class Sketchpad extends GenericResponse {\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n\r\n    // Create and set public properties.\r\n    this.canvas = new Canvas(experiment, false)\r\n    this.elements = []\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /**\r\n     * Sort function used for determining the draw index (z-index) of alle elemente.\r\n     * @param {Object} a - The first object to compare.\r\n     * @param {Object} b - The second object to compare.\r\n     * @return {Number} - The result of the comparison.\r\n     */\r\n  _compare (a, b) {\r\n    // Sort function used for determining the draw index (z-index) of alle elemente.\r\n    if (a.z_index() < b.z_index()) { return 1 } else if (a.z_index() > b.z_index()) { return -1 } else { return 0 }\r\n  }\r\n\r\n  /** Implements the complete phase of the Sketchpad item. */\r\n  _complete () {\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    // Resets all item variables to their default value.\r\n    this.elements = []\r\n    this.vars.duration = 'keypress'\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Define and reset variables to their defaults.\r\n    this.variables = {}\r\n    this.comments = []\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      const lines = script.split('\\n')\r\n      for (let i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          const tokens = this.syntax.split(lines[i])\r\n          if ((tokens.length > 0) && (tokens[0] === 'draw')) {\r\n            if (this.experiment.items._isClass(tokens[1]) === true) {\r\n              var element = this.experiment.items._newElementClass(tokens[1], this, lines[i])\r\n              this.elements.push(element)\r\n            } else {\r\n              this.experiment._runner._debugger.addError('Failed to parse definition: ' + tokens[1])\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      // Sort the elements usin the z-index.\r\n      this.elements.sort(this._compare)\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Clear the canvas.\r\n    this.canvas.clear()\r\n\r\n    // Draw the elements.\r\n    for (let i = 0; i < this.elements.length; i++) {\r\n      if (this.elements[i].is_shown() === true) {\r\n        this.elements[i].draw()\r\n      }\r\n    }\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of the Sketschpad. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Check if background color needs to be changed\r\n    const backgroundColor = this.vars.get('background')\r\n    if (backgroundColor) {\r\n      this.canvas._styles.background_color = backgroundColor\r\n    }\r\n\r\n    // Set the onset and start the stimulus response process.\r\n    this.set_item_onset(this.canvas.show())\r\n    this.set_sri(false)\r\n    this.process_response()\r\n  }\r\n\r\n  * coroutine () {\r\n    yield\r\n    this.set_item_onset(this.canvas.show())\r\n  }\r\n}\r\n","import Sketchpad from './sketchpad.js'\r\n\r\n/**\r\n * Class representing a feedback item.\r\n * @extends Sketchpad\r\n */\r\nexport default class Feedback extends Sketchpad {\r\n  /**\r\n   * Create a feedback which show feedback info to the subhect.\r\n   * @param {Object} experiment - The experiment item to which the item belongs.\r\n   * @param {String} name - The unique name of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.description = 'Provides feedback to the participant'\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Inherited.\r\n    super._complete()\r\n\r\n    // Reset feedback variables.\r\n    if (this.vars.reset_variables === 'yes') {\r\n      this.experiment.reset_feedback()\r\n    }\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    // Inherited.\r\n    super.reset()\r\n\r\n    // Reset the variables.\r\n    this.vars.reset_variables = 'yes'\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    this._parent._prepare_complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.prepare()\r\n    super.run()\r\n  }\r\n}\r\n","import Item from './item.js'\r\n\r\n/**\r\n * Class representing an inline item.\r\n * @extends Item\r\n */\r\nexport default class InlineScript extends Item {\r\n  /**\r\n     * Create an inline item which executes inline python code.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'Executes Python code'\r\n\r\n    // Define and set the public properties.\r\n    this._prepare_run = false\r\n    this._prepare_tree = null\r\n    this._run_tree = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Check if the parser is in pause mode and must be restarted.\r\n    if (this.experiment._runner._pythonParser._status === 1) {\r\n      // Process the current active node.\r\n      this.experiment._runner._pythonParser._process_nodes()\r\n    } else {\r\n      if (this._prepare_run === true) {\r\n        // Inherited prepare.\r\n        super.prepare()\r\n      } else {\r\n        // Inherited.\r\n        super._complete()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the complete script phase of an item. */\r\n  _complete_script () {\r\n    // Added for video script functionaliry.\r\n    this._complete()\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.vars._prepare = ''\r\n    this.vars._run = ''\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Parses a definition string.\r\n    this.reset()\r\n\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      var read_run_lines = false\r\n      var read_prepare_lines = false\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        var tokens = this.syntax.split(lines[i])\r\n        if ((tokens !== null) && (tokens.length > 0)) {\r\n          switch (tokens[0]) {\r\n            case 'set':\r\n              this.parse_variable(lines[i])\r\n              break\r\n            case '__end__':\r\n              read_run_lines = false\r\n              read_prepare_lines = false\r\n              break\r\n            case '___prepare__':\r\n              read_prepare_lines = true\r\n              break\r\n            case '___run__':\r\n              read_run_lines = true\r\n              break\r\n            default:\r\n              if (read_run_lines === true) {\r\n                this.vars._run = this.vars._run + lines[i] + '\\n'\r\n              } else if (read_prepare_lines === true) {\r\n                this.vars._prepare = this.vars._prepare + lines[i] + '\\n'\r\n              }\r\n          }\r\n        } else {\r\n          if (read_run_lines === true) {\r\n            this.vars._run = this.vars._run + lines[i] + '\\n'\r\n          } else if (read_prepare_lines === true) {\r\n            this.vars._prepare = this.vars._prepare + lines[i] + '\\n'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Compile the script code to ast trees.\r\n    this._prepare_tree = this.experiment._runner._pythonParser._parse(this.vars._prepare)\r\n    this._run_tree = this.experiment._runner._pythonParser._parse(this.vars._run)\r\n\r\n    // Execute the run code.\r\n    if (this._prepare_tree !== null) {\r\n      // Set the current item.\r\n      this.experiment._runner._events._currentItem = this\r\n\r\n      // Set the prepare run toggle.\r\n      this._prepare_run = true\r\n\r\n      // Record the onset of the current item.\r\n      this.set_item_onset()\r\n\r\n      // Start the parser\r\n      this.experiment._runner._pythonParser._run(this, this._prepare_tree)\r\n    } else {\r\n      // Inherited.\r\n      super.prepare()\r\n    }\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Set the prepare run toggle.\r\n    this._prepare_run = false\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    // Execute the run code.\r\n    if (this._run_tree !== null) {\r\n      // Start the parser\r\n      this.experiment._runner._pythonParser._run(this, this._run_tree)\r\n    } else {\r\n      // To prevent prepeare script from running twice.\r\n      this.experiment._runner._pythonParser._status = 0\r\n\r\n      // No script, so jump to compelte.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import Item from './item.js'\r\n\r\n/**\r\n * Class representing an inline item.\r\n * @extends Item\r\n */\r\nexport default class InlineJavaScript extends Item {\r\n  /**\r\n     * Create an inline item which executes inline python code.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n    // Define and set the public properties.\r\n    this.description = 'Executes JavaScript code (ECMA 5.1)'\r\n    this.workspace = experiment._javascriptWorkspace\r\n    // Process the script\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.vars._prepare = ''\r\n    this.vars._run = ''\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    // Parses a definition string.\r\n    this.reset()\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      var read_run_lines = false\r\n      var read_prepare_lines = false\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        var tokens = this.syntax.split(lines[i])\r\n        if ((tokens !== null) && (tokens.length > 0)) {\r\n          switch (tokens[0]) {\r\n            case 'set':\r\n              this.parse_variable(lines[i])\r\n              break\r\n            case '__end__':\r\n              read_run_lines = false\r\n              read_prepare_lines = false\r\n              break\r\n            case '___prepare__':\r\n              read_prepare_lines = true\r\n              break\r\n            case '___run__':\r\n              read_run_lines = true\r\n              break\r\n            default:\r\n              if (read_run_lines === true) {\r\n                this.vars._run = this.vars._run + lines[i] + '\\n'\r\n              } else if (read_prepare_lines === true) {\r\n                this.vars._prepare = this.vars._prepare + lines[i] + '\\n'\r\n              }\r\n          }\r\n        } else {\r\n          if (read_run_lines === true) {\r\n            this.vars._run = this.vars._run + lines[i] + '\\n'\r\n          } else if (read_prepare_lines === true) {\r\n            this.vars._prepare = this.vars._prepare + lines[i] + '\\n'\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    this.workspace._eval(this.vars._prepare)\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    this.set_item_onset()\r\n    this.workspace._eval(this.vars._run)\r\n    this._complete()\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport Keyboard from '../backends/keyboard.js'\r\n\r\n/**\r\n * Class representing a keyboard response item.\r\n * @extends GenericResponse\r\n */\r\nexport default class KeyboardResponse extends GenericResponse {\r\n  /**\r\n     * Create a keyboard response item which waits for a keyboard response.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.description = 'Collects keyboard responses'\r\n\r\n    // Definition of private properties.\r\n    this._flush = 'yes'\r\n    this._keyboard = new Keyboard(this.experiment)\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    this.auto_response = 'space'\r\n    this.process_feedback = true\r\n    this.vars.allowed_responses = null\r\n    this.vars.correct_response = null\r\n    this.vars.duration = 'keypress'\r\n    this.vars.flush = 'yes'\r\n    this.vars.timeout = 'infinite'\r\n  }\r\n\r\n  /** Implements the prepare phase of the KeyboardResponse. */\r\n  prepare () {\r\n    // Set the internal flush property.\r\n    this._flush = (this.vars.flush) ? this.vars.flush : 'yes'\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of the KeyboardResponse. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    // Flush responses, to make sure that earlier responses are not carried over.\r\n    if (this._flush === 'yes') {\r\n      this._keyboard.flush()\r\n    }\r\n\r\n    this.set_sri()\r\n    this.process_response()\r\n  }\r\n\r\n  * coroutine () {\r\n    const keyDownHandler = (event) => {\r\n      const keypress = this.experiment._runner._events._processKeyboardEvent(event, 1)\r\n      let allowed_responses = 'all'\r\n      if (this.vars.get('allowed_responses')) {\r\n        allowed_responses = this._keyboard._get_default_from_synoniem(\r\n          this.vars.get('allowed_responses').split(';').map(key => key.trim())\r\n        )\r\n      }\r\n\r\n      if (allowed_responses === 'all' || allowed_responses.includes(keypress.resp)) {\r\n        this.response = keypress\r\n      }\r\n    }\r\n\r\n    window.addEventListener('keydown', keyDownHandler)\r\n    yield\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    this.set_sri()\r\n    let proceed = true\r\n    this.response = null\r\n    while (!this.response && proceed) {\r\n      proceed = yield true\r\n    }\r\n    window.removeEventListener('keydown', keyDownHandler)\r\n    if (this.response) this.process_response_keypress(this.response)\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport Mouse from '../backends/mouse.js'\r\n\r\n/**\r\n * Class representing a mouse response item.\r\n * @extends GenericResponse\r\n */\r\nexport default class MouseResponse extends GenericResponse {\r\n  /**\r\n     * Create an mouse response item which waits for a mouse response.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.description = 'Collects mouse responses'\r\n    this.resp_codes = {}\r\n\r\n    // Definition of private properties.\r\n    this._flush = 'yes'\r\n    this._mouse = new Mouse(this.experiment)\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of the Sketschpad. */\r\n  _complete () {\r\n    // Hide the mouse cursor.\r\n    this._mouse.show_cursor(false)\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    this.auto_response = 1\r\n    this.process_feedback = true\r\n    this.resp_codes = {}\r\n    this.resp_codes['0'] = 'timeout'\r\n    this.resp_codes['1'] = 'left_button'\r\n    this.resp_codes['2'] = 'middle_button'\r\n    this.resp_codes['3'] = 'right_button'\r\n    this.resp_codes['4'] = 'scroll_up'\r\n    this.resp_codes['5'] = 'scroll_down'\r\n    this.vars.allowed_responses = null\r\n    this.vars.correct_response = null\r\n    this.vars.duration = 'mouseclick'\r\n    this.vars.flush = 'yes'\r\n    this.vars.show_cursor = 'yes'\r\n    this.vars.timeout = 'infinite'\r\n  }\r\n\r\n  /** Implements the prepare phase of the Sketschpad. */\r\n  prepare () {\r\n    // Set the internal flush property.\r\n    this._flush = (this.vars.flush) ? this.vars.flush : 'yes'\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of the Sketschpad. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    // Show the cursor if defined.\r\n    if (this.vars.show_cursor === 'yes') {\r\n      this._mouse.show_cursor(true)\r\n    }\r\n\r\n    // Flush responses, to make sure that earlier responses are not carried over.\r\n    if (this._flush === 'yes') {\r\n      this._mouse.flush()\r\n    }\r\n\r\n    this.set_sri()\r\n    this.process_response()\r\n  }\r\n\r\n  * coroutine () {\r\n    const mouseDownHandler = (event) => {\r\n      this.response = this.experiment._runner._events._processMouseEvent(event, 1)\r\n    }\r\n\r\n    const touchHandler = (event) => {\r\n      event.button = 0\r\n      event.clientX = event.changedTouches[0].clientX\r\n      event.clientY = event.changedTouches[0].clientY\r\n      this.response = this.experiment._runner._events._processMouseEvent(event, 1)\r\n    }\r\n\r\n    window.addEventListener('mousedown', mouseDownHandler)\r\n    window.addEventListener('touchstart', touchHandler)\r\n\r\n    yield\r\n    // Show the cursor if defined.\r\n    if (this.vars.show_cursor === 'yes') {\r\n      this._mouse.show_cursor(true)\r\n    }\r\n\r\n    // Record the onset of the current item.\r\n    this.set_item_onset()\r\n\r\n    this.set_sri()\r\n    let proceed = true\r\n    this.response = null\r\n    while (!this.response && proceed) {\r\n      proceed = yield true\r\n    }\r\n    window.removeEventListener('mousedown', mouseDownHandler)\r\n    window.removeEventListener('touchstart', touchHandler)\r\n    if (this.response) this.process_response_mouseclick(this.response)\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a logger item.\r\n * @extends Item\r\n */\r\nexport default class Logger extends Item {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} pExperiment - The experiment item to which the item belongs.\r\n     * @param {String} pName - The unique name of the item.\r\n     * @param {String} pScript - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n    this.description = 'Logs experimental data'\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.logvars = []\r\n    this.vars.auto_log = 'yes'\r\n  }\r\n\r\n  /**\r\n     * Parse a definition string and retrieve all properties of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  from_string (script) {\r\n    this.reset()\r\n    if (script !== null) {\r\n      var lines = script.split('\\n')\r\n      for (var i = 0; i < lines.length; i++) {\r\n        if ((lines[i] !== '') && (this.parse_variable(lines[i]) === false)) {\r\n          var tokens = this.syntax.split(lines[i])\r\n          if ((tokens[0] === 'log') && (tokens.length > 0)) {\r\n            this.logvars.push(tokens[1])\r\n          }\r\n        }\r\n      }\r\n    }\r\n    this.logvars.sort()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    if (this._status !== constants.STATUS_FINALIZE) {\r\n      this._status = constants.STATUS_FINALIZE\r\n      this.set_item_onset()\r\n      this.experiment._log.write_vars(\r\n        (this.vars.get('auto_log') === 'yes')\r\n          ? this.logvars.concat(this.experiment.vars.inspect()).sort()\r\n          : this.logvars\r\n      )\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import {\r\n  constants\r\n} from '../system/constants.js'\r\n\r\nlet audioCtx = null\r\ntry {\r\n  audioCtx = new (window.AudioContext || window.webkitAudioContext)()\r\n} catch (e) {\r\n  console.warning('Web Audio API is not supported in this browser')\r\n}\r\n\r\n/** Class representing a sampler. */\r\nexport default class SamplerBackend {\r\n  /**\r\n   * Create a sampler object which controls the sampler device.\r\n   * @param {Object} experiment - The experiment to which the sampler belongs.\r\n   * @param {String} source - The sound source name.\r\n   * @param {Number} volume - The volume to use when playing the sound.\r\n   * @param {Number} pitch - The pitch to use when playing the sound.\r\n   * @param {Number} pan - The pan to use when playing the sound.\r\n   * @param {String} duration - The duration of the sound.\r\n   * @param {Number} fade - The fade to use when playing the sound.\r\n   * @param {Boolean} block - If true use the sound ad a block wave.\r\n   */\r\n  constructor (experiment, source, volume, pitch, pan, duration, fade, block) {\r\n    // Create and set public properties.\r\n    this.block = (typeof block === 'undefined') ? false : block\r\n    this.duration = (typeof duration === 'undefined') ? 'sound' : duration\r\n    this.experiment = experiment\r\n    this.volume = (typeof volume === 'undefined') ? 1 : volume\r\n    this.fade = (typeof fade === 'undefined') ? 0 : fade\r\n    this.pan = (typeof pan === 'undefined') ? 0 : pan\r\n    this.pitch = (typeof pitch === 'undefined') ? 1 : pitch\r\n\r\n    try {\r\n      this.sample = source.data.cloneNode()\r\n    } catch (e) {\r\n      console.error(`Could not play sound:`, source)\r\n      throw e\r\n    }\r\n    this.sample.onended = () => this.experiment._runner._events._audioEnded(this)\r\n\r\n    if (audioCtx) {\r\n      this.source = audioCtx.createMediaElementSource(this.sample)\r\n    } else {\r\n      this.source = this.sample\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Play a sound file.\r\n   * @param {Number} volume - The volume to use when playing the sound.\r\n   * @param {Number} pitch - The pitch to use when playing the sound.\r\n   * @param {Number} pan - The pan to use when playing the sound.\r\n   * @param {String} duration - The duration of the sound.\r\n   * @param {Number} fade - The fade to use when playing the sound.\r\n   * @param {Boolean} block - If true use the sound ad a block wave.\r\n   */\r\n  play (volume, pitch, pan, duration, fade, block) {\r\n    // Check if optional parameters are defined.\r\n    this.block = block || this.block\r\n    this.duration = typeof duration === 'undefined' ? this.duration : duration\r\n    this.volume = typeof volume === 'undefined' ? this.volume : volume\r\n    this.pitch = typeof pitch === 'undefined' ? this.pitch : pitch\r\n    this.pan = typeof pan === 'undefined' ? this.pan : pan\r\n    this.fade = typeof fade === 'undefined' ? this.fade : fade\r\n\r\n    if (audioCtx) {\r\n      if (audioCtx.state === 'suspended') audioCtx.resume()\r\n      this.source.connect(this.applyFilters())\r\n    } else {\r\n      this.source.volume = this.volume\r\n    }\r\n\r\n    this.sample.play()\r\n  }\r\n\r\n  /** Set the blocking of the sound (wait period). */\r\n  wait () {\r\n    // Set the blocking of the sound.\r\n    this.experiment._runner._events._run(this, -1, constants.RESPONSE_SOUND, [])\r\n  }\r\n\r\n  applyFilters () {\r\n    const nodes = [audioCtx.destination]\r\n\r\n    try {\r\n      const gainNode = audioCtx.createGain()\r\n      gainNode.gain.setValueAtTime(this.volume, audioCtx.currentTime)\r\n\r\n      if (this.fade) {\r\n        gainNode.gain.setValueAtTime(0, audioCtx.currentTime)\r\n        gainNode.gain.linearRampToValueAtTime(this.volume, audioCtx.currentTime + this.fade / 1000)\r\n      }\r\n\r\n      nodes.unshift(gainNode)\r\n    } catch (e) {\r\n      console.warning('Unable to apply volume or gain', e)\r\n    }\r\n\r\n    if (this.pan) {\r\n      try {\r\n        nodes.unshift(new StereoPannerNode(audioCtx, { pan: this.pan }))\r\n      } catch (e) {\r\n        console.warning('Unable to apply panning', e)\r\n      }\r\n    }\r\n\r\n    // Connect the filters creating a chain\r\n    for (let i = 0; i < nodes.length; i++) {\r\n      if (nodes[i] !== audioCtx.destination) {\r\n        nodes[i].connect(nodes[i + 1])\r\n      }\r\n    }\r\n\r\n    return nodes.shift(0)\r\n  }\r\n}\r\n","import GenericResponse from './generic_response.js'\r\nimport SamplerBackend from '../backends/sampler.js'\r\n\r\n/**\r\n * Class representing a sampler item.\r\n * @extends GenericResponse\r\n */\r\nexport default class Sampler extends GenericResponse {\r\n  /**\r\n     * Create a sampler  item which plays a sound.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Definition of public properties.\r\n    this.block = false\r\n    this.description = 'Plays a sound file in .wav or .ogg format'\r\n\r\n    // Definition of private properties.\r\n    this._sample = null\r\n    this._sampler = null\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Reset all item variables to their default value. */\r\n  reset () {\r\n    this.block = false\r\n    this.vars.sample = ''\r\n    this.vars.pan = 0\r\n    this.vars.pitch = 1\r\n    this.vars.fade_in = 0\r\n    this.vars.stop_after = 0\r\n    this.vars.volume = 1\r\n    this.vars.duration = 'sound'\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Create the sample\r\n    if (this.vars.sample !== '') {\r\n      // Retrieve the content from the file pool.\r\n      this._sample = this._runner._pool[this.syntax.eval_text(this.vars.sample, this.vars, false)]\r\n      this._sampler = new SamplerBackend(this.experiment, this._sample)\r\n      this._sampler.volume = this.vars.volume\r\n      this._sampler.duration = this.vars.duration\r\n      this._sampler.fade = this.vars.fade\r\n      this._sampler.pan = this.vars.pan\r\n      this._sampler.pitch = this.vars.pitch\r\n    } else {\r\n      // Show error message.\r\n      this._runner._debugger.addError('No sample has been specified in sampler: ' + this.vars.sample)\r\n    }\r\n\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    this.set_item_onset()\r\n    this.set_sri()\r\n    this._sampler.play()\r\n    this.process_response()\r\n  }\r\n}\r\n","import Sampler from './sampler.js'\r\n\r\n/**\r\n * Class representing a synth item.\r\n * @extends Sampler\r\n */\r\nexport default class Synth extends Sampler {\r\n  /**\r\n     * Create a synth item which create a synthessised sound wave.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} Ssript - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited create.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'A basic sound synthesizer'\r\n  }\r\n}\r\n","/** Class representing a general visual element. */\r\nexport default class BaseElement {\r\n  /**\r\n   * Create a log object which stores all the response data.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   * @param {Object} defaults - The default property values of the visual element.\r\n   */\r\n  constructor (sketchpad, script, defaults) {\r\n    // Set class parameter properties.\r\n    this.canvas = sketchpad.canvas\r\n    this.defaults = defaults\r\n    this.defaults.show_if = 'always'\r\n    this.defaults.z_index = 0\r\n    this.experiment = sketchpad.experiment\r\n    this.fix_coordinates = (sketchpad.vars.uniform_coordinates === 'yes')\r\n    this.name = sketchpad.name\r\n    this.only_keywords = false\r\n    this.pool = sketchpad.experiment.pool\r\n    this.properties = {}\r\n    this.sketchpad = sketchpad\r\n    this.syntax = sketchpad.syntax\r\n    this.vars = sketchpad.vars\r\n\r\n    // Set the private properties.\r\n    this._properties = null\r\n\r\n    // Read the definition string.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /**\r\n   * Parses the element from a definition string.\r\n   *\r\n   * @param {String} script The definition script line to be parsed.\r\n   * @memberof BaseElement\r\n   */\r\n  from_string (script) {\r\n    this.properties = this.sketchpad.syntax.parse_cmd(script)[2]\r\n  }\r\n\r\n  /**\r\n   * Determines the drawing order of the elements.\r\n   *\r\n   * @returns {Number}\r\n   * @memberof BaseElement\r\n   */\r\n  z_index () {\r\n    return this.properties.z_index\r\n  }\r\n\r\n  /**\r\n   * Calculate the dynamic elements within properties.\r\n   *\r\n   * @memberof BaseElement\r\n   */\r\n  eval_properties () {\r\n    // Evaluates all properties and return them.\r\n    const xc = this.experiment.vars.width / 2\r\n    const yc = this.experiment.vars.height / 2\r\n\r\n    this._properties = Object.entries(this.properties).reduce((result, [prop, val]) => {\r\n      let value = this.syntax.eval_text(val, this.vars, false)\r\n\r\n      if (['x', 'x1', 'x2'].includes(prop)) {\r\n        value = Math.round(Number(value) + xc)\r\n      }\r\n\r\n      if (['y', 'y1', 'y2'].includes(prop)) {\r\n        value = Math.round(Number(value) + yc)\r\n      }\r\n\r\n      result[prop] = value\r\n      return result\r\n    }, {})\r\n  }\r\n\r\n  /**\r\n   * Determines whether the element should be shown, based on the show-if statement.\r\n   *\r\n   * @returns {Boolean} Returns true if the element must be shown.\r\n   * @memberof BaseElement\r\n   */\r\n  is_shown () {\r\n    // Set the self of the current workspace.\r\n    this.experiment.python_workspace['self'] = this.sketchpad\r\n\r\n    // Determines whether the element should be shown, based on the show-if statement.\r\n    return this.experiment.python_workspace._eval(this.experiment.syntax.compile_cond(this.properties['show_if']))\r\n  }\r\n\r\n  /**\r\n   * Draws the element\r\n   *\r\n   * @memberof BaseElement\r\n   */\r\n  draw () {\r\n    // Calculate the dynamic properties.\r\n    this.eval_properties()\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Arrow extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.arrow_body_length = 0.8\r\n    defaults.arrow_body_width = 0.5\r\n    defaults.arrow_head_width = 30\r\n    defaults.fill = 1\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.penwidth = 1\r\n    defaults.x1 = null\r\n    defaults.y1 = null\r\n    defaults.x2 = null\r\n    defaults.y2 = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.background_color = this._properties.color\r\n    styles.color = this._properties.color\r\n    styles.fill = this._properties.fill\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the arrow element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.arrow(this._properties.x1, this._properties.y1,\r\n      this._properties.x2, this._properties.y2, this._properties.arrow_body_width,\r\n      this._properties.arrow_body_length, this._properties.arrow_head_width,\r\n      styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Circle extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.fill = 0\r\n    defaults.penwidth = 1\r\n    defaults.x = null\r\n    defaults.y = null\r\n    defaults.r = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.background_color = this._properties.color\r\n    styles.color = this._properties.color\r\n    styles.fill = this._properties.fill\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the circle element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.circle(this._properties.x, this._properties.y,\r\n      this._properties.r, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Ellipse extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    const defaults = {\r\n      fill: 1,\r\n      color: sketchpad.vars.get('foreground'),\r\n      penwidth: 1,\r\n      x: null,\r\n      y: null,\r\n      w: null,\r\n      h: null\r\n    }\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.background_color = this._properties.color\r\n    styles.color = this._properties.color\r\n    styles.fill = this._properties.fill\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the ellipse element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.ellipse(Number(this._properties.x),\r\n      Number(this._properties.y), Number(this._properties.w),\r\n      Number(this._properties.h), styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Fixdot extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.style = 'default'\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles(this.sketchpad)\r\n    styles.color = this._properties.color\r\n    // Draw the fixdot element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.fixdot(this._properties.x, this._properties.y,\r\n      this._properties.style, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Gabor extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.bgmode = 'avg'\r\n    defaults.color1 = 'white'\r\n    defaults.color2 = 'black'\r\n    defaults.env = 'gaussian'\r\n    defaults.freq = 1\r\n    defaults.orient = 0\r\n    defaults.phase = 0\r\n    defaults.size = 96\r\n    defaults.stdev = 12\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Draw the gabor element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.gabor(this._properties.x, this._properties.y,\r\n      this._properties.orient, this._properties.freq, this._properties.env,\r\n      this._properties.size, this._properties.stdev, this._properties.phase,\r\n      this._properties.color1, this._properties.color2, this._properties.bgmode)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\n\r\n/**\r\n * Class representing an image element.\r\n * @extends BaseElement\r\n */\r\nexport default class ImageElement extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    const defaults = {}\r\n    defaults.center = 1\r\n    defaults.file = null\r\n    defaults.scale = 1\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n\r\n    // Set the class private properties.\r\n    this._file = null\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Draw the image element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.image(this._properties.file, this._properties.center,\r\n      this._properties.x, this._properties.y, this._properties.scale)\r\n  }\r\n}\r\n","/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nimport BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\nexport default class Line extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.penwidth = 1\r\n    defaults.x1 = null\r\n    defaults.y1 = null\r\n    defaults.x2 = null\r\n    defaults.y2 = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.color = this._properties.color\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the line element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.line(this._properties.x1, this._properties.y1,\r\n      this._properties.x2, this._properties.y2, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Noise extends BaseElement {\r\n  /**\r\n   * Create an experiment item which controls the OpenSesame experiment.\r\n   * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n   * @param {String} script - The script containing properties of the visual element.\r\n   */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.color1 = 'white'\r\n    defaults.color2 = 'black'\r\n    defaults.env = 'gaussian'\r\n    defaults.size = 96\r\n    defaults.stdev = 12\r\n    defaults.x = null\r\n    defaults.y = null\r\n    defaults.bgmode = 'avg'\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Draw the noise element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.noise(this._properties.x, this._properties.y,\r\n      this._properties.env, this._properties.size, this._properties.stdev,\r\n      this._properties.color1, this._properties.color2, this._properties.bgmode)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing an arrow element.\r\n * @extends BaseElement\r\n */\r\nexport default class Rect extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.fill = 1\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.penwidth = 1\r\n    defaults.x = null\r\n    defaults.y = null\r\n    defaults.w = null\r\n    defaults.h = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n\r\n    // Create a styles object containing style information\r\n    var styles = new Styles()\r\n    styles.fill = this._properties.fill\r\n    styles.color = this._properties.color\r\n    styles.background_color = this._properties.color\r\n    styles.penwidth = this._properties.penwidth\r\n\r\n    // Draw the rectangle element to the canvas of the sketchpad.\r\n    this.sketchpad.canvas.rect(this._properties.x, this._properties.y,\r\n      this._properties.w, this._properties.h, styles)\r\n  }\r\n}\r\n","import BaseElement from './base_element.js'\r\nimport Styles from '../backends/styles.js'\r\n\r\n/**\r\n * Class representing a textline element.\r\n * @extends BaseElement\r\n */\r\nexport default class Textline extends BaseElement {\r\n  /**\r\n     * Create an experiment item which controls the OpenSesame experiment.\r\n     * @param {Object} sketchpad - The sketchpad item that owns the visual element.\r\n     * @param {String} script - The script containing properties of the visual element.\r\n     */\r\n  constructor (sketchpad, script) {\r\n    // Create a default property container.\r\n    var defaults = {}\r\n    defaults.center = 1\r\n    defaults.color = sketchpad.vars.get('foreground')\r\n    defaults.font_family = sketchpad.vars.get('font_family')\r\n    defaults.font_size = sketchpad.vars.get('font_size')\r\n    defaults.font_bold = sketchpad.vars.get('font_bold')\r\n    defaults.font_italic = sketchpad.vars.get('font_italic')\r\n    defaults.html = 'yes'\r\n    defaults.text = null\r\n    defaults.x = null\r\n    defaults.y = null\r\n\r\n    // Inherited.\r\n    super(sketchpad, script, defaults)\r\n  }\r\n\r\n  /** Implements the draw phase of an element. */\r\n  draw () {\r\n    // Inherited.\r\n    super.draw()\r\n    const text = this._properties.text\r\n    // Create a styles object containing style information\r\n    const styles = new Styles()\r\n    styles.color = this._properties.color\r\n    styles.font_family = this._properties.font_family\r\n    styles.font_size = Number(this._properties.font_size)\r\n    styles.font_italic = (this._properties.font_italic === 'yes')\r\n    styles.font_bold = (this._properties.font_bold === 'yes')\r\n    styles.font_underline = (this._properties.font_underline === 'yes')\r\n\r\n    this.sketchpad.canvas.text(text, this._properties.center,\r\n      this._properties.x, this._properties.y, this._properties.html,\r\n      styles)\r\n  }\r\n}\r\n","import { Container, Graphics } from 'pixi.js'\n/** Class representing an OpenSesame Widget. */\nexport default class Widget {\n  /**\n     * Create a widget object which is the base class for all widgets.\n     * @param {Object} form - The form  which the widget belongs.\n     */\n  constructor (form) {\n    // Set the class public properties.\n    this.focus = false\n    this.form = form\n    this.rect = null\n    this.type = 'widget'\n    this.var = null\n\n    // Create the widget container.\n    this._container = new Container() // - Create the container which represents the canvas.\n  }\n\n  /**\n     * Draw a frame around the widget.\n     * @param {Number|String} rect - The coordinates of the frame (ignored).\n     * @param {Number|String} style - The style to use (ignored).\n     */\n  draw_frame (rect, style) {\n    // Create the background line elements.\n    var line = new Graphics()\n    line.lineStyle(1, this.form._canvas._styles._convertColorValue(this.form._themes.theme['gray'].lineColorLeftTop), 1)\n    line.moveTo(this._container._width, 0)\n    line.lineTo(0, 0)\n    line.lineTo(0, this._container._height)\n    line.lineStyle(1, this.form._canvas._styles._convertColorValue(this.form._themes.theme['gray'].lineColorRightBottom), 1)\n    line.lineTo(this._container._width, this._container._height)\n    line.lineTo(this._container._width, 0)\n    line.x = 0\n    line.y = 0\n\n    // Create the background color element.\n    var rectangle = new Graphics()\n    rectangle.lineStyle(1, this.form._canvas._styles._convertColorValue(this.form._themes.theme['gray'].backgroundColor), 1)\n    rectangle.beginFill(this.form._canvas._styles._convertColorValue(this.form._themes.theme['gray'].backgroundColor))\n    rectangle.drawRect(1, 1, this._container._width - 2, this._container._height - 2)\n    rectangle.endFill()\n    rectangle.x = 0\n    rectangle.y = 0\n\n    // Add the line element to container.\n    this._container.addChild(rectangle)\n    this._container.addChild(line)\n  }\n\n  /**\n     * Sets an experimental variable.\n     * @param {Boolean|Number|String} value - The value for the variable.\n     * @param {String} variable - The name of the variabler to set.\n     */\n  set_var (value, variable) {\n    // Sets an experimental variable.\n    if (variable === null) {\n      variable = this.var\n    }\n\n    if (variable !== null) {\n      this.form.experiment.vars.set(variable, value)\n    }\n  }\n}\n","import Widget from './widget.js'\nimport { Rectangle, Text } from 'pixi.js'\nimport { constants } from '../system/constants.js'\n\n/**\n * Class representing an OpenSesame label Widget.\n * @extends LabelWidget\n */\nexport default class ButtonWidget extends Widget {\n  /**\n     * Create a widget button object which represents a push button.\n     * @param {Object} form - The form  which the widget belongs.\n     * @param {Object} properties - The properties belonging to the widget.\n     */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form, properties)\n\n    // Set the class public properties.\n    this.center = (typeof properties['center'] !== 'undefined') ? (properties['center'] === 'yes') : true\n    this.frame = (typeof properties['frame'] !== 'undefined') ? (properties['frame'] === 'yes') : true\n    this.text = properties['text']\n    this.type = 'button'\n    this.var = (typeof properties['var'] !== 'undefined') ? properties['var'] : this.var\n\n    // Set the current value of the variable to false (not pressed).\n    this.set_var(false, this.var)\n  }\n\n  /**\n     * Draw the label widget.\n     * @param {Number|String} text - The text for the labe.\n     * @param {Number|String} html - Toggle if the text contains html (ignored).\n     */\n  draw_text (text, html) {\n    //  Create the text element\n    var text_style = {\n      fontFamily: this.form._canvas._styles.font_family,\n      fontSize: this.form.experiment.vars.font_size,\n      fontStyle: (this.form.experiment.vars.font_italic === 'yes') ? 'italic' : 'normal',\n      fontWeight: (this.form.experiment.vars.font_bold === 'yes') ? 'bold' : 'normal',\n      fill: this.form.experiment.vars.foreground\n    }\n    var text_element = new Text(text, text_style)\n\n    // Position the text element.\n    if (this.center === true) {\n      text_element.x = (this._container._width - text_element.width) / 2\n      text_element.y = (this._container._height - text_element.height) / 2\n    } else {\n      text_element.x = 5\n      text_element.y = 5\n    }\n\n    // Add the text_element to the container.\n    this._container.addChild(text_element)\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Set the interactive mode (if not set yet).\n    if ((this.form.item.vars.only_render === 'no') && (this._container.interactive === false)) {\n      this._container.interactive = true\n      this._container.buttonMode = true\n      this._container.hitArea = new Rectangle(0, 0, this._container._width, this._container._height)\n      this._container.on('mousedown', function (event) { this.response(event) }.bind(this))\n      this._container.on('touchstart', function (event) { this.response(event) }.bind(this))\n    }\n\n    // Draw the frame (if enabled).\n    if (this.frame === true) {\n      this.draw_frame()\n    }\n\n    // Update the text.\n    var text = this.form.experiment.syntax.eval_text(this.text, null, false)\n\n    // Draw the text.\n    this.draw_text(text)\n  }\n\n  /**\n     * Process the response for the button widget.\n     * @param {Object} event - The response event.\n     */\n  response (event) {\n    // Set the attached variable.\n    this.set_var(true, this.var)\n\n    // Complete the item element.\n    if (this.form.timeout === null) {\n      this.form.item._complete()\n    } else {\n      this.form.experiment._runner._events._currentItem._status = constants.STATUS_FINALIZE\n    }\n  }\n}\n","import Widget from './widget.js'\nimport { Text, Graphics, Rectangle } from 'pixi.js'\nimport { constants } from '../system/constants.js'\n\n/** Class representing an OpenSesame text input Widget. */\nexport default class CheckBoxWidget extends Widget {\n  /**\n     * Create a widget object which represents a text label.\n     * @param {Object} form - The form  which the widget belongs.\n     * @param {Object} properties - The properties belonging to the widget.\n     */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form)\n\n    // Set the class public properties.\n    this.checked = (typeof properties['checked'] !== 'undefined') ? (properties['checked'] === 'yes') : false\n    this.click_accepts = (typeof properties['click_accepts'] !== 'undefined') ? (properties['click_accepts'] === 'yes') : false\n    this.frame = (typeof properties['frame'] !== 'undefined') ? (properties['frame'] === 'yes') : false\n    this.group = (typeof properties['group'] !== 'undefined') ? properties['group'] : null\n    this.text = (typeof properties['text'] !== 'undefined') ? properties['text'] : ''\n    this.var = (typeof properties['var'] !== 'undefined') ? properties['var'] : null\n    this.type = 'checkbox'\n\n    // Set the class private properties.\n    this._checkbox = null\n  }\n\n  /**\n     * Draw the label widget.\n     * @param {Number|String} text - The text for the labe.\n     * @param {Number|String} html - Toggle if the text contains html (ignored).\n     */\n  draw_text (text, html) {\n    //  Create the text element\n    var text_style = {\n      fontFamily: this.form._canvas._styles.font_family,\n      fontSize: this.form.experiment.vars.font_size,\n      fontStyle: (this.form.experiment.vars.font_italic === 'yes') ? 'italic' : 'normal',\n      fontWeight: (this.form.experiment.vars.font_bold === 'yes') ? 'bold' : 'normal',\n      fill: this.form.experiment.vars.foreground\n    }\n    var text_element = new Text(text, text_style)\n    text_element.x = 24\n    text_element.y = 5\n\n    // PIXI: create the border box.\n    var box_lines = new Graphics()\n    box_lines.lineStyle(1, 0x000000)\n    box_lines.moveTo(1, 0)\n    box_lines.lineTo(13, 0)\n    box_lines.moveTo(14, 1)\n    box_lines.lineTo(14, 13)\n    box_lines.moveTo(0, 1)\n    box_lines.lineTo(0, 13)\n    box_lines.moveTo(1, 14)\n    box_lines.lineTo(13, 14)\n    box_lines.x = 5\n    box_lines.y = 7\n\n    //  create the fill box.\n    var box_fill = new Graphics()\n    box_fill.lineStyle(1, 0xffffff, 1)\n    box_fill.beginFill(0xffffff)\n    box_fill.drawRect(1, 1, 12, 12)\n    box_fill.endFill()\n    box_fill.x = 5\n    box_fill.y = 7\n\n    //  create the check line.\n    this._checkbox = new Graphics()\n    this._checkbox.lineStyle(1, 0x04b010)\n    this._checkbox.moveTo(4, 5)\n    this._checkbox.lineTo(7, 12)\n    this._checkbox.lineTo(12, 3)\n    this._checkbox.x = 5\n    this._checkbox.y = 7\n    this._checkbox.visible = false\n\n    // Add the text_element to the container.\n    this._container.addChild(box_lines)\n    this._container.addChild(box_fill)\n    this._container.addChild(this._checkbox)\n    this._container.addChild(text_element)\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Set the interactive mode (if not set yet).\n    if (this._container.interactive === false) {\n      this._container.interactive = true\n      this._container.buttonMode = true\n      this._container.hitArea = new Rectangle(0, 0, this._container._width, this._container._height)\n      this._container.on('mousedown', function (event) {\n        this.response(event)\n      }.bind(this))\n      this._container.on('touchstart', function (event) {\n        this.response(event)\n      }.bind(this))\n    }\n\n    // Clear the old content.\n    this._container.removeChildren()\n\n    // Draw the frame (if enabled).\n    if (this.frame === true) {\n      this.draw_frame()\n    }\n\n    // Update the text.\n    var text = this.form.experiment.syntax.eval_text(this.text, null, false)\n\n    // Draw the text.\n    this.draw_text(text)\n\n    // Set the toggle\n    this.set_checked(this.checked)\n  }\n\n  /**\n     * Set the status of the checkbox.\n     * @param {Boolean} checked - Toggle to check or uncheck the checkbox.\n     */\n  set_checked (checked) {\n    // Set the property.\n    this.checked = checked\n\n    // PIXY: set the checkbox element.\n    this._checkbox.visible = checked\n\n    // Rerender the form.\n    this.form._canvas.show(this.form.experiment)\n\n    // Adjust the widget.\n    this.set_var(checked)\n  }\n\n  /**\n     * Process the response for the text input widget.\n     * @param {Object} event - The response event.\n     */\n  response (event) {\n    // Check if the checkbox is part of a group\n    if (this.group !== null) {\n      // Set group response.\n      for (var i = 0; i < this.form.widgets.length; i++) {\n        if ((this.form.widgets[i].type === 'checkbox') && (this.form.widgets[i] !== this) &&\n          (this.form.widgets[i].group === this.group)) {\n          this.form.widgets[i].set_checked(false)\n        }\n      }\n\n      // Set checkbox.\n      this.set_checked(true)\n    } else {\n      // Set single response.\n      this.set_checked(!this.checked)\n    }\n\n    // Complete the item element if accept_clicks is set to true.\n    if (this.click_accepts === true) {\n      if (this.form.timeout === null) {\n        this.form.item._complete()\n      } else {\n        this.form.experiment._runner._events._currentItem._status = constants.STATUS_FINALIZE\n      }\n    }\n  }\n\n  /**\n     * Sets an experimental variable.\n     * @param {Boolean|Number|String} pVal - The value for the variable.\n     * @param {String} pVar - The name of the variabler to set.\n     */\n  set_var (pVal, pVar) {\n    // set variable.\n    var variable = (typeof pVar !== 'undefined') ? pVar : this.var\n\n    // Only set variable if it is defined.\n    if (variable !== null) {\n      var values = []\n      for (var i = 0; i < this.form.widgets.length; i++) {\n        if ((this.form.widgets[i].type === 'checkbox') && (this.form.widgets[i].var === this.var) && (this.form.widgets[i].checked === true)) {\n          values.push(this.form.widgets[i].text)\n        }\n      }\n\n      // Inherited.\n      if (values === []) {\n        super.set_var('no', variable)\n      } else {\n        super.set_var(values.join(';'), variable)\n      }\n    }\n  }\n}\n","/** Class representing OpenSesame themes. */\nexport default class Themes {\n  /** Create a themes object which cpntains a list of html themes. */\n  constructor () {\n    // Definition of public properties.\n    this.theme = []\n    this.theme['gray'] = {\n      backgroundColor: '#888a85',\n      box_size: 16,\n      lineColorLeftTop: '#babdb6',\n      lineColorRightBottom: '#555753'\n    }\n  }\n}\n","import Canvas from '../backends/canvas.js'\nimport Themes from './themes.js'\nimport { constants } from '../system/constants.js'\n\n/** Class representing an Form widget for showing widgets. */\nexport default class FormWidget {\n  /**\n     * Create a form widget object used to show widget elements to the subject.\n     * @param {Object} experiment - The experiment item to which the form belongs.\n     * @param {String} cols - The unique name of the item.\n     * @param {String} rows - The unique name of the item.\n     * @param {String} spacing - The script containing the properties of the item.\n     * @param {String} margins - The script containing the properties of the item.\n     * @param {String} theme - The script containing the properties of the item.\n     * @param {Object} item - The item to which the form belongs.\n     * @param {String} timeout - The script containing the properties of the item.\n     * @param {String} clicks - The script containing the properties of the item.\n     */\n  constructor (experiment, cols, rows, spacing, margins, theme, item, timeout, clicks) {\n    // Set the class public properties.\n    this.clicks = clicks\n    this.cols = cols\n    this.experiment = experiment\n    this.height = this.experiment.vars.height\n    this.item = (item !== null) ? item : experiment\n    this.margins = margins\n    this.rows = rows\n    this.spacing = spacing\n    this.span = []\n    this.theme = theme\n    this.timeout = timeout\n    this.widgets = []\n    this.width = this.experiment.vars.width\n\n    // Calculate the total number ot rows and columns.\n    this.colNr = 0\n    for (let i = 0; i < cols.length; i++) {\n      this.colNr = this.colNr + Number(cols[i])\n    }\n    this.rowNr = 0\n    for (let i = 0; i < rows.length; i++) {\n      this.rowNr = this.rowNr + Number(rows[i])\n    }\n\n    // Set the class private properties.\n    this._groupId = 0\n\n    // Create the form canvas.\n    this._canvas = new Canvas(this.experiment, false)\n    this._canvas._styles.background_color = experiment.vars.background\n\n    // Set the form dimensions.\n    this._canvas._container.height = experiment.vars.height\n    this._canvas._container.width = experiment.vars.width\n    this._canvas._styles.font_family = experiment.vars.font_family\n\n    // Create the themes object.\n    this._themes = new Themes()\n  }\n\n  /** Create a unique group id for muliple rating scale groups. */\n  _getGroupId () {\n    // Return a unique group id and increase it.\n    return this._groupId++\n  }\n\n  /**\n     * Execute and render the form.\n     * @param {Object} pFocus_widget - The widget which receives focus (optional).\n     */\n  _exec (focus_widget) {\n    // Render the form.\n    this.render()\n\n    // Enabled the focus widget.\n    if (focus_widget !== null) {\n      // Focus the text_input widget.\n      focus_widget.setFocus()\n    }\n\n    // Set the timer to form pause.\n    this.experiment._runner._events._state = constants.TIMER_FORM\n\n    // PIXI: Set the cursor visibility to none (default).\n    this.experiment._runner._renderer.view.style.cursor = 'default'\n\n    // Set the onset time.\n    this.item.set_item_onset()\n\n    // Set the duration parameter.\n    if ((this.timeout !== null) && (this.item !== null)) {\n      this.item.sleep(this.timeout)\n    }\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Clear the old content.\n    this._canvas._container.removeChildren()\n\n    // render all widgets.\n    for (var i = 0; i < this.widgets.length; i++) {\n      // Add the widget to the container.\n      this._canvas._container.addChild(this.widgets[i]._container)\n\n      // Render the widget.\n      this.widgets[i].render()\n    }\n\n    // Show the form.\n    this._canvas.show(this.experiment)\n  }\n\n  /**\n     * Add a widget to a location on the form.\n     * @param {Object} widget - The widget to add to the form.\n     * @param {Object} pos - The position of the widget.\n     * @param {Number} colSpan - The width of the widget.\n     * @param {Number} rowSpan - The height of the widget.\n     */\n  set_widget (widget, pos, colSpan, rowSpan) {\n    // Calculate the form width and height minus the margins.\n    var form_width = this.experiment.vars.width - Number(this.margins[1]) - Number(this.margins[3])\n    var form_height = this.experiment.vars.height - Number(this.margins[0]) - Number(this.margins[2])\n\n    // Calculate the position and dimension of the widget on the form.\n    var x = Number(this.margins[3]) + Number(this.spacing)\n    for (let i = 0; i < Number(pos[0]); i++) {\n      x = x + (Number(this.cols[i]) / this.colNr) * form_width\n    }\n    var y = Number(this.margins[0]) + Number(this.spacing)\n    for (let i = 0; i < Number(pos[1]); i++) {\n      y = y + (Number(this.rows[i]) / this.rowNr) * form_height\n    }\n    var width = 0\n    let range = Number(Number(pos[0]) + Number(colSpan))\n    for (let i = Number(pos[0]); i < range; i++) {\n      width = width + Number(this.cols[i])\n    }\n    width = (width / this.colNr) * form_width - 2 * Number(this.spacing)\n\n    let height = 0\n    range = Number(Number(pos[1]) + Number(rowSpan))\n    for (var i = Number(pos[1]); i < range; i++) {\n      height = height + Number(this.rows[i])\n    }\n    height = (height / this.rowNr) * form_height - 2 * Number(this.spacing)\n\n    // Set the widget position and dimensions.\n    widget._container.width = Math.round(width)\n    widget._container.height = Math.round(height)\n    widget._container.x = Math.round(x)\n    widget._container.y = Math.round(y)\n\n    // Add the widget to the list.\n    this.widgets.push(widget)\n  }\n}\n","import Widget from './widget.js'\n\n/**\n * Class representing an OpenSesame label Widget.\n * @extends Widget\n */\nexport default class ImageWidget extends Widget {\n  /**\n     * Create a widget object which represents a text label.\n     * @param {Object} form - The form to which the widget belongs.\n     * @param {Object} properties - The properties belonging to the widget.\n     */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form)\n\n    // Set the class public properties.\n    this.adjust = (typeof properties['adjust'] !== 'undefined') ? (properties['adjust'] === 'true') : true\n    this.frame = (typeof properties['frame'] !== 'undefined') ? (properties['frame'] === 'yes') : false\n    this.path = (typeof properties['path'] !== 'undefined') ? properties['path'] : null\n    this.type = 'image'\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Clear the old content.\n    this._container.removeChildren()\n\n    // Draw the frame (if enabled).\n    if (this.frame === true) {\n      this.draw_frame()\n    }\n\n    // Get image from file pool.\n    var name = this.form.experiment._runner._syntax.remove_quotes(this.path)\n    var img = this.form.experiment._runner._pool[name].data\n\n    // Create a temporary canvas to make an image data array.\n    var canvas = document.createElement('canvas')\n    canvas.width = img.width\n    canvas.height = img.height\n    var ctx = canvas.getContext('2d')\n    ctx.drawImage(img, 0, 0)\n\n    // Create the image sprite.\n    var sprite = new PIXI.Sprite(PIXI.Texture.fromCanvas(canvas))\n\n    // Adjust the dimensions of the sprite.\n    if (this.adjust === true) {\n      // Calculate the aspect ratio.\n      var ar = (img.width / img.height)\n      // Adjust the size.\n      if (this._container._height >= this._container._width) {\n        // Stretch horizontal.\n        sprite.width = this._container._width\n        sprite.height = ar * this._container._width\n        sprite.x = 0\n        sprite.y = (this._container._height - sprite.height) / 2\n      } else {\n        // Stretc vertical.\n        sprite.height = this._container._height\n        sprite.width = ar * this._container._height\n        sprite.x = (this._container._width - sprite.width) / 2\n        sprite.y = 0\n      }\n    } else {\n      // No adjusting, just position the sprite in center of the widget.\n      sprite.x = (this._container._width / 2) - (sprite.width / 2)\n      sprite.y = (this._container._height / 2) - (sprite.height / 2)\n    }\n\n    // Add the image to the stage.\n    this._container.addChild(sprite)\n  }\n}\n","import ImageWidget from './image_widget.js'\nimport { Rectangle } from 'pixi.js'\nimport { constants } from '../system/constants.js'\n\n/**\n * Class representing an OpenSesame Image Button Widget.\n * @extends ImageWidget\n */\nexport default class ImageButtonWidget extends ImageWidget {\n  /**\n     * Create a widget object which represents a text label.\n     * @param {Object} form - The form  which the widget belongs.\n     * @param {Object} properties - The properties belonging to the widget.\n     */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form, properties)\n\n    // Set the class public properties.\n    this.type = 'image_button'\n    this.var = (typeof properties['var'] !== 'undefined') ? properties['var'] : null\n\n    // Set the current status of the checkbox.\n    this.set_var(false, this.var)\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Set the interactive mode (if not set yet).\n    if ((this.form.item.vars.only_render === 'no') && (this._container.interactive === false)) {\n      this._container.interactive = true\n      this._container.buttonMode = true\n      this._container.hitArea = new Rectangle(0, 0, this._container._width, this._container._height)\n      this._container.on('mousedown', function (event) {\n        this.response(event)\n      }.bind(this))\n      this._container.on('touchstart', function (event) {\n        this.response(event)\n      }.bind(this))\n    }\n\n    // Inherited.\n    super.render()\n  }\n\n  /**\n     * Process the response for the button widget.\n     * @param {Object} event - The response event.\n     */\n  response (event) {\n    // Set the current status of the checkbox.\n    this.set_var(true, this.var)\n\n    // Complete the item element.\n    if (this.form.timeout === null) {\n      this.form.item._complete()\n    } else {\n      this.form.experiment._runner._events._currentItem._status = constants.STATUS_FINALIZE\n    }\n  }\n}\n","import { Text } from 'pixi.js'\nimport Widget from './widget.js'\n\n/**\n * Class representing an OpenSesame label Widget.\n * @extends Widget\n */\nexport default class LabelWidget extends Widget {\n  /**\n   * Create a widget object which represents a text label.\n   * @param {Object} form - The form  which the widget belongs.\n   * @param {Object} properties - The properties belonging to the widget.\n   */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form)\n\n    // Set the class public properties.\n    this.center = (typeof properties['center'] !== 'undefined')\n      ? (properties['center'] === 'yes')\n      : true\n    this.frame = (typeof properties['frame'] !== 'undefined')\n      ? (properties['frame'] === 'yes')\n      : false\n    this.text = properties['text']\n    this.type = 'label'\n  }\n\n  /**\n     * Convert a text string to a collection of lines.\n     * @param {Number|String} text - The text to convert into lines.\n     * @param {Number} width - The height of the containing box.\n     * @param {Number} height - The width of the containing box.\n     * @param {Object} text_style - The styling of the text.\n     * @param {Array} - Array of text lines.\n     */\n  text_lines (text, width, height, text_style) {\n    // Create a temporary canvas context.\n    var canvas = document.createElement('canvas')\n    canvas.width = 800\n    canvas.height = 600\n    var buffer_context = canvas.getContext('2d')\n\n    // Set the context font style.\n    buffer_context.font = text_style.fontSize + 'px ' + text_style.fontFamily\n    if (text_style.fontWeight === 'bold') {\n      buffer_context.font = 'bold ' + buffer_context.font\n    }\n    if (text_style.fontStyle === 'italic') {\n      buffer_context.font = 'italic ' + buffer_context.font\n    }\n\n    // Create the lines of text\n    var words = text.split(' ')\n    var lines = []\n    var line = ''\n    var line_length = 0\n    while (words.length > 0) {\n      // Get the next word and the length of the word with one space.\n      var word = words.shift()\n      var word_length = buffer_context.measureText(word + ' ').width\n      if (word === '<br/>') {\n        // line is done, add it to the lines.\n        lines.push(line)\n        // Set the new line.\n        line = ''\n        line_length = word_length\n      } else if ((line_length + word_length) > width) {\n        // line is done, add it to the lines.\n        lines.push(line)\n        // Set the new line.\n        line = word\n        line_length = word_length\n      } else {\n        // Add the word to the line\n        line = (line === '') ? word : line + ' ' + word\n        // increate the length of the line.\n        line_length = line_length + word_length\n      }\n    }\n\n    // Check for remainder words.\n    lines.push(line)\n\n    // Return the lines.\n    return lines\n  }\n\n  /**\n     * Draw the label widget.\n     * @param {Number|String} text - The text for the label.\n     * @param {Number|String} html - Toggle if the text contains html (ignored).\n     */\n  draw_text (text, html) {\n    // Create the text element\n    var text_style = {\n      fontFamily: this.form._canvas._styles.font_family,\n      fontSize: this.form.experiment.vars.font_size,\n      fontStyle: (this.form.experiment.vars.font_italic === 'yes') ? 'italic' : 'normal',\n      fontWeight: (this.form.experiment.vars.font_bold === 'yes') ? 'bold' : 'normal',\n      fill: this.form.experiment.vars.foreground\n    }\n    // Get the lines and properties.\n    const text_elements = this.text_lines(text, this._container._width - 10,\n      this._container._height - 10, text_style)\n    const lineProperties = this.form._canvas._getTextBaseline('MgyQ', text_style.fontFamily,\n      text_style.fontSize, text_style.fontWeight)\n\n    // Calculate the starting y position.\n    let y = (this.center === true) ? (this._container._height - ((text_elements.length) * lineProperties.height)) / 2 : 5\n    // Create the lines.\n    for (let i = 0; i < text_elements.length; i++) {\n      const text_element = new Text(text_elements[i], text_style)\n      text_element.x = Math.round((this.center === true) ? (this._container._width - text_element.width) / 2 : 5)\n      text_element.y = Math.round(y)\n      y = y + lineProperties.height\n\n      // Add the text_element to the container.\n      this._container.addChild(text_element)\n    }\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Clear the old content.\n    this._container.removeChildren()\n\n    // Draw the frame (if enabled).\n    if (this.frame === true) {\n      this.draw_frame()\n    }\n\n    // Update the text.\n    const text = this.form.experiment.syntax.eval_text(this.text, this.form.item.vars, false)\n\n    // Draw the text.\n    this.draw_text(text)\n  }\n}\n","import Widget from './widget.js'\nimport { Graphics, Container, Rectangle } from 'pixi.js'\n\n/** Class representing an OpenSesame text input Widget. */\nexport default class RatingScaleWidget extends Widget {\n  /**\n   * Create a widget object which represents a text label.\n   * @param {Object} form - The form  which the widget belongs.\n   * @param {Object} properties - The properties belonging to the widget.\n   */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form)\n\n    // Set the class public properties.\n    this.click_accepts = (typeof properties['click_accepts'] !== 'undefined') ? (properties['click_accepts'] === 'yes') : false\n    this.default = (typeof properties['default'] !== 'undefined') ? properties['default'] : null\n    this.orientation = (typeof properties['orientation'] !== 'undefined') ? properties['orientation'] : 'horizontal'\n    this.nodes = (typeof properties['nodes'] !== 'undefined') ? properties['nodes'] : '5'\n    this.var = (typeof properties['var'] !== 'undefined') ? properties['var'] : null\n    this.type = 'rating_scale'\n\n    // Set the class private properties.\n    this._checkBoxes = []\n    this._groupId = this.form._getGroupId()\n\n    // Create a list of possible nodes.\n    this._processNodes()\n  }\n\n  /** Create a list of checkbox nodes. */\n  _processNodes () {\n    // Process the nodes.\n    this._nodes = []\n\n    // Check for a valid number.\n    if (!isNaN(parseFloat(this.nodes)) && isFinite(this.nodes)) {\n      // Create alist of empty nodes.\n      for (var i = 0; i < Number(this.nodes); i++) {\n        this._nodes.push('')\n      }\n    } else {\n      // Create a list of\n      var labels = this.nodes.split(';')\n      for (let i = 0; i < labels.length; i++) {\n        this._nodes.push(labels[i])\n      }\n    }\n  }\n\n  /** Draw a border for the rating scale.\n     * @param {Number} x - x position of the checkbox.\n     * @param {Number} y - y position of the checkbox.\n     * @param {Number} width - width of the border.\n     * @param {Number} height - height of the border.\n     */\n  _drawBorder (x, y, width, height) {\n    // Create the rectangle element.\n    var rectangle = new Graphics()\n    rectangle.lineStyle(1, this.form._canvas._styles._convertColorValue(this.form._themes.theme['gray'].backgroundColor), 1)\n    rectangle.drawRect(x, y, width, height)\n    rectangle.x = 0\n    rectangle.y = 0\n\n    // Add the rectangle to the container.\n    this._container.addChild(rectangle)\n  }\n\n  /** Draw a checkbox element\n     * @param {Number} x - x position of the checkbox.\n     * @param {Number} y - y position of the checkbox.\n     */\n  _drawCheckBox (x, y) {\n    // PIXI: create the border box.\n    var box_lines = new Graphics()\n    box_lines.lineStyle(1, 0x000000)\n    box_lines.moveTo(1, 0)\n    box_lines.lineTo(13, 0)\n    box_lines.moveTo(14, 1)\n    box_lines.lineTo(14, 13)\n    box_lines.moveTo(0, 1)\n    box_lines.lineTo(0, 13)\n    box_lines.moveTo(1, 14)\n    box_lines.lineTo(13, 14)\n    box_lines.x = 5\n    box_lines.y = 7\n\n    // PIXI: create the fill box.\n    var box_fill = new Graphics()\n    box_fill.lineStyle(1, 0xffffff, 1)\n    box_fill.beginFill(0xffffff)\n    box_fill.drawRect(1, 1, 12, 12)\n    box_fill.endFill()\n    box_fill.x = 5\n    box_fill.y = 7\n\n    //  create the check line.\n    var box_check = new Graphics()\n    box_check.lineStyle(1, 0x04b010)\n    box_check.moveTo(4, 5)\n    box_check.lineTo(7, 12)\n    box_check.lineTo(12, 3)\n    box_check.x = 5\n    box_check.y = 7\n    box_check.visible = false\n\n    // Add the elements to a container.\n    var container = new Container()\n    container.addChild(box_lines)\n    container.addChild(box_fill)\n    container.addChild(box_check)\n    container.x = x\n    container.y = y\n\n    // Add the wisget to the container.\n    this._container.addChild(container)\n    this._checkBoxes.push(container)\n\n    // Set the interactive mode.\n    container.interactive = true\n    container.buttonMode = true\n    container.hitArea = new Rectangle(0, 5, 15, 15)\n    container.on('mousedown', function (event) {\n      this.response(event)\n    }.bind(this))\n    container.on('touchstart', function (event) {\n      this.response(event)\n    }.bind(this))\n  }\n\n  /** Draw a label element\n     * @param {Number} x - x position of the checkbox.\n     * @param {Number} y - y position of the checkbox.\n     * @param {String} text - the text for the label.\n     * @param {Boolean} horizotal - if true horizontal otherwise vertical.\n     */\n  _drawText (x, y, text, horizontal) {\n    // PIXI - Create the text element\n    var text_style = {\n      fontFamily: this.form._canvas._styles.font_family,\n      fontSize: this.form.experiment.vars.font_size,\n      fontStyle: (this.form.experiment.vars.font_italic === 'yes') ? 'italic' : 'normal',\n      fontWeight: (this.form.experiment.vars.font_bold === 'yes') ? 'bold' : 'normal',\n      fill: this.form.experiment.vars.foreground\n    }\n\n    // Get the lines and properties.\n    var lineProperties = this.form._canvas._getTextBaseline(text, text_style.fontFamily, text_style.fontSize, text_style.fontWeight)\n    var text_element = new Text(text, text_style)\n    if (horizontal === true) {\n      text_element.x = x - (text_element.width / 2) + 15\n      text_element.y = y - lineProperties.height\n    } else {\n      text_element.x = x - text_element.width - 15\n      text_element.y = y + 2\n    }\n\n    // Add the text_element to the container.\n    this._container.addChild(text_element)\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Set the interactive mode (if not set yet).\n    if ((this.form.item.vars.only_render === 'no') && (this._container.interactive === false)) {\n      this._container.interactive = true\n      this._container.buttonMode = true\n      this._container.hitArea = new Rectangle(0, 0, this._container._width, this._container._height)\n    }\n\n    // Clear the old content.\n    this._checkBoxes = []\n    this._container.removeChildren()\n\n    // Set the default positions.\n    var cx = this._container._width / 2\n    var cy = this._container._height / 2\n    var _h = this.form._themes.theme['gray'].box_size\n\n    // Define horizontal or vertical positioning.\n    if (this.orientation === 'horizontal') {\n      // Calculate the distances between the checkboxes.\n      var dx = (1 * this._container._width - 3 * _h) / (this._nodes.length - 1)\n\n      // Create the rounding rectangle.\n      this._drawBorder(0, cy - 0.5 * _h, this._container._width, 2 * _h)\n\n      // create the label and checkbox widgets.\n      var _x = _h\n      for (var i = 0; i < this._nodes.length; i++) {\n        // Create the checkbox widget\n        this._drawCheckBox(_x, cy - 5)\n\n        // Update the text.\n        const text = this.form.experiment.syntax.eval_text(this._nodes[i], null, false)\n\n        // Create the text label;\n        this._drawText(_x, cy - 8, text, true)\n\n        // Increase the position.\n        _x = _x + dx\n      }\n    } else {\n      // Calculate the distances between the checkboxes.\n      var dy = (1 * this._container._height - 3 * _h) / (this._nodes.length - 1)\n\n      // Create the rounding rectangle.\n      this._drawBorder(cx - 0.5 * _h, 0, 2 * _h, this._container._height)\n\n      // create the label and checkbox widgets.\n      var _y = _h\n      for (let i = 0; i < this._nodes.length; i++) {\n        // Create the checkbox widget\n        this._drawCheckBox(cx - 5, _y)\n\n        // Update the text.\n        var text = this.form.experiment.syntax.eval_text(this._nodes[i], null, false)\n\n        // Create the text label;\n        this._drawText(cx - 8, _y, text, false)\n\n        // Increase the position.\n        _y = _y + dy\n      }\n    }\n\n    // Enable the default checkbox.\n    if (this.default !== null) {\n      // Enable the checkbox.\n      this._checkBoxes[Number(this.default)].children[2].visible = true\n\n      // Set the value\n      this.set_value(Number(this.default))\n    }\n  }\n\n  /**\n     * Process the response for the text input widget.\n     * @param {Object} event - The response event.\n     */\n  response (event) {\n    // Parse trough the boxes.\n    for (var i = 0; i < this._checkBoxes.length; i++) {\n      if (this._checkBoxes[i] === event.currentTarget) {\n        // Enable the checkbox.\n        this._checkBoxes[i].children[2].visible = true\n\n        // Set the value for the rating scale.\n        this.set_value(i)\n      } else {\n        // Disable the checkbox.\n        this._checkBoxes[i].children[2].visible = false\n      }\n    }\n  }\n\n  /**\n     * Sets the rating scale value.\n     * @param {Number} value - The value for the rating scale.\n     */\n  set_value (value) {\n    // Chekc for a valid value\n    if ((value === null) && ((value < 0) || (value > this._nodes.length))) {\n      this.form.experiment._runner._debugger.addError('Trying to select a non-existing node. Did you specify an incorrect default value?')\n    } else {\n      // Set the value property.\n      this.value = value\n\n      // Set te variable.\n      this.set_var(value)\n    }\n  }\n\n  /**\n     * Sets an experimental variable.\n     * @param {Boolean|Number|String} pVal - The value for the variable.\n     * @param {String} pVar - The name of the variabler to set.\n     */\n  set_var (pVal, pVar) {\n    // set variable.\n    var variable = (typeof pVar !== 'undefined') ? pVar : this.var\n\n    // Only set variable if it is defined.\n    if (variable !== null) {\n      var values = []\n      for (var i = 0; i < this.form.widgets.length; i++) {\n        if ((this.form.widgets[i].type === 'checkbox') && (this.form.widgets[i].var === this.var) && (this.form.widgets[i].checked === true)) {\n          values.push(this.form.widgets[i].text)\n        }\n      }\n\n      // Inherited.\n      if (values === []) {\n        super.set_var('no', variable)\n      } else {\n        super.set_var(values.join(';'), variable)\n      }\n    }\n  }\n}\n","import Widget from './widget.js'\nimport {\n  constants\n} from '../system/constants.js'\n\n// import TextInput from 'pixi-text-input'\n\n/**\n * Class representing an OpenSesame Image Widget.\n * @extends Widget\n */\nexport default class TextInputWidget extends Widget {\n  /**\n   * Create a widget button object which represents a text input.\n   * @param {Object} form - The form  which the widget belongs.\n   * @param {Object} properties - The properties belonging to the widget.\n   */\n  constructor (form, properties) {\n    // Inherited create.\n    super(form)\n\n    // Set the class public properties.\n    this.center = (typeof properties['center'] !== 'undefined') ? (properties['center'] === 'yes') : false\n    this.focus = false\n    this.frame = (typeof properties['frame'] !== 'undefined') ? (properties['frame'] === 'yes') : true\n    this.stub = (typeof properties['stub'] !== 'undefined') ? properties['stub'] : 'Type here...'\n    this.text = (typeof properties['text'] !== 'undefined') ? properties['text'] : ''\n    this.var = (typeof properties['var'] !== 'undefined') ? properties['var'] : null\n    this.return_accepts = (typeof properties['return_accepts'] !== 'undefined') ? (properties['return_accepts'] === 'yes') : false\n    this.type = 'text_input'\n  }\n\n  /** Focus the Text area widget. */\n  setFocus () {\n    // Set focus toggle.\n    this.focus = true\n  }\n\n  /**\n   * Process the response for the text input widget.\n   * @param {Object} event - The response event.\n   */\n  response (widget, event) {\n    // Set the variable.\n    widget.set_var(widget.inputField.text, widget.var)\n\n    // Only respond to enter key.\n    if ((event.keyCode === 13) && (widget.return_accepts === true)) {\n      // Complete the item element.\n      if (widget.form.timeout === null) {\n        widget.form.item._complete()\n      } else {\n        widget.form.experiment._runner._events._currentItem._status = constants.STATUS_FINALIZE\n      }\n    }\n  }\n\n  /**\n   * Draw the label widget.\n   * @param {Number|String} pText - The text for the labe.\n   * @param {Number|String} pHtml - Toggle if the text contains html (ignored).\n   */\n  draw_text (text, html) {\n    const box_style = {\n      fill: this.form._canvas._styles._convertColorValue(this.form.experiment.vars.background),\n      rounded: 5\n    }\n\n    // PIXI - Create the text element\n    const text_style = {\n      fontFamily: this.form._canvas._styles.font_family,\n      fontSize: this.form.experiment.vars.font_size,\n      fontStyle: (this.form.experiment.vars.font_italic === 'yes') ? 'italic' : 'normal',\n      fontWeight: (this.form.experiment.vars.font_bold === 'yes') ? 'bold' : 'normal',\n      fill: this.form.experiment.vars.foreground\n    }\n    // this.inputField = new TextInput(text_style, box_style)\n    // this.inputField.x = 5\n    // this.inputField.y = 5\n    // this.inputField.keydown = this.response\n    // this.inputField.focus()\n    // this._container.addChild(this.inputField)\n  }\n\n  /** General drawing method for the label widget. */\n  render () {\n    // Clear the old content.\n    this._container.removeChildren()\n\n    // // Draw the frame (if enabled).\n    // if (this.frame === true) {\n    //   this.draw_frame()\n    // }\n\n    // Draw the text.\n    this.draw_text(this.text)\n  }\n}\n","import Item from '../items/item.js'\r\nimport {\r\n  isNumber\r\n} from 'lodash'\r\n\r\n/**\r\n * Class representing a advanced delay item.\r\n * @extends Item\r\n */\r\nexport default class AdvancedDelay extends Item {\r\n  /**\r\n   * Create an advanced delay plugin item which delays for e specific duration the experiment.\r\n   * @param {Object} experiment - The experiment item to which the item belongs.\r\n   * @param {String} name - The unique name of the item.\r\n   * @param {String} script - The script containing the properties of the item.\r\n   */\r\n  constructor (experiment, name, script) {\r\n    super(experiment, name, script)\r\n    this.description = 'Waits for a specified duration'\r\n    this._duration = -1\r\n    this.from_string(script)\r\n  }\r\n\r\n  /**\r\n   * Gaussian distribution function.\r\n   * @param {Number} mean - The mean value.\r\n   * @param {Number} std - The standard deviation value.\r\n   * @return {Number} - result value\r\n   */\r\n  _random_gauss(mean, std) {\r\n    let u = 0\r\n    let v = 0\r\n     while(u === 0) u = Math.random()\r\n     while(v === 0) v = Math.random()\r\n     return Math.max(0, mean + Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI*v) * std)\r\n  }\r\n\r\n  /**\r\n   * Uniform distribution function.\r\n   * @param {Number} mean - The mean value.\r\n   * @param {Number} stdev - The standard deviation value.\r\n   * @return {Number} - result value\r\n   */\r\n  _random_uniform (mean, jitter) {\r\n    return Math.max(0, Math.floor(mean + Math.random() * jitter - jitter / 2))\r\n  }\r\n\r\n  /** Resets all item variables to their default value. */\r\n  reset () {\r\n    this.vars.duration = 1000\r\n    this.vars.jitter = 0\r\n    this.vars.jitter_mode = 'Uniform'\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    let duration = this.vars.get('duration')\r\n    let jitter = this.vars.get('jitter')\r\n    let jitter_mode = this.vars.get('jitter_mode')\r\n    if ((!isNumber(duration)) || (duration < 0)) {\r\n      this._runner._debugger.addError('Duration should be a positive numeric value in advanced_delay ' + this.name)\r\n    }\r\n    if (jitter_mode === 'Uniform') {\r\n      this._duration = this._random_uniform(duration, jitter)\r\n    } else if (jitter_mode === 'Std. Dev.') {\r\n      this._duration = this._random_gauss(duration, jitter)\r\n    } else {\r\n      this._runner._debugger.addError('Unknown jitter mode in advanced_delay ' + this.name)\r\n    }\r\n    if (this._duration < 0) {\r\n      this._duration = 0\r\n    }\r\n    this._duration = Number(this._duration)\r\n    this.experiment.vars.set('delay_' + this.name, this._duration)\r\n    this._runner._debugger.addMessage('delay for ' + this._duration + ' ms.')\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    super.run()\r\n    this.set_item_onset(this.time())\r\n    this.sleep(this._duration)\r\n  }\r\n}\r\n","import Item from '../items/item.js'\nimport FormWidget from '../widgets/form.js'\nimport { constants } from '../system/constants.js'\n\n/**\n * Class representing a base form class.\n * @extends Item\n */\nexport default class FormBase extends Item {\n  /**\n     * Create a base form item which is used as basic class for all form types.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     * @param {String} itemType - The type of form to create.\n     * @param {String} description - The description of the form plugin.\n     */\n  constructor (experiment, name, script, itemType, description) {\n    // Inherited.\n    super(experiment, name, script)\n\n    // Define and set the public properties.\n    this.cols = []\n    this.description = 'A generic form plug-in'\n    this.focus_widget = null\n    this.form = null\n    this.options = []\n    this.rows = []\n    this.timeout = null\n\n    // Set the class private properties.\n    this._form_options = false\n    this._form_text = false\n\n    // Set the class public properties.\n    this.description = description\n    this.item_type = itemType\n\n    // Process the script.\n    this.from_string(script)\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    // PIXI: Set the cursor visibility to none (default).\n    this.experiment._runner._renderer.view.style.cursor = 'none'\n\n    // Set the timer to normal mode.\n    this.experiment._runner._events._state = constants.TIMER_NONE\n\n    // form is finalized.\n    this._status = constants.STATUS_FINALIZE\n\n    // Inherited.\n    super._complete()\n  }\n\n  _update (response) {\n    // Update the rendering of the active form.\n    this.form._canvas.show(this.form.experiment)\n  }\n\n  /** Resets all item variables to their default value. */\n  reset () {\n    this.vars.cols = '2;2'\n    this.vars.rows = '2;2'\n    this.vars.spacing = 10\n    this.vars._theme = 'gray'\n    this.vars.only_render = 'no'\n    this.vars.timeout = 'infinite'\n    this.vars.margins = '50;50;50;50'\n    this._widgets = []\n  }\n\n  parse_line (line) {\n    // Split the line in tokens.\n    var list = this.syntax.split(line)\n\n    if ((this._form_text === true) && (list[0] !== '__end__')) {\n      this.vars['form_text'] = this.vars['form_text'] + line.replace('\\t', '') + ' <br/> '\n    }\n    if ((this._form_options === true) && (list[0] !== '__end__')) {\n      this.options.push(line.replace('\\t', ''))\n    }\n\n    // Check for widget definition.\n    if (list[0] === 'widget') {\n      // Remove widget command.\n      list.shift()\n\n      // Add widget to the list.\n      this._widgets.push(list)\n    } else if (list[0] === '__options__') {\n      this._form_options = true\n    } else if (list[0] === '__form_text__') {\n      this.vars['form_text'] = ''\n      this._form_text = true\n    } else if (list[0] === '__end__') {\n      this._form_options = false\n      this._form_text = false\n    }\n  }\n\n  /** Implements the prepare phase of an item. */\n  prepare () {\n    // Retrieve the column, rows and margins.\n    var cols = (typeof this.vars.cols === 'string') ? this.vars.cols.split(';') : [String(this.vars.cols)]\n    var rows = (typeof this.vars.rows === 'string') ? this.vars.rows.split(';') : [String(this.vars.rows)]\n    var margins = this.vars.margins.split(';')\n\n    // Get the time out parameter.\n    let timeout\n    if (this.vars.timeout === 'infinite') {\n      timeout = null\n    } else {\n      timeout = this.vars.timeout\n    }\n\n    // Create the basic form.\n    this.form = new FormWidget(this.experiment, cols, rows, this.vars.spacing,\n      margins, this.vars._theme, this, timeout, this.vars.form_clicks === 'yes')\n\n    // Parse the widget definitions.\n    for (var i = 0; i < this._widgets.length; i++) {\n      this.focus_widget = null\n      var kwdict = {}\n      var parameters = []\n      parameters.push(this.form)\n      if (this._widgets[i].length > 5) {\n        for (var j = 5; j < this._widgets[i].length; j++) {\n          var varName = String(this._widgets[i][j]).substr(0, String(this._widgets[i][j]).indexOf('='))\n          var varValue = String(this._widgets[i][j]).substring(String(this._widgets[i][j]).indexOf('=') + 1, String(this._widgets[i][j]).length)\n          kwdict[varName] = this.syntax.remove_quotes(varValue)\n          kwdict[varName] = this.syntax.eval_text(kwdict[varName], this.form.item.vars, true)\n          kwdict[varName] = this.syntax.remove_quotes(kwdict[varName])\n          parameters.push(this.syntax.remove_quotes(varValue))\n        }\n      }\n\n      // Process focus keyword.\n      var focus = false\n      if ((typeof kwdict['focus'] !== 'undefined') && (kwdict['focus'] === 'yes')) {\n        delete (kwdict['focus'])\n        focus = true\n      }\n\n      // Parse arguments\n      var _type = this._widgets[i][4]\n      var col = this._widgets[i][0]\n      var row = this._widgets[i][1]\n      var colspan = this._widgets[i][2]\n      var rowspan = this._widgets[i][3]\n\n      // Create the widget.\n      try {\n        var _w = this.experiment.items._newWidgetClass(_type, this.form, kwdict)\n      } catch (e) {\n        this.experiment._runner._debugger.addError('Failed to create widget ' + _type + ', error:' + e)\n      }\n\n      // Add the widget to the parent form.\n      this.form.set_widget(_w, [col, row], colspan, rowspan)\n\n      // Add as focus widget\n      if (focus === true) {\n        if (this.focus_widget != null) {\n          this.experiment._runner._debugger.addError('Osweb error: You can only specify one focus widget')\n        } else {\n          this.focus_widget = _w\n        }\n      }\n    }\n\n    // Inherited.\n    super.prepare()\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Inherited.\n    super.run()\n\n    // Execute the form.\n    if (this.vars.only_render === 'yes') {\n      // Render the form.\n      this.form.render()\n\n      // Continue the process.\n      this._complete()\n    } else {\n      this.form._exec(this.focus_widget)\n    }\n  }\n}\n","import FormBase from './form_base.js'\nimport FormWidget from '../widgets/form.js'\n\n/**\n * Class representing a consent form.\n * @extends FormBase\n */\nexport default class FormConsent extends FormBase {\n  /**\n     * Create a form which shows some simple text.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script, 'form_consent', 'A simple consent form')\n\n    // Define and set the public properties.\n    this.decline_form = null\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    // Check if the concense form is completed or the decline sub form.\n    if (this.decline_form !== null) {\n      // Hide the default form.\n      this.decline_form._canvas._container.visible = false\n      this.form._canvas._container.visible = true\n      this.decline_form = null\n\n      // Re-run the consense form.\n      this.run()\n    } else {\n      // Check if the consent status is shown.\n      if (this.experiment.vars.get('accept_status') === true) {\n        // Accept button is selected, check the checkbox status.\n        if (this.experiment.syntax.remove_quotes(this.experiment.vars.get('checkbox_status')) === this.vars.get('checkbox_text')) {\n          // Go to the next form, so continue the closure.\n          super._complete()\n        } else {\n          console.log('decline form')\n          // Create the decline message form.\n          this.decline_form = new FormWidget(this.experiment, [1], [1], 10, ['50', '50', '50', '50'], 'gray', this, 5000, false)\n\n          // Create the text widget.\n          var widget = this.experiment.items._newWidgetClass('label', this.decline_form, {text: this.vars.decline_message, center: 'yes'})\n\n          // Add the widget to the parent form.\n          this.decline_form.set_widget(widget, [0, 0], 1, 1)\n\n          // Hide the default form.\n          this.form._canvas._container.visible = false\n          this.decline_form._canvas._container.visible = true\n\n          // Execute the decline form.\n          this.decline_form._exec(null)\n        }\n      } else {\n        // Decline button pressed, stop the experiment.\n        this.experiment._runner.exit()\n      }\n    }\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Inherited.\n    super.run()\n  }\n}\n","import FormBase from './form_base.js'\n\n/**\n * Class representing a form with multiple choise item.\n * @extends FormBase\n */\nexport default class FormMultipleChoice extends FormBase {\n  /**\n     * Create a form which shows some simple text.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script, 'form_multiple_choice', 'A simple multiple choise item')\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    // Inherited.\n    super._complete()\n  }\n\n  /** Implements the run phase of an item. */\n  prepare () {\n    //\n    this.vars.cols = '1;1;'\n    this.vars.rows = '1;1;'\n    this._widgets = []\n\n    this._widgets.push(this.syntax.split('0 0 2 1 label text=\"[form_title]\"'))\n    this._widgets.push(this.syntax.split('0 1 2 1 label center=no text=\"[question]\"'))\n    // Add the individual labels.\n    for (var i = 0; i < this.options.length; i++) {\n      this._widgets.push(this.syntax.split('0 ' + String(i + 2) + ' 2 1 checkbox group=group1 center=no text=\"' + this.options[i] + '\"'))\n      this.vars.rows = this.vars.rows + '1;'\n    }\n    this._widgets.push(this.syntax.split('0 ' + String(i + 3) + ' 2 2 button text=\"[button_text]\"'))\n    this.vars.rows = this.vars.rows + '1;1;'\n\n    // Inherited prepare.\n    super.prepare()\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Inherited.\n    super.run()\n  }\n}\n","import FormBase from './form_base.js'\n\n/**\n * Class representing a form text display item.\n * @extends FormBase\n */\nexport default class FormTextDisplay extends FormBase {\n  /**\n     * Create a form which shows some simple text.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script, 'form_text_display', 'A simple text display form')\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    // Inherited.\n    super._complete()\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Inherited.\n    super.run()\n  }\n}\n","import FormBase from './form_base.js'\n\n/**\n * Class representing a form text display item.\n * @extends Item\n */\nexport default class FormTextInput extends FormBase {\n  /**\n     * Create a form which shows some simple text.\n     * @param {Object} pExperiment - The experiment item to which the item belongs.\n     * @param {String} pName - The unique name of the item.\n     * @param {String} pScript - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script, 'form_text_input', 'A simple text input form')\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    // Inherited.\n    super._complete()\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Inherited.\n    super.run()\n  }\n}\n","import { Texture, Sprite } from 'pixi.js'\nimport {\n  constants\n} from '../system/constants.js'\n\n/** Class representing a video. */\nexport default class Video {\n  /**\n   * Create a video object which controls the video device.\n   * @param {Object} experiment - The experiment to which the video belongs.\n   * @param {String} src - The video source name.\n   */\n  constructor (experiment, source) {\n    // Set class parameter properties.\n    this._experiment = experiment\n\n    // Set the class public properties.\n    this.audio = true\n    this.duration = 'keypress'\n    this.full_screen = false\n\n    // Set the class pivate properties.\n    this._playing = false\n    this._script = null\n\n    // Create the video instance\n    if (source !== null) {\n      // Set the video object.\n      this._video = source.data\n\n      // create a video texture from the video.\n      this._texture = Texture.from(source.data)\n\n      // create a new Sprite using the video texture (yes it's that easy)\n      this._videoSprite = new Sprite(this._texture)\n      this._video.pause()\n\n      // Set the event anchors.\n      this._video.onended = this._experiment._runner._events._videoEnded.bind(this)\n      this._video.onplay = this._experiment._runner._events._videoPlay.bind(this)\n    }\n  }\n\n  /** Update the video rendering. */\n  _update () {\n    if (this._playing === true) {\n      // Update the renderer.\n      this._experiment._runner._renderer.render(this._videoSprite)\n\n      // execute script.\n      if ((this._script !== null) && (this._event_handler_always === true)) {\n        // Start the parser\n        this._experiment._runner._pythonParser._run(null, this._script)\n      }\n    }\n  }\n\n  /** Play the actual video. */\n  play () {\n    // Enable the video playing.\n    this._video.play()\n\n    // Set the volume\n    this._video.volume = (this.audio === true) ? 1 : 0\n\n    // Check if the video must be scaled.\n    if (this.full_screen === true) {\n      this._videoSprite.width = this._experiment._runner._renderer.width\n      this._videoSprite.height = this._experiment._runner._renderer.height\n    }\n\n    // Render the first frame.\n    this._experiment._runner._renderer.render(this._videoSprite)\n\n    // Set the play toggle.\n    this._playing = true\n  }\n\n  /** Stop playing the video. */\n  stop () {\n    // Pause the actual sound.\n    this._video.pause()\n    this._playing = false\n  }\n\n  /** Set the blocking of the sound. */\n  wait () {\n    this._experiment._runner._events._run(-1, constants.RESPONSE_VIDEO, [])\n  }\n}\n","// Control elements\r\nimport Loop from '../items/loop.js'\r\nimport Sequence from '../items/sequence.js'\r\nimport Coroutines from '../items/coroutines.js'\r\n// Slides\r\nimport Sketchpad from '../items/sketchpad.js'\r\nimport Feedback from '../items/feedback.js'\r\n// Scripts\r\nimport InlineScript from '../items/inline_script.js'\r\nimport InlineJavaScript from '../items/inline_javascript.js'\r\n// Responses\r\nimport KeyboardResponse from '../items/keyboard_response.js'\r\nimport MouseResponse from '../items/mouse_response'\r\nimport Logger from '../items/logger.js'\r\n// Audio\r\nimport Sampler from '../items/sampler.js'\r\nimport Synth from '../items/synth.js'\r\n\r\n// Elements\r\nimport Arrow from '../elements/arrow.js'\r\nimport Circle from '../elements/circle.js'\r\nimport Ellipse from '../elements/ellipse.js'\r\nimport Fixdot from '../elements/fixdot.js'\r\nimport Gabor from '../elements/gabor.js'\r\nimport ImageElement from '../elements/image.js' // Image is a reserved JS class\r\nimport Line from '../elements/line.js'\r\nimport Noise from '../elements/noise.js'\r\nimport Rect from '../elements/rect.js'\r\nimport TextLine from '../elements/textline.js'\r\n\r\n// Widgets\r\nimport ButtonWidget from '../widgets/button.js'\r\nimport CheckBoxWidget from '../widgets/checkbox.js'\r\nimport FormWidget from '../widgets/form.js'\r\nimport ImageWidget from '../widgets/image_widget.js'\r\nimport ImageButtonWidget from '../widgets/image_button.js'\r\nimport LabelWidget from '../widgets/label.js'\r\nimport RatingScaleWidget from '../widgets/rating_scale.js'\r\nimport TextInputWidget from '../widgets/text_input.js'\r\nimport Themes from '../widgets/themes.js'\r\n\r\n// Plugins\r\nimport AdvancedDelay from '../plugins/advanced_delay.js'\r\nimport FormBase from '../plugins/form_base.js'\r\nimport FormConsent from '../plugins/form_consent.js'\r\nimport FormMultipleChoice from '../plugins/form_multiple_choice.js'\r\nimport FormTextDisplay from '../plugins/form_text_display.js'\r\nimport FormTextInput from '../plugins/form_text_input.js'\r\nimport MediaPlayer from '../plugins/media_player.js'\r\nimport Notepad from '../plugins/notepad.js'\r\nimport RepeatCycle from '../plugins/repeat_cycle.js'\r\nimport ResetFeedback from '../plugins/reset_feedback.js'\r\nimport TouchResponse from '../plugins/touch_response.js'\r\n\r\n/**\r\n * this variable maps the string representation of each element to the corresponding\r\n * class names.\r\n * @type {Object}\r\n */\r\nexport const itemClasses = {\r\n  // Items\r\n  loop: Loop,\r\n  sequence: Sequence,\r\n  sketchpad: Sketchpad,\r\n  feedback: Feedback,\r\n  inline_script: InlineScript,\r\n  inline_javascript: InlineJavaScript,\r\n  keyboard_response: KeyboardResponse,\r\n  mouse_response: MouseResponse,\r\n  logger: Logger,\r\n  sampler: Sampler,\r\n  synth: Synth,\r\n  coroutines: Coroutines,\r\n  // Elements\r\n  arrow: Arrow,\r\n  circle: Circle,\r\n  ellipse: Ellipse,\r\n  fixdot: Fixdot,\r\n  gabor: Gabor,\r\n  image: ImageElement,\r\n  line: Line,\r\n  noise: Noise,\r\n  rect: Rect,\r\n  textline: TextLine,\r\n  // Widgets\r\n  button_widget: ButtonWidget,\r\n  checkbox_widget: CheckBoxWidget,\r\n  form_widget: FormWidget,\r\n  image_button_widget: ImageButtonWidget,\r\n  image_widget: ImageWidget,\r\n  label_widget: LabelWidget,\r\n  rating_scale_widget: RatingScaleWidget,\r\n  text_input_widget: TextInputWidget,\r\n  themes: Themes,\r\n  // Plugins\r\n  advanced_delay: AdvancedDelay,\r\n  form_base: FormBase,\r\n  form_consent: FormConsent,\r\n  form_multiple_choice: FormMultipleChoice,\r\n  form_text_display: FormTextDisplay,\r\n  form_text_input: FormTextInput,\r\n  media_player_mpy: MediaPlayer,\r\n  notepad: Notepad,\r\n  repeat_cycle: RepeatCycle,\r\n  reset_feedback: ResetFeedback,\r\n  touch_response: TouchResponse\r\n}\r\n\r\nexport const constants = {\r\n  // Type of used collection mode.\r\n  PRESSES_ONLY: 1,\r\n  RELEASES_ONLY: 2,\r\n  PRESSES_AND_RELEASES: 3,\r\n\r\n  // Type of response used.\r\n  RESPONSE_NONE: 0,\r\n  RESPONSE_DURATION: 1,\r\n  RESPONSE_KEYBOARD: 2,\r\n  RESPONSE_MOUSE: 3,\r\n  RESPONSE_SOUND: 4,\r\n  RESPONSE_AUTOKEYBOARD: 5,\r\n  RESPONSE_AUTOMOUSE: 6,\r\n\r\n  // Running status of an item.\r\n  STATUS_NONE: 0,\r\n  STATUS_BUILD: 1,\r\n  STATUS_INITIALIZE: 2,\r\n  STATUS_EXECUTE: 3,\r\n  STATUS_FINALIZE: 4,\r\n\r\n  // Definition of the event loop status contstants.\r\n  TIMER_NONE: 0,\r\n  TIMER_WAIT: 1,\r\n  TIMER_EXIT: 2,\r\n  TIMER_PAUSE: 3,\r\n  TIMER_RESUME: 4,\r\n  TIMER_DONE: 5,\r\n  TIMER_BREAK: 6,\r\n  TIMER_ERROR: 7,\r\n  TIMER_FORM: 8\r\n}\r\n","import Item from '../items/item.js'\nimport Video from '../backends/video.js'\n\n/**\n * Class representing a video player item.\n * @extends Item\n */\nexport default class MediaPlayer extends Item {\n  /**\n     * Create a video player plugin item which plays videos.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script)\n\n    // Define and set the public properties.\n    this.description = 'A video player'\n\n    // Define and set the private properties.\n    this._script_executed = false\n\n    // Process the script.\n    this.from_string(script)\n  }\n\n  /** Implements the complete phase of an item. */\n  _complete () {\n    if (this._script_executed === false) {\n      // Stop the video playing.\n      this._video_player.stop()\n\n      // execute script.\n      if ((this._video_player._script !== null) && (this.vars.get('event_handler_trigger') === 'on keypress')) {\n        // Set the execute toggle.\n        this._script_executed = true\n\n        // Execute the script code.\n        this._runner._pythonParser._run(this, this._video_player._script)\n      } else {\n        // Inherited.\n        super._complete()\n      }\n    } else {\n      // Inherited.\n      super._complete()\n    }\n  }\n\n  /** Implements the update phase of an item. */\n  _update (response) {\n    // Update the video canvas.\n    this._video_player._update()\n  }\n\n  /** Implements the prepare phase of an item. */\n  prepare () {\n    // Opens the video file for playback.\n    this._video = this.experiment.pool[this.vars.get('video_src')]\n    this._video_player = new Video(this.experiment, this._video)\n\n    // Set the inline code options.\n    if (this.vars.event_handler !== '') {\n      this._video_player._script = this._runner._pythonParser._parse(this.vars.event_handler)\n    }\n    this._video_player._event_handler_always = (this.vars.event_handler_trigger === 'after every frame')\n\n    // Set the audio option.\n    this._video_player.audio = (this.vars.get('playaudio') === 'yes')\n\n    // Set the full screen option (if enabled).\n    this._video_player.full_screen = (this.vars.get('resizeVideo') === 'yes')\n\n    // Adjust the duration parameter from sound to video if defined.\n    if (this.vars.duration === 'sound') {\n      this.vars.duration = 'video'\n    }\n    this._video_player.duration = this.vars.duration\n\n    // Inherited.\n    super.prepare()\n  }\n\n  /** Implements the run phase of an item. */\n  run () {\n    // Set the onset time.\n    this.set_item_onset()\n    this.set_sri()\n\n    // Start the video player.\n    this._video_player.play()\n\n    // Start response processing.\n    this.process_response()\n  }\n}\n","import Item from '../items/item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a notepad item.\r\n * @extends Item\r\n */\r\nexport default class Notepad extends Item {\r\n  /**\r\n     * Create a notepad plugin item which only shows some text in the console.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'A simple notepad to document your experiment. This plug-in does nothing.'\r\n\r\n    // Read the item definition string.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Complete the current cycle.\r\n    this._complete()\r\n  }\r\n}\r\n","import Item from '../items/item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a repeat cycle item.\r\n * @extends Item\r\n */\r\nexport default class RepeatCycle extends Item {\r\n  /**\r\n     * Create a repeat cycle item which repeat a cycle within a loop.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'Optionally repeat a cycle from a loop'\r\n\r\n    // Process the script.\r\n    this.from_string(script)\r\n  }\r\n\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the prepare phase of an item. */\r\n  prepare () {\r\n    // Inherited.\r\n    super.prepare()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Prepare the condtion for which the repeat_cycle must fire.\r\n    const condition = this.syntax.compile_cond(this.vars.get('condition'))\r\n    // Run item only one time.\r\n    if (this._status !== constants.STATUS_FINALIZE) {\r\n      if (this.experiment._runner._pythonWorkspace._eval(condition) === true) {\r\n        this.experiment.vars.repeat_cycle = 1\r\n      }\r\n\r\n      // Complete the current cycle.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import Item from '../items/item.js'\r\nimport { constants } from '../system/constants.js'\r\n\r\n/**\r\n * Class representing a reset feedback item.\r\n * @extends Item\r\n */\r\nexport default class ResetFeedback extends Item {\r\n  /**\r\n     * Create a reset feedback  item which resets the feedback values.\r\n     * @param {Object} experiment - The experiment item to which the item belongs.\r\n     * @param {String} name - The unique name of the item.\r\n     * @param {String} script - The script containing the properties of the item.\r\n     */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Define and set the public properties.\r\n    this.description = 'Resets the feedback variables, such as \"avg_rt\" and \"acc\"'\r\n\r\n    // Read the item definition string.\r\n    this.from_string(script)\r\n  }\r\n\r\n  /** Implements the complete phase of an item. */\r\n  _complete () {\r\n    // sequence is finalized.\r\n    this._status = constants.STATUS_FINALIZE\r\n\r\n    // Inherited.\r\n    super._complete()\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Run item only one time.\r\n    if (this._status !== constants.STATUS_FINALIZE) {\r\n      // Run the item.\r\n      this.experiment.reset_feedback()\r\n\r\n      // Complete the current cycle.\r\n      this._complete()\r\n    }\r\n  }\r\n}\r\n","import MouseResponse from '../items/mouse_response.js'\n\n/**\n * Class representing a reset feedback item.\n * @extends Item\n */\nexport default class TouchResponse extends MouseResponse {\n  /**\n     * Create a reset feedback  item which resets the feedback values.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     * @param {String} name - The unique name of the item.\n     * @param {String} script - The script containing the properties of the item.\n     */\n  constructor (experiment, name, script) {\n    // Inherited.\n    super(experiment, name, script)\n\n    // Define and set the public properties.\n    this.description = 'A grid-based response item, convenient for touch screens'\n  }\n\n  /** Resets all item variables to their default value. */\n  reset () {\n    // Inherited.\n    super.reset()\n    this.vars.set('allowed_responses', null)\n\n    // Resets all item variables to their default value.\n    this.vars._ncol = 2\n    this.vars._nrow = 1\n  }\n\n  /** Implements the prepare phase of an item. */\n  prepare () {\n    // Temp hack\n    this.experiment.vars.correct = -1\n\n    // Inherited.\n    super.prepare()\n  }\n\n  /**\n     * Process a mouse click response.\n     * @param {Object} pRetval - The mouse response to process.\n     */\n  process_response_mouseclick (retval) {\n    super.process_response_mouseclick(retval)\n    // Calulate the row, column and cell.\n    this.col = Math.floor(\n        (this.experiment.vars.cursor_x + this.experiment.vars.width / 2) /\n        (this.experiment.vars.width / this.vars._ncol)\n    )\n    this.row = Math.floor(\n        (this.experiment.vars.cursor_y + this.experiment.vars.height / 2) /\n        (this.experiment.vars.height / this.vars._nrow)\n    )\n    this.cell = this.row * this.vars._ncol + this.col + 1\n    this.experiment.vars.response = this.cell\n    this.synonyms = [this.experiment.vars.get('response')]\n  }\n}\n","import {\n  constants\n} from './constants.js'\n\nimport isFunction from 'lodash/isFunction'\nimport isPlainObject from 'lodash/isPlainObject'\n\n/** Class representing a debugger. */\nexport default class Debugger {\n  /**\n   * Create a debugger which handles errors and messahes during an session.\n   * @param {Object} runner - The runner class to which the debugger belongs.\n   */\n  constructor (runner) {\n    // Create and set private properties.\n    this._runner = runner // Parent runner attached to the debugger.\n\n    // Create and set public properties.\n    this.enabled = true // Enable the debugger.\n    this.error = false // True if an error occured.\n    this.messageLog = [] // Arraty with alle log messages.\n  }\n\n  /** Initialize the debugger object class. */\n  _initialize () {\n    // Clear the log.\n    this.messageLog = []\n  }\n\n  /** Finalize the debugger object class. */\n  _finalize () {\n    // If enabled push the messages to the javascript console.\n    if (this.enabled === true) {\n      console.log(this.messageLog)\n    }\n\n    // Clear the log.\n    this.messageLog = []\n  }\n\n  /**\n   * Show a fatal error to the user and stops the running of the experiment.\n   * @param {String} errorText - The error shown to the user.\n   */\n  addError (errorText, context = null) {\n    // Set the error flag.\n    this.error = true\n\n    // Set status of the event system to break.\n    this._runner._events.state = constants.TIMER_ERROR\n\n    // Throw the exception.\n    console.error('OSWeb has stopped running due to a fatal error.')\n    console.error(errorText)\n\n    if (isPlainObject(context)) {\n      if (context.notify === true && isFunction(this._runner._onError)) {\n        const url = context.url || null\n        this._runner._onError(errorText, url)\n      }\n    }\n  }\n\n  /**\n   * Add a message to the debugger list.\n   * @param {String} message - The message to be added to the list.\n   */\n  addMessage (messageText) {\n    // Push the error message to the log.\n    this.messageLog.push(messageText)\n\n    if (this.enabled === true) {\n      console.log(messageText)\n    }\n  }\n\n  /**\n   * Mirror function for the AddMessage method.\n   * @param {String} messageText - The message to be added to the list.\n   */\n  msg (messageText) {\n    // Push the error message to the log.\n    this.addMessage(messageText)\n  }\n}\n","import {\n  isNumber\n} from 'lodash'\n\n/** Class representing a convertor. */\nexport default class Convertor {\n  /**\n   * Create a convertor which converts an osexp script to a JSON object stucture.\n   * @param {Object} runner - The runner class to which the debugger belongs.\n   */\n  constructor (runner) {\n    // Create and set private properties.\n    this.item = null // Current item to process.\n    this.runner = runner // Parent runner attached to the debugger.\n    this.variable = null // Container for global multiline variable.\n    this.variabelName = '' // Name of a global multiline variable.\n  }\n\n  /**\n   * Strip additional quotes for value token.\n   * @param {String} value - The value to check and (optional) convert.\n   * @return {String} - The converted value.\n   */\n  parseValue (value) {\n    // Strip additional quotes.\n    if ((value.length >= 4) && (value.substr(0, 1) === '\"') && (value.substr(value.length - 1, 1) === '\"')) {\n      return value.substr(1, value.length - 2)\n    } else {\n      return value\n    }\n  }\n\n  /**\n   * Process a single line within the osexp script.\n   * @param {String} line - The string line to parse.\n   */\n  parseLine (line) {\n    // Split a line into items and process them.\n    var items = line.match(/(\".*?\"|[^\"\\s]+)+(?=\\s*|\\s*$)/g)\n\n    // if defined process a single line.\n    if (items !== null) {\n      // Select action on first token.\n      switch (items[0]) {\n        case 'define':\n          // Process a define statement.\n          this.item = this.runner._itemStore.newItem(items[1], items[2], '')\n          break\n        case 'draw':\n          // Create the element.\n          var element = this.runner._itemStore._newElementClass(items[1], this.item, '')\n\n          // Split the properties and process them.\n          for (var i = 2; i < items.length; i++) {\n            var pair = items[i].split('=', 2)\n            element.properties[pair[0]] = pair[1]\n          }\n\n          // Add the element to the item.\n          this.item.elements.push(element)\n          break\n        case 'run':\n          if (this.item.type === 'sequence') {\n            // Process a run statement for a sequence item.\n            this.item.items.push({\n              'item': items[1],\n              'cond': items[2]\n            })\n          } else {\n            // Process a run statement for a loop item.\n            this.item.vars.item = items[1]\n          }\n          break\n        case 'set':\n          // Process a set statement.\n          this.item.vars[items[1]] = this.parseValue(items[2])\n          break\n        case 'setcycle':\n          // Process a setcycle statement.\n          var value = this.parseValue(items[3])\n\n          // Convert the python expression to javascript.\n          if (value[0] === '=') {\n            // Parse the python statement.\n            value = this.runner._pythonParser._prepare(value.slice(1))\n            if (value !== null) {\n              value = value.body[0]\n            }\n          } else {\n            // Check if the value is numeric\n            value = isNumber(value) ? Number(value) : value\n          }\n\n          // Set the matrix with the proper values.\n          if (this.item.matrix[items[1]] === undefined) {\n            this.item.matrix[items[1]] = {}\n          }\n          this.item.matrix[items[1]][items[2]] = value\n          break\n        case 'widget':\n          // Remove the widget token from the list.\n          items.shift()\n\n          // Add the element to the item.\n          this.item._widgets.push(items)\n          break\n        default:\n          // check for multiline variables.\n          if ((items[0].length > 5) && (items[0].substr(0, 2) === '__') && (items[0].substr(-2) === '__')) {\n            // Start of end of the multiline variable.\n            if (items[0] === '__end__') {\n              this.item.vars[this.variableName] = this.variable\n              this.variable = null\n            } else {\n              this.variableName = items[0].substr(2, items[0].length - 4)\n              this.variable = []\n            }\n          } else {\n            if (this.variable !== null) {\n              this.variable.push(line)\n            }\n          }\n      }\n    } else {\n      if (this.variable !== null) {\n        this.variable.push('')\n      } else {\n        // Return to default level.\n        this.item = this.runner._experiment\n      }\n    }\n  }\n\n  /** Initialize the debugger object class. */\n  parseScript (script) {\n    // Set first item.\n    this.item = this.runner._experiment\n\n    // Split the script into lines.\n    if (script !== null) {\n      // Split the script into lines.\n      var lines = script.split('\\n')\n      for (var i = 0; i < lines.length; i++) {\n        // Parse a single line\n        this.parseLine(lines[i])\n      }\n    }\n  }\n}\n","import { constants } from '../system/constants.js'\r\nimport { Ticker } from 'pixi.js'\r\n\r\n/** Class representing the event system. */\r\nexport default class Events {\r\n  /** The events class controls the running of an experiment. */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._currentItem = null // The current active item.\r\n    this._keyDownEvent = null // Container for last key event.\r\n    this._keyDownHandler = null // Key down event handler.\r\n    this._keyPressMode = constants.PRESSES_ONLY // Keyboard press mode.\r\n    this._keyUpHandler = null // Key up event handler.\r\n    this._mouseDownEvent = null // Container for last mouse event.\r\n    this._mouseDownHandler = null // Mouse down event handler.\r\n    this._mouseMoveEvent = null // Container for last mouse move event.\r\n    this._mouseMoveHandler = null // Mouse move event handler.\r\n    this._mousePressMode = constants.PRESSES_ONLY // Mouse press mode.\r\n    this._mouseUpHandler = null // Mouse up event handler.\r\n    this._runner = runner // Parent runner class.\r\n    this._responseGiven = false // Valid response toggle\r\n    this._responseList = null // Items to respond on.\r\n    this._responseType = constants.RESPONSE_NONE // Set type of response (0 = none, 1 = keyboard, 2 = mouse, 3 = sound).\r\n    this._soundHasEnded = false // Sound play is finished.\r\n    this._state = constants.TIMER_NONE // Current status of the runner.\r\n    this._statePrevious = constants.TIMER_NONE // Previous state, used when pausing experiment.\r\n    this._timeHandler = null // Timing event handler.\r\n    this._timeOut = -1 // Duration before timeout occures.\r\n    this._timeStamp = -1 // Moment of update checking.\r\n    this._videoHasEnded = false // Video play is finished.\r\n\r\n    // Definition of the conversion table to convert keycodes to OpenSesame codes.\r\n    this._KEY_CODES = [\r\n      '', '', '', '', '', '', 'help', '', 'backspace', 'tab', '', '', 'clear', 'enter', 'enter_special', '', 'shift', 'ctrl', 'alt', 'pause', // 00  .. 19\r\n      'caps', '', '', '', '', '', '', 'escape', '', '', '', '', 'space', 'page up', 'page down', 'end', 'home', 'left', 'up', 'right', // 20  .. 39\r\n      'down', 'select', 'print', 'execute', 'print screen', 'insert', 'delete', '', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', ':', ';', // 40  .. 59\r\n      '<', '=', '>', '?', '@', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', // 60  .. 79\r\n      'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'left meta', 'right meta', 'menu', '', '', 'kp0', 'kp1', 'kp2', 'kp3', // 80  .. 99\r\n      'kp4', 'kp5', 'kp6', 'kp7', 'kp8', 'kp9', 'kp_multiply', 'kp_plus', '', 'kp_minus', 'kp_period', 'kp_divide', 'f1', 'f2', 'f3', 'f4', 'f5', 'f6', 'f7', 'f8', // 100 .. 119\r\n      'f9', 'f10', 'f11', 'f12', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 120 .. 139\r\n      '', '', '', '', 'numlock', 'scrollock', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 140 .. 159\r\n      '^', '!', '\"', '#', '$', '%', '&', '_', '(', ')', '*', '+', '|', '_', '{', '}', '~', '', '', '', // 160 .. 179\r\n      '', '', '', '', '', '', ';', '=', ',', '-', '.', '/', '`', '', '', '', '', '', '', '', // 180 .. 199\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '[', // 200 .. 219\r\n      '\\\\', ']', '\\'', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 220 .. 239\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' // 240 .. 255\r\n    ]\r\n\r\n    // Definition of the conversion table to convert shift keycodes to OpenSesame codes.\r\n    this._KEY_SHIFTCODES = [\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', 'pause', // 00  .. 19\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 20  .. 39\r\n      '', '', '', '', '', '', '', '', ')', '!', '@', '#', '$', '%', '^', '&', '*', '(', '', ':', // 40  .. 59\r\n      '', '+', '', '', '', 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', // 60  .. 79\r\n      'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'y', 'z', '', '', '', '', '', '', '', '', '', '', // 80  .. 99\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 100 .. 119\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 120 .. 139\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 140 .. 159\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '_', '', '', '', '', '', '', // 160 .. 179\r\n      '', '', '', '', '', '', '', '', '<', '', '>', '?', '~', '', '', '', '', '', '', '', // 180 .. 199\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '{', // 200 .. 219\r\n      '|', '}', '\"', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', // 220 .. 239\r\n      '', '', '', '', '', '', '', '', '', '', '', '', '', '', '', '' // 240 .. 255\r\n    ]\r\n  }\r\n\r\n  /** Initialize the event system. */\r\n  _initialize () {\r\n    // Create and set the keyboard event listeners.\r\n    this._keyDownHandler = this._keyDown.bind(this)\r\n    this._keyUpHandler = this._keyUp.bind(this)\r\n    window.addEventListener('keydown', this._keyDownHandler)\r\n    window.addEventListener('keyup', this._keyUpHandler)\r\n\r\n    // Create and set the mouse event listeners.\r\n    this._mouseDownHandler = this._mouseDown.bind(this)\r\n    this._mouseMoveHandler = this._mouseMove.bind(this)\r\n    this._mouseUpHandler = this._mouseUp.bind(this)\r\n    this._touchStartHandler = this._touchStart.bind(this)\r\n    this._runner._renderer.view.addEventListener('mousedown', this._mouseDownHandler)\r\n    this._runner._renderer.view.addEventListener('mousemove', this._mouseMoveHandler)\r\n    this._runner._renderer.view.addEventListener('mouseup', this._mouseUpHandler)\r\n    this._runner._renderer.view.addEventListener('touchstart', this._touchStartHandler)\r\n\r\n    // Set the current item to the experiment object.\r\n    this._currentItem = this._runner._experiment\r\n    this._state = constants.TIMER_NONE\r\n\r\n    // Create the time handler and start the experiment.\r\n    this._timeHandler = new Ticker()\r\n    this._timeHandler.add(this._time.bind(this))\r\n    this._timeHandler.start()\r\n  }\r\n\r\n  /** Finalize the event system. */\r\n  _finalize () {\r\n    // Remove the keyboard event listeners.\r\n    window.removeEventListener('keydown', this._keyDownHandler)\r\n    window.removeEventListener('keyup', this._keyUpHandler)\r\n\r\n    // Remove the mouse event listeners.\r\n    this._runner._renderer.view.removeEventListener('mousedown', this._mouseDownHandler)\r\n    this._runner._renderer.view.removeEventListener('mousemove', this._mouseMoveHandler)\r\n    this._runner._renderer.view.removeEventListener('mouseup', this._mouseUpHandler)\r\n    this._runner._renderer.view.removeEventListener('touchstart', this._touchStartHandler)\r\n\r\n    // Stop the timing event listener.\r\n    this._timeHandler.stop()\r\n    this._timeHandler.remove(this._time)\r\n\r\n    // Clear the properties.\r\n    this._currentItem = null\r\n    this._mouseDownEvent = null\r\n    this._mouseMoveEvent = null\r\n    this._responseList = null\r\n    this._timeHandler = null\r\n  }\r\n\r\n  /**\r\n     * Convert a keyboard code to a OpenSesame code (including special characters ctrl/shift/alt).\r\n     * @param {Object} event - The keyboard event to process.\r\n     * @return {String} - The converted keyboard code.\r\n     */\r\n  _convertKeyCode (event) {\r\n    // Check for special characters\r\n    var key = ''\r\n    if ((event.shiftKey === true) && (event.keyCode !== 16)) {\r\n      // Shift key pressed with other key, so convert shift keys.\r\n      key = this._KEY_SHIFTCODES[event.keyCode]\r\n    } else if ((event.shiftKey === true) && (event.keyCode === 16)) {\r\n      // Shift code pressed, check for location (left or right)\r\n      key = (event.location === 1) ? 'lshift' : 'rshift'\r\n    } else if ((event.ctrlKey === true) && (event.keyCode === 17)) {\r\n      // Ctrl code pressed, check for location (left or right)\r\n      key = (event.location === 1) ? 'lctrl' : 'rctrl'\r\n    } else if ((event.altKey === true) && (event.keyCode === 18)) {\r\n      // Alt code pressed, check for location (left or right)\r\n      key = (event.location === 1) ? 'lalt' : 'ralt'\r\n    } else {\r\n      // Convert standard keycode.\r\n      key = this._KEY_CODES[event.keyCode]\r\n    }\r\n\r\n    // Return function result.\r\n    return key\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving key down events.\r\n     * @param {Object} event - system keydown event.\r\n     */\r\n  _keyDown (event) {\r\n    // Store the keyboard event.\r\n    this._keyDownEvent = {\r\n      'event': event,\r\n      'rtTime': this._runner._experiment.clock.time()\r\n    }\r\n\r\n    // Check for esc key to pause the experiment.\r\n    if ((event.keyCode === 27) && (this._state !== constants.TIMER_PAUSE)) {\r\n      // Set system to paused.\r\n      this._statePrevious = this._state\r\n      this._state = constants.TIMER_PAUSE\r\n\r\n      // Show the pause screen.\r\n      this._runner._screen._showPauseScreen()\r\n    } else if ((this._state === constants.TIMER_WAIT) &&\r\n      ((this._keyPressMode === constants.PRESSES_ONLY) ||\r\n      (this._keyPressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      return this._processKeyboardEvent(event, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving key up events.\r\n     * @param {Object} event - system keyup event.\r\n     */\r\n  _keyUp (event) {\r\n    // Only select this event when the collection mode is set for this.\r\n    if ((this._state === constants.TIMER_WAIT) && ((this._keyPressMode === constants.RELEASES_ONLY) ||\r\n      (this._keyPressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      return this._processKeyboardEvent(event, 0)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Process and convert keyboard events into response objects.\r\n     * @param {Object} event - system keyboard event.\r\n     * @param {Number} keyboardState - type of keyboard event.\r\n     */\r\n  _processKeyboardEvent (event, keyboardState) {\r\n    // Create a new keyboard response object.\r\n    const keyboardResponse = {\r\n      'event': event,\r\n      'rtTime': this._runner._experiment.clock.time(),\r\n      'state': keyboardState,\r\n      'type': constants.RESPONSE_KEYBOARD\r\n    }\r\n\r\n    // Convert response to proper keyboard token.\r\n    keyboardResponse.resp = this._convertKeyCode(event)\r\n\r\n    // Process the response to the current object.\r\n    if ((this._responseType === constants.RESPONSE_KEYBOARD) &&\r\n      ((this._responseList === null) ||\r\n      (this._responseList.indexOf(keyboardResponse.resp) >= 0))) {\r\n      // Process the current item.\r\n      if (this._currentItem !== null) {\r\n        // Process the response.\r\n        this._currentItem._update(keyboardResponse)\r\n      }\r\n\r\n      // Set the valid response given toggle.\r\n      this._responseGiven = true\r\n    }\r\n    return keyboardResponse\r\n  }\r\n\r\n  /** Prevent the right mouse context menu from showing. */\r\n  _mouseContext (event) {\r\n    // Prevent default action.\r\n    event.preventDefault()\r\n\r\n    // Return false to prevent the context menu from pushing up.\r\n    return false\r\n  }\r\n\r\n  /** Store the last mouse move event for later use. */\r\n  _mouseMove (event) {\r\n    // Store the mouse move event and its timestamp for use in the mouse class.\r\n    this._mouseMoveEvent = {\r\n      'event': event,\r\n      'rtTime': this._runner._experiment.clock.time()\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for touch start events, which for now are translated to\r\n     * moudown events.\r\n     * @param {Object} event - system touchstart event.\r\n     */\r\n  _touchStart (event) {\r\n    event.button = 0\r\n    event.clientX = event.changedTouches[0].clientX\r\n    event.clientY = event.changedTouches[0].clientY\r\n    this._mouseDown(event)\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving mouse down events.\r\n     * @param {Object} event - system mousedown event.\r\n     */\r\n  _mouseDown (event) {\r\n    // Store the mouse down event and its timestamp for use in the mouse class.\r\n    this._mouseDownEvent = {\r\n      'event': event,\r\n      'rtTime': this._runner._experiment.clock.time()\r\n    }\r\n\r\n    // Only select this event when the collection mode is set for this.\r\n    if ((this._state === constants.TIMER_WAIT) && ((this._mousePressMode === constants.PRESSES_ONLY) || (this._mousePressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      return this._processMouseEvent(event, 1)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for retrieving mouse up events.\r\n     * @param {Object} event - system mouseup event.\r\n     */\r\n  _mouseUp (event) {\r\n    // Only select this event when the collection mode is set for this.\r\n    if ((this._state === constants.TIMER_WAIT) && ((this._mousePressMode === constants.RELEASES_ONLY) || (this._mousePressMode === constants.PRESSES_AND_RELEASES))) {\r\n      // Process the event.\r\n      this._processMouseEvent(event, 0)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Process and convert mouse events into response objects.\r\n     * @param {Object} event - system mouse event.\r\n     * @param {Number} mouseState - type of mouse event.\r\n     */\r\n  _processMouseEvent (event, mouseState) {\r\n    // Create a mouse response object.\r\n    var mouseResponse = {\r\n      'event': event,\r\n      'rtTime': this._runner._experiment.clock.time(),\r\n      'state': mouseState,\r\n      'type': constants.RESPONSE_MOUSE\r\n    }\r\n\r\n    // Adjust mouse response.\r\n    mouseResponse.resp = String(event.button + 1)\r\n\r\n    // Process the response to the current object.\r\n    if ((this._responseType === constants.RESPONSE_MOUSE) && ((this._responseList === null) ||\r\n      (this._responseList.indexOf(mouseResponse.resp) >= 0))) {\r\n      // Process the response to the current object.\r\n      if (this._currentItem !== null) {\r\n        this._currentItem._update(mouseResponse)\r\n      }\r\n\r\n      // Set the valid response given toggle.\r\n      this._responseGiven = true\r\n    }\r\n    return mouseResponse\r\n  }\r\n\r\n  /**\r\n     * Event handler for sound event processing.\r\n     * @param {Object} event - sound end event.\r\n     */\r\n  _audioEnded (sampler) {\r\n    // If duration isequal to sound exit the sound item.\r\n    if (sampler.duration === 'sound') {\r\n      this.proceed()\r\n    }\r\n  }\r\n\r\n  /** Definition of methods for video event processing. */\r\n  _videoEnded (event) {\r\n    // If duration is set to video end respons to this.\r\n    var video = this\r\n    if (video.duration === 'video') {\r\n      video._experiment._runner._events._videoHasEnded = true\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Event handler for video play processing.\r\n     * @param {Object} event - sound end event.\r\n     */\r\n  _videoPlay (event) {\r\n  }\r\n\r\n  /**\r\n     * Event handler for experiment execution.\r\n     * @param {Object} event - system timer event.\r\n     */\r\n  _time (event) {\r\n    // Select the proper state.\r\n    switch (this._state) {\r\n      case constants.TIMER_NONE:\r\n        // Do nothing in the loop\r\n        break\r\n      case constants.TIMER_WAIT:\r\n        // Set current time stamp\r\n        this._timeStamp = this._currentItem.clock.time()\r\n\r\n        // Check if a time out occures or a valid response is given.\r\n        if (((this._timeOut === -1) && ((this._responseGiven === true) || (this._videoHasEnded === true))) ||\r\n                    ((this._timeOut > 0) && ((this._responseType === constants.RESPONSE_KEYBOARD) || (this._responseType === constants.RESPONSE_MOUSE)) && (this._responseGiven === true)) ||\r\n                    ((this._timeOut > 0) && ((this._timeStamp - this._currentItem.experiment.vars.get('time_' + this._currentItem.name)) > this._timeOut))) {\r\n          this.proceed()\r\n        } else {\r\n          // Update the current item without response.\r\n          this._currentItem._update(null)\r\n        }\r\n        break\r\n      case constants.TIMER_PAUSE:\r\n        // Do nothing in the loop\r\n        break\r\n      case constants.TIMER_RESUME:\r\n        // Do nothing in the loop\r\n        break\r\n      case constants.TIMER_BREAK:\r\n      case constants.TIMER_EXIT:\r\n        // Adjus the status.\r\n        this._state = constants.TIMER_NONE\r\n\r\n        // Exit the runner.\r\n        this._runner._finalize()\r\n        break\r\n      case constants.TIMER_FORM:\r\n        // Update the current item without response.\r\n        this._currentItem._update(null)\r\n        break\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Execute a stimulus/response wait period for a certain item.\r\n     * @param {Number} timeout - maximum time to wait for a response.\r\n     * @param {Number} responseType - type of response to wait for.\r\n     * @param {Array} responseList - list of acceptable respones.\r\n     */\r\n  _run (timeOut, responseType, responseList) {\r\n    // Set the event run|ning properties.\r\n    this._responseList = responseList\r\n    this._responseType = responseType\r\n    this._timeOut = timeOut\r\n\r\n    // Activate the event running.\r\n    this._responseGiven = false\r\n    this._soundHasEnded = false\r\n    this._state = constants.TIMER_WAIT\r\n    this._videoHasEnded = false\r\n  }\r\n\r\n  proceed () {\r\n    // Adjust the status.\r\n    this._state = constants.TIMER_NONE\r\n\r\n    // Remove the items from the general stack.\r\n    this._runner._itemStack.pop()\r\n\r\n    // Execute the post-run phase after duration is finished or response is received.\r\n    this._currentItem._complete()\r\n  }\r\n}\r\n","import { isFunction } from 'lodash'\r\n\r\n/** Class representing a parameter processor. */\r\nexport default class Parameters {\r\n  /**\r\n     * Create an session class which stores information about the client system.\r\n     * @param {Runner} runner - The runner class to which the debugger belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._itemCounter = 0 // Number of active parameter.\r\n    this._parameters = [] // All parameters to process.\r\n    this._runner = runner // Parent runner attached to the session object.\r\n  }\r\n\r\n  /** Initialize the parameters class. */\r\n  _initialize () {\r\n    // Check if subject parameter is already defined.\r\n    if (this._runner._subject !== null) {\r\n      // Set the subject number\r\n      this._runner._experiment.set_subject(this._runner._subject)\r\n\r\n      // Parameters are processed, next phase.\r\n      this._runner._screen._setupClickScreen()\r\n    } else {\r\n      // Update inroscreen.\r\n      this._runner._screen._updateIntroScreen('Retrieving input parameters.')\r\n\r\n      // Set properties if defined.\r\n      var parameter = {\r\n        dataType: 'number',\r\n        defaultValue: '0',\r\n        name: 'subject_nr',\r\n        title: 'Starting the experiment',\r\n        prompt: 'Please enter the subject number',\r\n        promptEnabled: true\r\n      }\r\n\r\n      // Add the subject parameter to the parameters list.\r\n      this._parameters.push(parameter)\r\n\r\n      // Process the Parameters.\r\n      this._processParameters()\r\n    }\r\n  }\r\n\r\n  /** Process all parameters within the parameter list. */\r\n  _processParameters () {\r\n    // Process all items for which a user input is required.\r\n    if (this._itemCounter < this._parameters.length) {\r\n      // Process a  parameter.\r\n      this._processParameter(this._parameters[this._itemCounter])\r\n    } else {\r\n      // Transfer the startup info to the context.\r\n      this._transferParameters()\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Callback function for dialog when aits OK button has been clicked.\r\n     * @param {Object} parameter - The parameter to set.\r\n     * @param {String} value - The value to set.\r\n     */\r\n  _onParamConfirm (parameter, value) {\r\n    // Get the response information\r\n    parameter.response = value\r\n\r\n    // Increase the counter.\r\n    this._itemCounter++\r\n\r\n    // Continue processing.\r\n    this._processParameters()\r\n  }\r\n\r\n  /** Callback function for dialog when its cancel button has been clicked. */\r\n  _onParamCancel () {\r\n    // Exit the runner.\r\n    this._runner._exit()\r\n  }\r\n\r\n  /**\r\n     * Process a single parameter\r\n     * @param {Object} parameter - The parameter which must be processed.\r\n     */\r\n  _processParameter (parameter) {\r\n    // Check if a user request is required.\r\n    if (parameter.promptEnabled === true) {\r\n      // Use passed function that displays a prompt. This leaves the display\r\n      // of the prompt to the library or system that implements osweb.\r\n      if (isFunction(this._runner._prompt)) {\r\n        this._runner._prompt(parameter.title, parameter.prompt,\r\n          parameter.defaultValue, parameter.dataType,\r\n          this._onParamConfirm.bind(this, parameter), this._onParamCancel.bind(this))\r\n      } else {\r\n        // Fallback to the window prompt if no function has been passed.\r\n        const result = window.prompt(parameter.prompt, parameter.defaultValue)\r\n\r\n        if (result === null) {\r\n          this._onParamCancel()\r\n        } else {\r\n          this._onParamConfirm(parameter, result)\r\n        }\r\n      }\r\n    } else {\r\n      // Assign default value to the Startup item.\r\n      parameter.response = parameter.defaultValue\r\n\r\n      // Increase the counter.\r\n      this._itemCounter++\r\n\r\n      // Continue processing.\r\n      this._processParameters()\r\n    }\r\n  }\r\n\r\n  /** Transfer the startup info items to the context. */\r\n  _transferParameters () {\r\n    // Transfer the startup info items to the context.\r\n    for (var i = 0; i < this._parameters.length; i++) {\r\n      // Additional run for subject_nr\r\n      if (this._parameters[i].name === 'subject_nr') {\r\n        this._runner._experiment.set_subject(this._parameters[i].response)\r\n      } else {\r\n        this._runner._experiment.vars.set(this._parameters[i].name,\r\n          this._parameters[i].response)\r\n      }\r\n    }\r\n\r\n    // Parameters are processed, next phase.\r\n    this._runner._screen._setupClickScreen()\r\n  }\r\n}\r\n","import { isFunction } from 'lodash'\r\nimport { Container, Sprite, Graphics, Text } from 'pixi.js'\r\nimport { VERSION_NUMBER } from '../index.js'\r\n\r\n/** Class representing a Screen. */\r\nexport default class Screen {\r\n  /**\r\n   * Create an introduction screen which handles the start of the experiment.\r\n   * @param {Object} runner - The runner class to which the screen belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the screen object.\r\n\r\n    // Set class properties.\r\n    this._active = true // If true the introduction screen is shown.\r\n    this._click = true // If true all is started with a mouse click.\r\n    this._container = null //  Container which holds the screen info.\r\n    this._exit = false // Exit toggle to prevent dialog when closing experiment.\r\n  }\r\n\r\n  screenCenter () {\r\n    return {\r\n      x: this._runner._renderer.width / 2,\r\n      y: this._runner._renderer.height / 2\r\n    }\r\n  }\r\n\r\n  /** Initialize the fullscreen mode if enabled. */\r\n  _fullScreenInit () {\r\n    // Check if fullscreen must be enabled.\r\n    if (this._runner._fullScreen === true) {\r\n      // Get the container element.\r\n      var element = this._runner._container\r\n\r\n      // Go full-screen\r\n      if (element.requestFullscreen) {\r\n        document.addEventListener('fullscreenchange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('fullscreenerror', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.requestFullscreen()\r\n      } else if (element.webkitRequestFullscreen) {\r\n        document.addEventListener('webkitfullscreenchange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('webkitfullscreenerror', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.webkitRequestFullscreen()\r\n      } else if (element.mozRequestFullScreen) {\r\n        document.addEventListener('mozfullscreenchange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('mozfullscreenerror', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.mozRequestFullScreen()\r\n      } else if (element.msRequestFullscreen) {\r\n        document.addEventListener('MSFullscreenChange', (e) => {\r\n          this._fullScreenChanged(e)\r\n        })\r\n        document.addEventListener('MSFullscreenError', (e) => {\r\n          this._fullScreenError(e)\r\n        })\r\n        element.msRequestFullscreen()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Finalize the fullscreen mode if if was enabled. */\r\n  _fullScreenExit () {\r\n    // Check if fullscreen must be enabled.\r\n    if (this._runner._fullScreen === true) {\r\n      // Set the exit toggle.\r\n      this._exit = true\r\n\r\n      // Exit the full screen mode.\r\n      if (document.exitFullscreen) {\r\n        document.exitFullscreen()\r\n      } else if (document.webkitExitFullscreen) {\r\n        document.webkitExitFullscreen()\r\n      } else if (document.mozCancelFullScreen) {\r\n        document.mozCancelFullScreen()\r\n      } else if (document.msExitFullscreen) {\r\n        document.msExitFullscreen()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Event handler which responds to full-screen change. */\r\n  _fullScreenChanged () {\r\n    // Check if we are dropping out of full-screen.\r\n    if (document.fullscreenElement ||\r\n      document.webkitFullscreenElement ||\r\n      document.mozFullScreenElement ||\r\n      document.msFullscreenElement) {\r\n      // Scale the canvas\r\n      switch (this._runner._scaleMode) {\r\n        case 'noScale':\r\n          // Default mode, no scaling, canbas is centered on the screen.\r\n          this._runner._renderer.view.style.top = '0px'\r\n          this._runner._renderer.view.style.bottom = '0px'\r\n          this._runner._renderer.view.style.left = '0px'\r\n          this._runner._renderer.view.style.right = '0px'\r\n          this._runner._renderer.view.style.right = '0px'\r\n          this._runner._renderer.view.style.margin = 'auto'\r\n          this._runner._renderer.view.style.display = 'block'\r\n          this._runner._renderer.view.style.position = 'absolute'\r\n          this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n          break\r\n        case 'showAll':\r\n          // Default mode, no scaling, canbas is centered on the screen.\r\n          this._runner._renderer.view.style.top = '0px'\r\n          this._runner._renderer.view.style.bottom = '0px'\r\n          this._runner._renderer.view.style.left = '0px'\r\n          this._runner._renderer.view.style.right = '0px'\r\n          this._runner._renderer.view.style.right = '0px'\r\n          this._runner._renderer.view.style.margin = 'auto'\r\n          this._runner._renderer.view.style.display = 'block'\r\n          this._runner._renderer.view.style.position = 'absolute'\r\n          if ((this._runner._container.clientWidth - this._runner._experiment.vars.width) >\r\n            (this._runner._container.clientHeight - this._runner._experiment.vars.height)) {\r\n            let ar = (this._runner._container.clientHeight / this._runner._experiment.vars.height)\r\n            this._runner._renderer.resize(Math.round(this._runner._experiment.vars.width * ar), this._runner._container.clientHeight)\r\n            this._runner._experiment._scale_x = Math.round(this._runner._experiment.vars.width * ar) / this._runner._experiment.vars.width\r\n            this._runner._experiment._scale_y = (this._runner._container.clientHeight / this._runner._experiment.vars.height)\r\n          } else {\r\n            let ar = (this._runner._container.clientWidth / this._runner._experiment.vars.width)\r\n            this._runner._renderer.resize(this._runner._container.clientWidth, Math.round(this._runner._experiment.vars.height * ar))\r\n            this._runner._experiment._scale_x = (this._runner._container.clientWidth / this._runner._experiment.vars.width)\r\n            this._runner._experiment._scale_y = Math.round(this._runner._experiment.vars.height * ar) / this._runner._experiment.vars.height\r\n          }\r\n          this._runner._experiment._currentCanvas._container.scale.x = this._runner._experiment._scale_x\r\n          this._runner._experiment._currentCanvas._container.scale.y = this._runner._experiment._scale_y\r\n          this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n          break\r\n        case 'exactFit':\r\n          // Fit to the exact window size (cropping).\r\n          this._runner._experiment._scale_x = (this._runner._container.clientWidth / this._runner._experiment.vars.width)\r\n          this._runner._experiment._scale_y = (this._runner._container.clientHeight / this._runner._experiment.vars.height)\r\n\r\n          // Reize the current canvas.\r\n          this._runner._renderer.resize(this._runner._container.clientWidth, this._runner._container.clientHeight)\r\n          this._runner._experiment._currentCanvas._container.scale.x = this._runner._experiment._scale_x\r\n          this._runner._experiment._currentCanvas._container.scale.y = this._runner._experiment._scale_y\r\n          this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n          break\r\n      }\r\n    } else {\r\n      // Check for exiting experiment.\r\n      if (this._exit === false) {\r\n        // Resclae to 1Fit to the exact window size (cropping).\r\n        this._runner._experiment._scale_x = 1\r\n        this._runner._experiment._scale_y = 1\r\n\r\n        // Fit to the exact window size (cropping).\r\n        this._runner._renderer.resize(this._runner._experiment.vars.width, this._runner._experiment.vars.height)\r\n        this._runner._experiment._currentCanvas._container.scale.x = 1\r\n        this._runner._experiment._currentCanvas._container.scale.y = 1\r\n        this._runner._renderer.render(this._runner._experiment._currentCanvas._container)\r\n\r\n        // Open Sesame is running, request subject to continue of to stop.\r\n        if (isFunction(this._runner._confirm)) {\r\n          this._runner._confirm('Leaving full-screen mode, pausing experiment.',\r\n            'Please press ok the resume the experiment otherwise cancel to stop.',\r\n            this._onFullScreenConfirm.bind(this), this._onFullScreenCancel.bind(this))\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Event handler which responds to full-screen change errors. */\r\n  _fullScreenError () {\r\n    // Show error message.\r\n    this._runner.debugger.addError('Could not start full-screen mode, experiment stopped.')\r\n  }\r\n\r\n  /** Event handler to respond to dialog ok conmfirmation. */\r\n  _onFullScreenConfirm () {\r\n    // Get the container element.\r\n    var element = this._runner._container\r\n    // Go full-screen\r\n    if (element.requestFullscreen) {\r\n      element.requestFullscreen()\r\n    } else if (element.webkitRequestFullscreen) {\r\n      element.webkitRequestFullscreen()\r\n    } else if (element.mozRequestFullScreen) {\r\n      element.mozRequestFullScreen()\r\n    } else if (element.msRequestFullscreen) {\r\n      element.msRequestFullscreen()\r\n    }\r\n  }\r\n\r\n  /** Event handler to respond to dialog cancel confirmation. */\r\n  _onFullScreenCancel () {\r\n    // Exit the experiment.\r\n    this._runner._finalize()\r\n  }\r\n\r\n  /** Set the introscreen elements. */\r\n  _setupIntroScreen () {\r\n    // Check if introscreen is used.\r\n    if (this._active === true) {\r\n      // Define introscreen elements.\r\n      this._introScreen = new Container()\r\n\r\n      const center = this.screenCenter()\r\n\r\n      const logoPath = (typeof logoSrc === 'undefined') ? 'img/opensesame.png' : logoSrc\r\n\r\n      const oswebLogo = Sprite.from(logoPath)\r\n      const oswebTitle = new Text('OSWeb', {\r\n        fontFamily: 'Arial',\r\n        fontSize: 26,\r\n        fill: '#FFFFFF'\r\n      })\r\n      const versionInfo = new Text(VERSION_NUMBER, {\r\n        fontFamily: 'Arial',\r\n        fontSize: 16,\r\n        fill: '#FFFFFF'\r\n      })\r\n\r\n      const copyrightText = new Text(\r\n        `Copyright Jaap Bos, Daniel Schreij & Sebastiaan Mathot, 2016 - ${(new Date()).getFullYear()}`,\r\n        {\r\n          fontFamily: 'Arial',\r\n          fontSize: 12,\r\n          fill: '#FFFFFF'\r\n        }\r\n      )\r\n\r\n      oswebLogo.width = oswebLogo.height = 150\r\n\r\n      oswebLogo.position.set(center.x - oswebLogo.width / 2, 50)\r\n      oswebTitle.position.set(center.x - oswebTitle.width / 2, 215)\r\n      versionInfo.position.set(center.x - versionInfo.width / 2, 250)\r\n      copyrightText.position.set(\r\n        center.x - copyrightText.width / 2,\r\n        center.y * 2 - copyrightText.height * 2\r\n      )\r\n\r\n      this._statusText = new Text('', {\r\n        fontFamily: 'Arial',\r\n        fontSize: 18,\r\n        fill: '#FFFFFF'\r\n      })\r\n      this._statusText.position.set(\r\n        center.x - this._statusText.width / 2,\r\n        center.y\r\n      )\r\n      this._introScreen.addChild(oswebLogo, oswebTitle,\r\n        versionInfo, copyrightText, this._statusText)\r\n\r\n      // Show the introduction screen.\r\n      this._runner._renderer.render(this._introScreen)\r\n    }\r\n  }\r\n\r\n  /** Check if the experiment must be clicked to start. */\r\n  _setupClickScreen () {\r\n    // Check if the experiment must be clicked to start.\r\n    if (this._click === true) {\r\n      // Update inroscreen.\r\n\r\n      const text = `\r\n    Your participation to this experiment should be anonymous.\r\n        Never provide any personal or sensitive information\r\n            (e.g. credit card or social security numbers).\r\n\r\n                    Click here with the mouse to begin.`\r\n\r\n      this._updateIntroScreen(text)\r\n\r\n      // Setup the mouse click response handler.\r\n      var clickHandler = function (event) {\r\n        // Remove the handler.\r\n        this._runner._renderer.view.removeEventListener('click', clickHandler)\r\n        this._runner._renderer.view.removeEventListener('touchstart', clickHandler)\r\n\r\n        // Finalize the introscreen elements.\r\n        this._clearIntroScreen()\r\n\r\n        // Start the task.\r\n        this._runner._initialize()\r\n      }.bind(this)\r\n\r\n      // Set the temporary mouse click.\r\n      this._runner._renderer.view.addEventListener('click', clickHandler, false)\r\n      this._runner._renderer.view.addEventListener('touchstart', clickHandler, false)\r\n    } else {\r\n      // Finalize the introscreen elements.\r\n      this._clearIntroScreen()\r\n\r\n      // Start the runner.\r\n      this._runner._initialize()\r\n    }\r\n  }\r\n\r\n  /** Clear the introscreen elements. */\r\n  _clearIntroScreen () {\r\n    // Update the introscreen elements.\r\n    if (this._active === true) {\r\n      // Clear the stage by temoving al the child elements.\r\n      for (var i = this._introScreen.children.length - 1; i >= 0; i--) {\r\n        this._introScreen.removeChild(this._introScreen.children[i])\r\n      };\r\n      this._runner._renderer.render(this._introScreen)\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Updates the progress bar used when loading the file pool.\r\n   * @param {Number} percentage - The percentage (0-100) of the progress bar.\r\n   */\r\n  _updateProgressBar (percentage) {\r\n    const center = this.screenCenter()\r\n\r\n    const xOuter = 200\r\n    const wOuter = 400\r\n    const hOuter = 20\r\n    const yOuter = center.y + 2 * hOuter\r\n\r\n    if (this._active === true) {\r\n      // Select the stage.\r\n      switch (percentage) {\r\n        case -1:\r\n          this._progressBarOuter = new Graphics()\r\n          this._progressBarOuter.lineStyle(1, 0xFFFFFF, 1)\r\n          this._progressBarOuter.drawRect(xOuter, yOuter, wOuter, hOuter)\r\n          this._progressBarOuter.x = 0\r\n          this._progressBarOuter.y = 0\r\n          this._progressBarInner = new Graphics()\r\n          this._progressBarInner.lineStyle(1, 0xFFFFFF, 1)\r\n          this._progressBarInner.drawRect(xOuter + 2, yOuter + 2, 1, hOuter - 4)\r\n          this._progressBarInner.x = 0\r\n          this._progressBarInner.y = 0\r\n          this._introScreen.addChild(this._progressBarInner)\r\n          this._introScreen.addChild(this._progressBarOuter)\r\n          this._runner._renderer.render(this._introScreen)\r\n          break\r\n        case 100:\r\n          this._introScreen.removeChild(this._progressBarInner)\r\n          this._introScreen.removeChild(this._progressBarOuter)\r\n          this._runner._renderer.render(this._introScreen)\r\n          break\r\n        default:\r\n          this._progressBarOuter.beginFill(0xFFFFFF)\r\n          this._progressBarOuter.drawRect(xOuter + 2, yOuter + 2, Math.round(percentage * (wOuter - 4)), hOuter - 4)\r\n          this._progressBarOuter.endFill()\r\n          this._runner._renderer.render(this._introScreen)\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the introscreen elements.\r\n   * @param {String} text - The text which must be updated.\r\n   */\r\n  _updateIntroScreen (text) {\r\n    // Update the introscreen elements.\r\n    if (this._active === true) {\r\n      const center = this.screenCenter()\r\n      this._statusText.text = text\r\n      this._statusText.position.set(\r\n        center.x - this._statusText.width / 2,\r\n        center.y\r\n      )\r\n      this._runner._renderer.render(this._introScreen)\r\n    }\r\n  }\r\n\r\n  /** Show the pause screen. */\r\n  _showPauseScreen () {\r\n    // Open Sesame is running, request subject to continue of to stop.\r\n    if (isFunction(this._runner._confirm)) {\r\n      this._runner._confirm('Esc key pressed, pausing experiment.',\r\n        'Please press ok the resume the experiment otherwise cancel to stop.',\r\n        this._onPauseScreenConfirm.bind(this), this._onPauseScreenCancel.bind(this))\r\n    }\r\n  }\r\n\r\n  /** Event handler to respond to dialog ok conmfirmation. */\r\n  _onPauseScreenConfirm () {\r\n    // Restore the old state.\r\n    this._runner._events._state = this._runner._events._statePrevious\r\n  }\r\n\r\n  /** Event handler to respond to dialog cancel confirmation. */\r\n  _onPauseScreenCancel () {\r\n    // Exit the experiment.\r\n    this._runner._finalize()\r\n  }\r\n}\r\n","/** Class representing a client session information collector. */\r\nexport default class Session {\r\n  /**\r\n     * Create an session object which stores information about the client system.\r\n     * @param {Object} runner - The runner class to which the session belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._date = null // Date information container.\r\n    this._runner = runner // Parent runner attached to the session object.\r\n    this._session = null // Session information container.\r\n  }\r\n\r\n  /** Initialize the session. */\r\n  _initialize () {\r\n    // Update the loader text.\r\n    this._runner._screen._updateIntroScreen('Retrieving session information.')\r\n\r\n    // Get the session information.\r\n    this._getSessionInformation()\r\n  }\r\n\r\n  /** Retrieve session information from the client. */\r\n  _getSessionInformation () {\r\n    // Get the session information from the client system.\r\n    this._date = new Date()\r\n    this._session = {\r\n      'browser': {\r\n        'codename': navigator.appCodeName,\r\n        'name': navigator.appName,\r\n        'version': navigator.appVersion\r\n      },\r\n      'date': {\r\n        'startdate': ('0' + this._date.getDate()).slice(-2) + '-' + ('0' + this._date.getMonth()).slice(-2) + '-' + ('0' + this._date.getFullYear()).slice(-2),\r\n        'starttime': ('0' + this._date.getHours()).slice(-2) + ':' + ('0' + this._date.getMinutes()).slice(-2) + ':' + ('0' + this._date.getSeconds()).slice(-2),\r\n        'startdateUTC': ('0' + this._date.getUTCDate()).slice(-2) + '-' + ('0' + this._date.getUTCMonth()).slice(-2) + '-' + ('0' + this._date.getUTCFullYear()).slice(-2)\r\n      },\r\n      'experiment': {\r\n        'debug': 0,\r\n        'parameters': 0,\r\n        'pilot': 0,\r\n        'taskname': 0,\r\n        'taskversion': 0\r\n      },\r\n      'screen': {\r\n        'availableHeight': screen.availHeight,\r\n        'availableWidth': screen.availWidth,\r\n        'colorDepth': screen.colorDepth,\r\n        'height': screen.height,\r\n        'outerheight': window.outerheight,\r\n        'outerwidth': window.outerwidth,\r\n        'pixelDepth': screen.pixelDepth,\r\n        'screenX': window.screenX,\r\n        'screenY': window.screenY,\r\n        'width': screen.width\r\n      },\r\n      'system': {\r\n        'os': navigator.platform\r\n      }\r\n    }\r\n  }\r\n}\r\n","import pako from 'pako'\nimport isFunction from 'lodash/isFunction'\nimport untar from 'js-untar'\n\n/**\n * FileStreamer makes it possible to asynchronously stream a file to another reader\n *\n * @class FileStreamer\n */\nclass FileStreamer {\n  constructor (file, chunkSize = 64 * 1024) {\n    this.file = file\n    this.offset = 0\n    this.chunkSize = chunkSize // bytes\n    this.rewind()\n  }\n  rewind () {\n    this.offset = 0\n  }\n  isEndOfFile () {\n    return this.offset >= this.getFileSize()\n  }\n  readBlock () {\n    const fileReader = new FileReader()\n    const blob = this.file.slice(this.offset, this.offset + this.chunkSize)\n\n    return new Promise((resolve, reject) => {\n      fileReader.onloadend = (event) => {\n        const target = (event.target)\n        if (target.error) {\n          return reject(target.error)\n        }\n\n        this.offset += target.result.byteLength\n\n        resolve({\n          data: target.result,\n          progress: Math.min(this.offset / this.file.size, 1)\n        })\n      }\n\n      fileReader.readAsArrayBuffer(blob)\n    })\n  }\n  getFileSize () {\n    return this.file.size\n  }\n}\n\n/**\n * Decompresses a cpmpressed experiment file\n *\n * @export\n * @param {File} zipfile The file to extract\n * @param {function} onProgress Function to be called during extraction progress. Receives proportion complete\n * @returns array of Files\n */\nexport async function decompress (zipfile, onProgress) {\n  const fs = new FileStreamer(zipfile)\n  const inflator = new pako.Inflate()\n  let block\n\n  while (!fs.isEndOfFile()) {\n    block = await fs.readBlock()\n    inflator.push(block.data, fs.isEndOfFile())\n    if (inflator.err) {\n      throw inflator.msg\n    }\n    if (isFunction(onProgress)) onProgress(block.progress)\n  }\n  return untar(inflator.result.buffer)\n}\n\n/**\n * Converts a File/Blob to a string representation\n *\n * @export\n * @param {File} inputFile The file to convert\n * @returns string\n */\nexport function readFileAsText (inputFile) {\n  const temporaryFileReader = new FileReader()\n\n  return new Promise((resolve, reject) => {\n    temporaryFileReader.onerror = () => {\n      temporaryFileReader.abort()\n      reject(new DOMException('Problem parsing input file.'))\n    }\n\n    temporaryFileReader.onload = () => {\n      resolve(temporaryFileReader.result)\n    }\n    temporaryFileReader.readAsText(inputFile)\n  })\n}\n\n/**\n * Returns current host as detected by browser\n *\n * @returns String\n */\nfunction getHost () {\n  return window.location.origin !== 'null' ? window.location.origin : 'http://nodejs.test'\n}\n\n/**\n * Checks if the passed string contains a valid URL\n *\n * @export\n * @param {String} str The string to check\n * @returns boolean\n */\nexport function parseUrl (str) {\n  try {\n    const host = getHost()\n    return new URL(str, host)\n  } catch (e) {\n    return false\n  }\n}\n","import WebFont from 'webfontloader'\r\nimport {\r\n  decompress,\r\n  readFileAsText,\r\n  parseUrl\r\n} from '../util/files'\r\nimport isString from 'lodash/isString'\r\nimport isObject from 'lodash/isObject'\r\nimport axios from 'axios'\r\n\r\n/** Class representing a information stream processor. */\r\nexport default class Transfer {\r\n  /**\r\n   * Create a transfer object used for streaming information.\r\n   * @param {Object} runner - The runner class to which the transfer belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._runner = runner // Parent runner attached to the transfer object.\r\n  }\r\n\r\n  /**\r\n   * Read an osexp file.\r\n   * @param {Object|String} source - A file object or a String containing the experiment or a download URL.\r\n   */\r\n  async _readSource (source) {\r\n    // Check type of object.\r\n    if (!isString(source) && (!isObject(source) || source.constructor !== File)) {\r\n      throw new Error('No osexp source file defined.')\r\n    }\r\n\r\n    // This var will hold the OS script after parsing\r\n    let osScript\r\n\r\n    if (source.constructor === File) {\r\n      // Source is a local file.\r\n      try {\r\n        osScript = await this._readOsexpFromFile(source)\r\n      } catch (e) {\r\n        throw new Error(`Could not read local osexp, ${e}`)\r\n      }\r\n    } else if (isString(source)) {\r\n      // Check if the source string is an URL\r\n      const uri = parseUrl(source)\r\n\r\n      if (uri !== false) {\r\n        // Attempt to download and load the remote experiment\r\n        try {\r\n          const remoteFile = await this.fetch(uri.href)\r\n          osScript = await this._readOsexpFromFile(remoteFile)\r\n        } catch (e) {\r\n          throw new Error(`Could not read remote osexp, ${e}`)\r\n        }\r\n      } else {\r\n        try {\r\n          osScript = this._processScript(source)\r\n        } catch (e) {\r\n          throw new Error(`Could not read source string, ${e}\\n\\n${source}`)\r\n        }\r\n      }\r\n    }\r\n    // Read in and generate the webfonts\r\n    await this._readWebFonts()\r\n\r\n    return osScript\r\n  }\r\n\r\n  /**\r\n   * Reads in an osexp from a string\r\n   *\r\n   * @param {File|String} osexpFile The osexp to parse, can be a string or a File containing a string\r\n   * @returns boolean\r\n   * @memberof Transfer\r\n   */\r\n  async _readExpFile (osexp) {\r\n    if ([File, Blob].includes(osexp.constructor)) {\r\n      osexp = await readFileAsText(osexp)\r\n    }\r\n    return this._processScript(osexp)\r\n  }\r\n\r\n  /**\r\n   * Reading and extracting an osexp file from a file location.\r\n   * @param {Object} file - A file object containing the experiment.\r\n   */\r\n  async _readOsexpFromFile (osexpFile) {\r\n    try {\r\n      return await this._readExpFile(osexpFile)\r\n    } catch (e) {\r\n      this._runner._debugger.addMessage(`Could not read osexp file as plain text: ${e.message}.\\nFile is probably binary`)\r\n    }\r\n    // Reading and extracting an osexp file from a file location.\r\n    const files = await decompress(\r\n      osexpFile,\r\n      (progress) => this._runner._screen._updateProgressBar(progress)\r\n    )\r\n\r\n    // Find the script in the array of extracted files. Throw an error if it isn't found.\r\n    const expFileIndex = files.findIndex((item) => item.name === 'script.opensesame')\r\n    if (expFileIndex === -1) throw new Error('Could not locate experiment script')\r\n    // Pop the script out of the file array and proccess it\r\n    const expFile = files.splice(expFileIndex, 1)[0]\r\n    const script = await this._readExpFile(expFile.blob)\r\n\r\n    // According to the zlib convention followed by the pako library we use to decompress\r\n    // the osexp file, files have a type of 0, so filter these out.\r\n    const poolFiles = files.filter(\r\n      (item) => item.type === '0'\r\n    )\r\n    // Process the file pool items\r\n    await this._processOsexpPoolItems(poolFiles)\r\n    return script\r\n  }\r\n\r\n  /**\r\n   * Reads an osexp file from a remote server, if its type is indicated to be\r\n   * 'text/plain' (opposed to being zipped)\r\n   * @param  {string} url The url at which the osexp can be found\r\n   * @return {void}\r\n   */\r\n  async fetch (url) {\r\n    const response = await axios.get(url, {\r\n      responseType: 'blob',\r\n      onDownloadProgress: (event) => {\r\n        if (event.lengthComputable) {\r\n          this._runner._screen._updateProgressBar(event.loaded / event.total)\r\n        }\r\n      }\r\n    })\r\n    let res\r\n    if (/Edge/.test(navigator.userAgent)) {\r\n      res = new Blob([response.data])\r\n      res.name = 'downloaded.osexp'\r\n    } else {\r\n      res = new File([response.data], 'downloaded.osexp')\r\n    }\r\n    return res\r\n  }\r\n\r\n  /**\r\n   * Process an osexp script\r\n   * @param  {string} contents - The script contents\r\n   * @return {boolean} - True if script was successfully processed, false otherwise\r\n   */\r\n  _processScript (contents) {\r\n    if (contents.substr(0, 3) !== '---') {\r\n      throw new Error('Specified script file is not valid OpenSesame script')\r\n    }\r\n\r\n    // Disable the progressbar.\r\n    this._runner._screen._updateProgressBar(100)\r\n    // Set the script paramter.\r\n    // this._runner._script = contents\r\n    return contents\r\n  }\r\n\r\n  /**\r\n   * Asynchronously iterate over file pool files and generate items for them.\r\n   *\r\n   * @param {array} poolFiles The array containing file pool files\r\n   * @returns void\r\n   * @memberof Transfer\r\n   */\r\n  async _processOsexpPoolItems (poolFiles) {\r\n    // Async iterator that handles each file in the poolFiles array\r\n    const asyncIterator = {\r\n      currentIndex: 0,\r\n      next () { // All the action happens here\r\n        const currentFile = poolFiles[this.currentIndex]\r\n\r\n        // If currentFile is undefined, then the array has been depleted and all\r\n        // files have been processed. This ends the async iteration properly\r\n        if (!currentFile) {\r\n          return {\r\n            value: undefined,\r\n            done: true\r\n          }\r\n        }\r\n\r\n        // Generate the item.\r\n        const item = {\r\n          data: null,\r\n          folder: currentFile.name.match(/(.*)[/\\\\]/)[1] || '',\r\n          name: currentFile.name.replace(/^.*[\\\\/]/, '').replace(\r\n            /U\\+([0-9A-F]{4})/g, (whole, group1) => {\r\n              // Parse encoded characters back to their unicode counterparts\r\n              return String.fromCharCode(parseInt(group1, 16))\r\n            }\r\n          ),\r\n          size: currentFile.size,\r\n          type: 'undefined'\r\n        }\r\n\r\n        // Determine the file type and generate the appropriate osweb item\r\n        const ext = currentFile.name.substr(currentFile.name.lastIndexOf('.') + 1)\r\n        if (['jpg', 'jpeg', 'png', 'bmp'].includes(ext.toLowerCase())) {\r\n          // Create a new file pool mage item.\r\n          const img = new Image()\r\n          img.src = currentFile.getBlobUrl()\r\n          item.data = img\r\n          item.type = 'image'\r\n        } else if (['wav', 'ogg'].includes(ext.toLowerCase())) {\r\n          const ado = new Audio()\r\n          ado.src = currentFile.getBlobUrl()\r\n          item.data = ado\r\n          item.type = 'sound'\r\n        } else if (['ogv', 'mp4', 'm4v'].includes(ext.toLowerCase())) {\r\n          const ado = document.createElement('VIDEO')\r\n          ado.src = currentFile.getBlobUrl()\r\n          item.data = ado\r\n          item.type = 'video'\r\n        };\r\n        // Increment the counter.\r\n        this.currentIndex++\r\n\r\n        return {\r\n          value: item,\r\n          done: false\r\n        }\r\n      },\r\n      // for-await calls this on whatever it's passed, so\r\n      // iterators tend to return themselves.\r\n      [Symbol.asyncIterator] () {\r\n        return this\r\n      }\r\n    }\r\n\r\n    // Iterate over the file pool items\r\n    for await (const item of asyncIterator) {\r\n      // Add the item to the virtual pool.\r\n      this._runner._pool.add(item)\r\n\r\n      // Update the progress bar.\r\n      this._runner._screen._updateProgressBar(asyncIterator.currentIndex / poolFiles.length)\r\n    }\r\n    return true\r\n  }\r\n\r\n  /**\r\n   * Read in webfonts\r\n   *\r\n   * @returns Promise\r\n   * @memberof Transfer\r\n   */\r\n  async _readWebFonts () {\r\n    // Update the introscreen\r\n    this._runner._screen._updateProgressBar(100)\r\n    this._runner._screen._updateIntroScreen('Retrieving required webfonts.')\r\n\r\n    return new Promise((resolve, reject) => {\r\n      // Load the required fonts using webfont.\r\n      WebFont.load({\r\n        google: {\r\n          families: ['Droid Sans', 'Droid Serif', 'Droid Sans Mono'],\r\n          urls: ['//fonts.googleapis.com/css?family=Droid Sans',\r\n            '//fonts.googleapis.com/css?family=Droid Serif',\r\n            '//fonts.googleapis.com/css?family=Droid Sans Mono'\r\n          ]\r\n        },\r\n        active: () => resolve(),\r\n        inactive: () => reject(new Error('Could not load webfonts'))\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Writing experiment result data to a location.\r\n   * @param {String} target - An addres to store result data.\r\n   * @param {Object} resultData - The result data itself to store.\r\n   */\r\n  _writeDataFile (target, resultData) {\r\n    // Check if the target and resultData are defined.\r\n    if ((target !== null) && (resultData !== null)) {\r\n      // Add the data as a form element.\r\n      var data = new FormData()\r\n      data.append('data', resultData.toString())\r\n\r\n      // Create the request.\r\n      var xhr = new XMLHttpRequest()\r\n      xhr.open('post', target + '?file=subject-' + this._runner._experiment.vars['subject_nr'], true)\r\n\r\n      // Send the actual data.\r\n      return xhr.send(data)\r\n    }\r\n  }\r\n}\r\n","/** Class representing an item stack. */\r\nexport default class ItemStack {\r\n  /**\r\n   * Create an stack array for running items.\r\n   * @param {Object} runner - The runner to which the item stack belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._items = [] // Container for all items.\r\n    this._runner = runner // Parent runner attached to the item stack class.\r\n  }\r\n\r\n  /** Clear the entire item stack. */\r\n  clear () {\r\n    // Clears the stack.\r\n    this._items = []\r\n  }\r\n\r\n  /**\r\n   * Push a new item onto the item stack.\r\n   * @param {Object} item - The item to add to the item stack.\r\n   * @param {String} phase - The phase in which the stack exists.\r\n   */\r\n  push (item, phase) {\r\n    // Create the stack item.\r\n    const stackItem = {\r\n      'item': item,\r\n      'phase': phase\r\n    }\r\n\r\n    // Push the item onto the stack.\r\n    this._items.push(stackItem)\r\n  }\r\n\r\n  /**\r\n   * Pops the last item from the stack.\r\n   * @return {Object} - The last added item from the stack.\r\n   */\r\n  pop () {\r\n    // Pops the last item from the stack.\r\n    return this._items.pop()\r\n  }\r\n}\r\n","// This itemClasses variable is a temporary solution. We should think of a simpler\r\n// method of converting string names (e.g. keyboard_response) to the associated\r\n// class names (e.g. KeyboardResponse), without relying on eval.\r\nimport {\r\n  itemClasses\r\n} from '../system/constants.js'\r\n\r\n/** Class representing an item store. */\r\nexport default class ItemStore {\r\n  /**\r\n   * Create an item store for all OpenSesame items.\r\n   * @param {Object} runner - The runner to which the item store belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Set the class private properties.\r\n    this._items = {} // All the unique items in the item store.\r\n    this._runner = runner // Parent runner attached to the item store.\r\n  }\r\n\r\n  /** Clear all the items in the store. */\r\n  _clean_up () {\r\n    // Clear the items.\r\n    this._items = {}\r\n  }\r\n\r\n  /**\r\n   * Checks of the classname is defined within the osweb namespace.\r\n   * @param {String} className - name of the class to check.\r\n   * @return {Boolean} - True if the class is valid within the opsweb context.\r\n   */\r\n  _isClass (className) {\r\n    // Return true if the classname is found in the item classes.\r\n    return (className in itemClasses)\r\n  }\r\n\r\n  /**\r\n   * Add a new OpenSesame element to a sketchpad item.\r\n   * @param {String} type -type of the element to be created.\r\n   * @param {Object} sketchpad - sketchpad item to which the item belongs.\r\n   * @param {String} script - string definition of the ites.\r\n   * @return {Object} - The item which wass created.\r\n   */\r\n  _newElementClass (type, sketchpad, string) {\r\n    // Create the element.\r\n    var element = new itemClasses[type](sketchpad, string)\r\n\r\n    // Return the element\r\n    return element\r\n  }\r\n\r\n  /**\r\n   * Add a new OpenSesame item to the experiment.\r\n   * @param {String} type -type of the item to be created.\r\n   * @param {Object} experiment - experiment item to which the item belongs.\r\n   * @param {String} name - name of the item to be created.\r\n   * @param {String} script - string definition of the ites.\r\n   * @return {Object} - The item which was created.\r\n   */\r\n  _newItemClass (type, experiment, name, script) {\r\n    // Create the element.\r\n    var element = new itemClasses[type](experiment, name, script)\r\n\r\n    // Set the type of the item.\r\n    element.type = type\r\n\r\n    // Return the element\r\n    return element\r\n  }\r\n\r\n  /**\r\n   * Add a new OpenSesame widget to the experiment.\r\n   * @param {String} type -type of the widget to be created.\r\n   * @param {Object} form - form to which the widget belongs.\r\n   * @param {String} variables - variabled belonging to the widget.\r\n   * @return {Object} - The widget which was created.\r\n   */\r\n  _newWidgetClass (type, form, variables) {\r\n    // Create the widget.\r\n    var widget = new itemClasses[type + '_widget'](form, variables)\r\n\r\n    // Return the element\r\n    return widget\r\n  }\r\n\r\n  /**\r\n   * Executes the prepare and the run phase of an item.\r\n   * @param {String} name - name of the item to prepare and run\r\n   * @param {String} parent - parent of the item.\r\n   */\r\n  execute (name, parent) {\r\n    // Prepare the item.\r\n    this.prepare(name, parent)\r\n    // Remove the prepare phase call of the item from the stack\r\n    this._runner._itemStack.pop()\r\n    // Run the item.\r\n    this.run(name, parent)\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the items in the store.\r\n   * @return {Array} - An array containing all the items.\r\n   */\r\n  items () {\r\n    // Create a list o keys.\r\n    var items = []\r\n    for (var key in this._items) {\r\n      items.push([key, this._items[key]])\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return items\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the names of the items in the store.\r\n   * @return {Array} - An array containing all the names.\r\n   */\r\n  keys () {\r\n    // Create a list o keys.\r\n    var keys = []\r\n    for (var key in this._items) {\r\n      keys.push(key)\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return keys\r\n  }\r\n\r\n  /**\r\n   * Create a new OpenSesame item and add it to the item store.\r\n   * @param {String} type - type of item to add.\r\n   * @param {String} name - unique name of the item to add.\r\n   * @param {String} script - script containing definitions of the item.\r\n   */\r\n  newItem (type, name, script) {\r\n    // Check if the element is part of the osweb name space\r\n    if (this._isClass(type) === true) {\r\n      // Add the new item as property of items.\r\n      this._items[name] = this._newItemClass(type, this._runner._experiment, name, script)\r\n\r\n      return this._items[name]\r\n    } else {\r\n      // Unknown class definition, show error message.\r\n      this._runner._debugger.addError('The item \"' + type + '\" is not yet supported by osweb', {\r\n        notify: true,\r\n        url: 'https://osdoc.cogsci.nl/manual/osweb/#supported-functionality'\r\n      })\r\n      this._runner.exit()\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Executes the prepare phase of an item, and updates the item stack.\r\n   * @param {String} name - name of the item to prepare.\r\n   * @param {String} parent - parent of the item.\r\n   */\r\n  prepare (name, parent) {\r\n    // Add item to the stack.\r\n    this._runner._itemStack.push(name, 'prepare')\r\n\r\n    // Prepare the item.\r\n    this._items[name]._parent = parent\r\n    this._items[name].prepare()\r\n  }\r\n\r\n  /**\r\n   * Executes the run phase of an item, and updates the item stack.\r\n   * @param {String} name - name of the item to run.\r\n   * @param {String} pParent - parent of the item.\r\n   */\r\n  run (name, parent) {\r\n    // Set the current and its parent item.\r\n    this._runner._events._currentItem = this._items[name]\r\n    this._runner._events._currentItem._parent = parent\r\n\r\n    // Executes the run phase of an item, and updates the item stack.\r\n    this._runner._itemStack.push(name, 'run')\r\n    this._items[name].run()\r\n  }\r\n\r\n  /**\r\n   * Create a valid name for an item within the OpenSesame context.\r\n   * @param {String} itemType - type of the item for which a name must be build.\r\n   * @param {String} suggestion - An suggestion how to build up the name.\r\n   * @return {String} - A valid string name for the given item.\r\n   */\r\n  valid_name (itemType, suggestion) {\r\n    // Check the optional parameters.\r\n    suggestion = (typeof suggestion === 'undefined') ? null : suggestion\r\n\r\n    let name\r\n    if (suggestion === null) {\r\n      name = 'new_' + itemType\r\n    } else {\r\n      name = this._runner._experiment.syntax.sanitize(suggestion, true, false)\r\n    }\r\n\r\n    // Create a unique name.\r\n    var i = 1\r\n    var uniqueName = name\r\n    while (this._items.hasOwnProperty(uniqueName) === true) {\r\n      uniqueName = name + '_' + String(i)\r\n      i++\r\n    }\r\n\r\n    // Return function result\r\n    return uniqueName\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the values (items) in the store.\r\n   * @return {Array} - An array containing all the items.\r\n   */\r\n  values () {\r\n    // Create a list o keys.\r\n    var values = []\r\n    for (var key in this._items) {\r\n      values.push(this._items[key])\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return values\r\n  }\r\n}\r\n","/** Class representing a file pool. */\r\nexport default class FilePoolStore {\r\n  /**\r\n   * Create a file store object for all stimuli files.\r\n   * @param {Object} runner - The runner to which the file store belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._items = [] // Container for all pool items.\r\n    this._runner = runner // Parent runner attached to the file pool.\r\n  }\r\n\r\n  /** Clear all the items in the store. */\r\n  _clean_up () {\r\n    // Clear the items.\r\n    this._items = []\r\n  }\r\n\r\n  /**\r\n   * General function for adding an item to the pool.\r\n   * @param {Object} item - The item which is added to the pool.\r\n   */\r\n  add (item, new_name) {\r\n    // Check parameter new_name.\r\n    new_name = (typeof new_name === 'undefined') ? null : new_name\r\n\r\n    // Set the new name of the item.\r\n    if (new_name !== null) {\r\n      item.name = new_name\r\n    }\r\n\r\n    // Add the item to the pool.\r\n    this._items.push(item)\r\n\r\n    // Link the item as property\r\n    this[item.name] = item\r\n  }\r\n\r\n  /**\r\n   * Should return the fallback folder bunt osweb this is not functional.\r\n   * @return {null} - always null due to the nature of osweb.\r\n   */\r\n  fallback_folder () {\r\n    // Always returns null because this function is not possible.\r\n    return null\r\n  }\r\n\r\n  /**\r\n   * Create an array with all the files in the store.\r\n   * @return {Array} - An array containing all the files.\r\n   */\r\n  files () {\r\n    // Create a list o keys.\r\n    var files = []\r\n    for (var i = 0; i < this._items.length; i++) {\r\n      files.push(this._items[i])\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return files\r\n  }\r\n\r\n  /**\r\n   * Renames a file in the pool folder.\r\n   * @param {String} old_path - The olod file name.\r\n   * @param {String} new_path - The new file name.\r\n   */\r\n  rename (old_path, new_path) {\r\n    for (var i = 0; i < this._items.length; i++) {\r\n      // Check for the old_name.\r\n      if (this._items[i].name === old_path) {\r\n        // Set the new property name.\r\n        this[new_path] = this._items[i]\r\n\r\n        // Remove the old property name.\r\n        delete this[old_path]\r\n\r\n        // Set the new name.\r\n        this._items[i].name = new_path\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Calculates and returns the total size in bytes of all thje fioles.\r\n   * @return {Number} - The size of all files in bytes.\r\n   */\r\n  size () {\r\n    // Create a list of keys.\r\n    var size = 0\r\n    for (var i = 0; i < this._items.length; i++) {\r\n      size = size + this._items[i].size\r\n    }\r\n\r\n    // Returns a list of item names.\r\n    return size\r\n  }\r\n}\r\n","import {\r\n  isNumber,\r\n  toNumber,\r\n  isObject,\r\n  isString\r\n} from 'lodash'\r\n\r\n/** Class representing a syntax checker. */\r\nexport default class Syntax {\r\n  /**\r\n   * Create a syntax checker within OpenSesame.\r\n   * @param {Object} runner - The runner to which the syntax checker belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Create and set private properties.\r\n    this._runner = runner // Parent runner attached to the syntax class.\r\n    this.isNumber = isNumber // attach lodash function to class;\r\n  }\r\n\r\n  /**\r\n   * Compile a os condition for further processing.\r\n   * @param {String} cnd - The condition to compile.\r\n   * @param {Boolean} bytecode - The condition is converted to a python AST tree.\r\n   * @return {String} - The compiled condition.\r\n   */\r\n  compile_cond (cnd, bytecode) {\r\n    // Check for conditional paramters.\r\n    bytecode = (typeof bytecode === 'undefined') ? true : bytecode\r\n\r\n    if (cnd.toLowerCase() === 'always') {\r\n      return true\r\n    } else if (cnd.toLowerCase() === 'never') {\r\n      return false\r\n    } else {\r\n      if (cnd[0] === '=') {\r\n        cnd = cnd.substr(1)\r\n      } else {\r\n        cnd = this.remove_quotes(cnd)\r\n        // Scan for literals (strings, ßnumbers, etc).\r\n        cnd = cnd.replace(/(?!(?:and|or|not)\\b)(?:\".*?\"|'.*?'|\\[(?:\\w+?|=.+)\\]|\\b\\w+\\b)/g, (match, offset, string) => {\r\n          if (string[offset] === '[' && string[offset + match.length - 1] === ']') {\r\n            // Check if match is a variable.\r\n            if (string[offset - 1] === '\\\\' && string[offset - 2] !== '\\\\') {\r\n              // Check if the current match is escaped, and simpl\\w+?|=.+y return it untouched if so.\r\n              return `\"${match}\"`\r\n            }\r\n            // Check if the variable contains a Python expression\r\n            if (match[1] === '=') {\r\n              const expression = match.substring(2, match.length - 1)\r\n              const ast = this._runner._pythonParser._parse(expression)\r\n              return this._runner._pythonParser._run_statement(ast)\r\n            }\r\n\r\n            // Return the var. notation otherwise\r\n            const content = match.substring(1, match.length - 1)\r\n            return `var.${content}`\r\n          } else if ([`\"`, `'`].includes(string[offset]) &&\r\n            string[offset] === string[offset + match.length - 1]) {\r\n            // Check if match is between quotes. Don't do anything then\r\n            return match\r\n          } else if (!Number.isNaN(Number(match))) {\r\n            return Number(match)\r\n          } else {\r\n            return `\"${match}\"`\r\n          }\r\n        })\r\n\r\n        // Handle operators.\r\n        cnd = cnd.replace(/([^!<>=\\-+*])(=)([^=])/g, '$1==$3')\r\n      }\r\n    }\r\n    if (bytecode === true) {\r\n      return this._runner._pythonParser._parse(cnd)\r\n    } else {\r\n      return cnd\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Converts a string to a float or integer if possible.\r\n   * @param {String|Number} value -The variable to convert to a number.\r\n   * @return {String|Number} - An number or float if variable could be converted, original value otherwise.\r\n   */\r\n  convert_if_numeric (value) {\r\n    var result = Number(value)\r\n    return Number.isNaN(result) ? value : result\r\n  }\r\n\r\n  /**\r\n   * Counts the quotes occuring inside the provided string.\r\n   * @param {String} line - The string line to count the quotes in.\r\n   * @return {Number} - The number of quotes counted.\r\n   */\r\n  count_quotes (line) {\r\n    var res = 0\r\n    var in_entity = false\r\n    for (var i = 0; i < line.length; i++) {\r\n      if ((line[i] === '\\\\' && !in_entity) || in_entity) { // reverse the flag\r\n        in_entity = !in_entity\r\n      } else if (line[i] === '\"' && !in_entity) { // an unescaped \"\r\n        res += 1\r\n      }\r\n    }\r\n    return res\r\n  }\r\n\r\n  /**\r\n   * Evaluate a given text with optional variable definitions.\r\n   * @param {Boolean|Number|Object|String} txt - The text to evaluate.\r\n   * @param {Object} vars - The variables used for evaluation.\r\n   * @param {Boolean} addQuotes - The add quotes toggle.\r\n   * @return {Boolean|Number|Object|String} - The result of the evaluated text.\r\n   */\r\n  eval_text (text, vars, addQuotes = false) {\r\n    // if pTxt is an object then it is a parsed python expression.\r\n    if (isObject(text)) return this._runner._pythonParser._run_statement(text)\r\n    // if pTxt is already a number simply return it\r\n    if (isNumber(text)) return text\r\n    // Try to convert text to a number. If this succeeds return it.\r\n    if ((text !== '') && !isNaN(toNumber(text))) return toNumber(text)\r\n    text = this.escapeBrackets(text)\r\n    /** The replacer function detects variable entries in the passed text\r\n    and replaces them with variable values as found in OpenSesame's var store */\r\n    let result = text.replace(/\\[(\\w+|=.+?)\\]/g, (match, content, offset, string) => {\r\n      // Check if contents of [] start with an =. In this case they should be\r\n      // evaluated as a Python statement\r\n      content = this.unescapeBrackets(content)\r\n      if (content[0] === '=') {\r\n        // Convert python statement to ast tree and run it.\r\n        const ast = this._runner._pythonParser._parse(content.substring(1, content.length))\r\n        return this._runner._pythonParser._run_statement(ast)\r\n      } else {\r\n        let value\r\n        try {\r\n          if ((vars === null) || (typeof vars[content] === 'undefined')) {\r\n            value = this._runner._experiment.vars[content]\r\n          } else {\r\n            value = vars[content]\r\n          }\r\n          // Value could still be an expression, so evaluate again\r\n          if (typeof value === 'undefined') {\r\n            throw new ReferenceError(`Variable '${content}' not present in var store`)\r\n          }\r\n          if (isString(value)) {\r\n            if (value !== '') {\r\n              value = this.eval_text(value, vars, addQuotes)\r\n            }\r\n          }\r\n        } catch (err) {\r\n          this._runner._debugger.addError(`Could not resolve variable '${content}': ${err.message}`)\r\n          throw err\r\n        }\r\n        if (addQuotes === true) {\r\n          // Temporary hack for string types.\r\n          return isString(value) ? `\"${value}\"` : value\r\n        } else {\r\n          return value\r\n        }\r\n      }\r\n    })\r\n    // Try to convert the result to a number again. If this succeeds return it.\r\n    if (result !== '') {\r\n      let nr = toNumber(result)\r\n      if (!isNaN(nr)) return nr\r\n    }\r\n    // Check if content has additional quotes\r\n    return this.strip_slashes(this.unescapeBrackets(result))\r\n  }\r\n\r\n  /**\r\n   * Wraps and escapes a text so that it can safely be embedded in a\r\n        command string. For example:\r\n        He said: \"hi\"\r\n        would become:\r\n        \"He said: \\\"hi\\\"\"\r\n   * @param  {string} s The string to wrap\r\n   * @return {string}   The wrapped string\r\n   */\r\n  safe_wrap (s) {\r\n    // If s is a number, return untouched.\r\n    if (!isNumber(s)) {\r\n      // see if there are any non-alphanumeric characters.\r\n      // Wrap the value in quotes if so.\r\n      if (/[^a-z0-9_]/i.test(s)) {\r\n        s = '\"' + this.add_slashes(s) + '\"'\r\n      }\r\n    } else {\r\n      s = Number(s)\r\n    }\r\n    return s\r\n  }\r\n\r\n  /**\r\n   * Add escape slashes to the given string\r\n   * @param  {string} str The string to escape.\r\n   * @return {string}     The escaped string.\r\n   */\r\n  add_slashes (str) {\r\n    return str.replace(/\\\\/g, '\\\\\\\\')\r\n      .replace(/\\u0008/g, '\\\\b')\r\n      .replace(/\\t/g, '\\\\t')\r\n      .replace(/\\n/g, '\\\\n')\r\n      .replace(/\\f/g, '\\\\f')\r\n      .replace(/\\r/g, '\\\\r')\r\n      .replace(/'/g, '\\\\\\'')\r\n      .replace(/\"/g, '\\\\\"')\r\n  }\r\n\r\n  /**\r\n   * Strip escape slashes from the given string.\r\n   * @param {String} line - The string to strip from escape backslashes\r\n   * @return {String} - The stripped string.\r\n   */\r\n  strip_slashes (line) {\r\n    // Negative lookbehinds require ECMA2018, therefore we fall\r\n    // back to a more clunky technique\r\n    // return line.replace(/(?<!\\\\)\\\\(?=['\"\\\\])/mg, '')\r\n    return line.replace(/\\\\(?=['\"])/mg, '').replace(/\\\\\\\\/mg, '\\\\')\r\n  }\r\n\r\n  /**\r\n   * Parses an instruction line of OpenSesame script\r\n   * @param {String} line - The line to parse\r\n   * @return {Array} - An array with command, list of arguments and an object with keyword arguments.\r\n   */\r\n  parse_cmd (line) {\r\n    // Check if quoted strings are properly closed.\r\n    if (this.count_quotes(line) % 2 !== 0) {\r\n      // Unequal number of quotes detected. Can't be right.\r\n      this._runner._debugger.addError('Invalid script definition, parsing error: ' + \" '\" + line + \"'\")\r\n    }\r\n\r\n    // Split the string line.\r\n    var tokens = this.split(line)\r\n    var cmd = tokens.shift()\r\n    var args = []\r\n    var kwargs = {}\r\n\r\n    for (var i = 0; i < tokens.length; i++) {\r\n      var value = tokens[i]\r\n      // Monster regex, splits into key/value pair.\r\n      var parsed = value.split(/(?:(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\"))|(?:(\\w+)=(?:(?:(-?\\d*\\.{0,1}\\d+)|(\\w+))|(\"[^\"\\\\]*(?:\\\\.[^\"\\\\]*)*\")))/gm).filter(Boolean)\r\n\r\n      // parsed will have length 1 if the variable has no keyword, and will be\r\n      // of length 2 (split over the = symbol) if the variable had a keyword\r\n      if (parsed.length < 2) {\r\n        args.push(this.convert_if_numeric(this.sanitize(parsed[0])))\r\n      } else {\r\n        kwargs[parsed[0]] = this.convert_if_numeric(this.sanitize(parsed[1]))\r\n      }\r\n    }\r\n    return [cmd, args, kwargs]\r\n  }\r\n\r\n  create_cmd (cmd, args, kwargs) {\r\n    var result = cmd\r\n    if (typeof (args) !== 'undefined' && args instanceof Array && args.length > 0) {\r\n      for (var i = 0; i < args.length; i++) {\r\n        result += ' ' + this.safe_wrap(args[i])\r\n      }\r\n    }\r\n    if (typeof (kwargs) !== 'undefined' && args instanceof Object) {\r\n      for (var key in kwargs) {\r\n        result += ' ' + key + '=' + this.safe_wrap(kwargs[key])\r\n      }\r\n    }\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Remove additional quotes from a string line.\r\n   * @param {String} line - The string width additional quotes.\r\n   * @return {String} - Updated string.\r\n   */\r\n  remove_quotes (line) {\r\n    if (line === '\"\"') {\r\n      return ''\r\n    } else if ((line[0] === '\"') && (line[line.length - 1] === '\"')) {\r\n      return line.slice(1, line.length - 1)\r\n    } else if ((line[0] === \"'\") && (line[line.length - 1] === \"'\")) {\r\n      return line.slice(1, line.length - 1)\r\n    } else {\r\n      return line\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove invalid characters (notably quotes) from the string.\r\n   * @param {String} line - The string to restrecut.\r\n   * @param {Boolean} strict - If true use strict conversion (not implemented yet).\r\n   * @param {Boolean} allowVars -If true allow variable definitions in the string (not implemented yet).\r\n   * @return {String} - The restructured string.\r\n   */\r\n  sanitize (line, strict, allowVars) {\r\n    // Replace quotes.\r\n    line = line.replace(/^\"(.+(?=\"$))\"$/, '$1')\r\n\r\n    // Replace slashes and return result.\r\n    return this.strip_slashes(line)\r\n  }\r\n\r\n  /**\r\n   * Return an array with tokens ignoring whitespaces within.\r\n   * @param {String} line - line the line to split in tokens\r\n   * @return {Array} - The list of tokens\r\n   */\r\n  split (line) {\r\n    var result = line.match(/(?:[^\\s\"]+|\"[^\"]*\")+/g)\r\n    return (result !== null) ? result : []\r\n  }\r\n\r\n  /**\r\n   * Replaces all escaped brackets by a placeholder string of the format\r\n   * `%%OPEN:1:%%`\r\n   * @param {String} text - The text to escape.\r\n   * @return {String} - The escaped text.\r\n   */\r\n  escapeBrackets (text) {\r\n    let result = text.replace(/\\\\+[[\\]]/g, (match, content, offset, str) => {\r\n      let NBrackets = match.length - 1\r\n      if (NBrackets % 2 === 1) {\r\n        let chartype = match[match.length - 1] === '[' ? 'OPEN' : 'CLOSE'\r\n        return `%%${chartype}:${NBrackets}:%%`\r\n      }\r\n      return match\r\n    })\r\n    return result\r\n  }\r\n\r\n  /**\r\n   * Replaces all placeholder strings by escaped brackets.\r\n   * `%%OPEN:1:%%`\r\n   * @param {String} text - The text to unescape.\r\n   * @return {String} - The unescaped text.\r\n   */\r\n  unescapeBrackets (text) {\r\n    let result = text.replace(/%%(OPEN|CLOSE):\\d+:%%/g, (match, content, offset, str) => {\r\n      let chartype = match.substr(2, 4) === 'OPEN' ? '[' : ']'\r\n      let i1 = match.indexOf(':') + 1\r\n      let i2 = match.lastIndexOf(':')\r\n      let nBrackets = parseInt(match.substr(i1, i2 - i1))\r\n      return Array(nBrackets).join('\\\\') + chartype\r\n    })\r\n    return result\r\n  }\r\n}\r\n","import filbert from 'filbert'\r\n\r\n/** Class implementing a python math library. */\r\nexport default class PythonMath {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the library belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the library.\r\n\r\n    // Set class properties.\r\n    this.e = Math.E\r\n    this.pi = Math.PI\r\n  }\r\n\r\n  /** Initialization phase of the python_math class. */\r\n  _initialize () {\r\n    // Insert math library methods into the python interpreter.\r\n    filbert.pythonRuntime.imports['math'] = {}\r\n    filbert.pythonRuntime.imports['math']['ceil'] = this.ceil\r\n    filbert.pythonRuntime.imports['math']['copysign'] = this.copysign\r\n    filbert.pythonRuntime.imports['math']['fabs'] = this.fabs\r\n    filbert.pythonRuntime.imports['math']['factorial'] = this.factorial\r\n    filbert.pythonRuntime.imports['math']['floor'] = this.floor\r\n    filbert.pythonRuntime.imports['math']['fmod'] = this.fmod\r\n    filbert.pythonRuntime.imports['math']['frexp'] = this.frexp\r\n    filbert.pythonRuntime.imports['math']['fsum'] = this.fsum\r\n    filbert.pythonRuntime.imports['math']['acos'] = this.acos\r\n    filbert.pythonRuntime.imports['math']['asin'] = this.asin\r\n    filbert.pythonRuntime.imports['math']['atan'] = this.atan\r\n    filbert.pythonRuntime.imports['math']['atan2'] = this.atan2\r\n    filbert.pythonRuntime.imports['math']['cos'] = this.cos\r\n    filbert.pythonRuntime.imports['math']['hypot'] = this.hypot\r\n    filbert.pythonRuntime.imports['math']['sin'] = this.sin\r\n    filbert.pythonRuntime.imports['math']['tan'] = this.tan\r\n    filbert.pythonRuntime.imports['math']['e'] = this.e\r\n    filbert.pythonRuntime.imports['math']['pi'] = this.pi\r\n  }\r\n\r\n  /** Import 'ceil' function for osweb script. */\r\n  ceil (x) {\r\n  }\r\n\r\n  /** Import 'copysign' function for osweb script. */\r\n  copysign (x, y) {\r\n  }\r\n\r\n  /** Import 'fabs' function for osweb script. */\r\n  fabs (x) {\r\n  }\r\n\r\n  /** Import 'factorial' function for osweb script. */\r\n  factorial (x) {\r\n  }\r\n\r\n  /** Import 'floor' function for osweb script. */\r\n  floor (x) {\r\n    return Math.floor(x)\r\n  }\r\n\r\n  /** Import 'fmod' function for osweb script. */\r\n  fmod (x, y) {\r\n  }\r\n\r\n  /** Import 'frexp' function for osweb script. */\r\n  frexp (x) {\r\n  }\r\n\r\n  /** Import 'fsum' function for osweb script. */\r\n  fsum (iterable) {\r\n  }\r\n\r\n  /** Import 'acos' function for osweb script. */\r\n  acos (x) {\r\n    return Math.acos(x)\r\n  }\r\n\r\n  /** Import 'asin' function for osweb script. */\r\n  asin (x) {\r\n    return Math.asin(x)\r\n  }\r\n\r\n  /** Import 'atan' function for osweb script. */\r\n  atan (x) {\r\n    return Math.atan(x)\r\n  }\r\n\r\n  /** Import 'atan2' function for osweb script. */\r\n  atan2 (y, x) {\r\n    return Math.atan2(y, x)\r\n  }\r\n\r\n  /** Import 'cos' function for osweb script. */\r\n  cos (x) {\r\n    return Math.cos(x)\r\n  }\r\n\r\n  /** Import 'hypot' function for osweb script. */\r\n  hypot (x, y) {\r\n  }\r\n\r\n  /** Import 'sin' function for osweb script. */\r\n  sin (x) {\r\n    return Math.sin(x)\r\n  }\r\n\r\n  /** Import 'tan' function for osweb script. */\r\n  tan (x) {\r\n    return Math.tan(x)\r\n  }\r\n}\r\n","import filbert from 'filbert'\r\nimport Canvas from '../backends/canvas.js'\r\n\r\n/** Class implementing a python opensesame library. */\r\nexport default class PythonOpenSesame {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the library belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the library.\r\n  }\r\n\r\n  /** Initialization phase of the python_library class. */\r\n  _initialize () {\r\n    this._objects = {}\r\n\r\n    // Insert clock class into the python interpreter.\r\n    filbert.pythonRuntime.imports['clock'] = {}\r\n    filbert.pythonRuntime.imports['clock']['sleep'] = this._runner._experiment.clock.sleep\r\n    filbert.pythonRuntime.imports['clock']['time'] = this._runner._experiment.clock.time\r\n\r\n    // Insert log class into the python interpreter.\r\n    filbert.pythonRuntime.imports['log'] = {}\r\n    filbert.pythonRuntime.imports['log']['close'] = this._runner._experiment._log.close\r\n    filbert.pythonRuntime.imports['log']['open'] = this._runner._experiment._log.open\r\n    filbert.pythonRuntime.imports['log']['write'] = this._runner._experiment._log.write\r\n    filbert.pythonRuntime.imports['log']['write_vars'] = this._runner._experiment._log.write_vars\r\n\r\n    // Insert var class into the python interpreter.\r\n    filbert.pythonRuntime.imports['var'] = this._runner._experiment.vars\r\n    filbert.pythonRuntime.imports['var']['get'] = this._runner._experiment.vars.get\r\n    filbert.pythonRuntime.imports['var']['has'] = this._runner._experiment.vars.has\r\n    filbert.pythonRuntime.imports['var']['set'] = this._runner._experiment.vars.set\r\n    filbert.pythonRuntime.imports['var']['unset'] = this._runner._experiment.vars.unset\r\n\r\n    // Insert general opensesame methods into the python interpreter.\r\n    filbert.pythonRuntime.functions['reset_feedback'] = this._runner._experiment.reset_feedback\r\n    filbert.pythonRuntime.functions['set_subject_nr'] = this._runner._experiment.set_subject\r\n    filbert.pythonRuntime.functions['canvas'] = this.canvas\r\n    filbert.pythonRuntime.functions['copy_sketchpad'] = this.copy_sketchpad\r\n    filbert.pythonRuntime.functions['keyboard'] = this.keyboard\r\n    filbert.pythonRuntime.functions['mouse'] = this.mouse\r\n    filbert.pythonRuntime.functions['pause'] = this.pause\r\n    filbert.pythonRuntime.functions['set_subject_nr'] = this.set_subject_nr\r\n    filbert.pythonRuntime.functions['sometimes'] = this.sometimes\r\n    filbert.pythonRuntime.functions['synth'] = this.synth\r\n    filbert.pythonRuntime.functions['xy_circle'] = this.xy_circle\r\n    filbert.pythonRuntime.functions['xy_distance'] = this.xy_distance\r\n    filbert.pythonRuntime.functions['xy_from_polar'] = this.xy_from_polar\r\n    filbert.pythonRuntime.functions['xy_grid'] = this.xy_grid\r\n    filbert.pythonRuntime.functions['xy_random'] = this.xy_random\r\n    filbert.pythonRuntime.functions['xy_to_polar'] = this.xy_to_polar\r\n  }\r\n\r\n  /** Import 'canvas' function for osweb script. */\r\n  canvas (auto_prepare, style_args) {\r\n    return new Canvas(this._runner._experiment, auto_prepare, style_args)\r\n  }\r\n\r\n  /** Import 'copy_sketchpad' function for osweb script. */\r\n  copy_sketchpad (name) {\r\n  }\r\n\r\n  /** Import 'keyboard' function for osweb script. */\r\n  keyboard (resp_args) {\r\n  }\r\n\r\n  /** Import 'mouse' function for osweb script. */\r\n  mouse (resp_args) {\r\n  }\r\n\r\n  /** Import 'pause' function for osweb script. */\r\n  pause (test) {\r\n  }\r\n\r\n  /** Import 'sampler' function for osweb script. */\r\n  sampler (src, playback_args) {\r\n  }\r\n\r\n  /** Import 'set_response' function for osweb script. */\r\n  set_response (response, response_time, correct) {\r\n  }\r\n\r\n  /** Import 'sometimes' function for osweb script. */\r\n  sometimes (p) {\r\n  }\r\n\r\n  /** Import 'synth' function for osweb script. */\r\n  synth (osc, freq, length, attack, decay) {\r\n  }\r\n\r\n  /** Import 'xy_circle' function for osweb script. */\r\n  xy_circle (n, rho, phi0, pole) {\r\n  }\r\n\r\n  /** Import 'xy_distance' function for osweb script. */\r\n  xy_distance (x1, y1, x2, y2) {\r\n  }\r\n\r\n  /** Import 'xy_from_polar' function for osweb script. */\r\n  xy_from_polar (rho, phi, pole) {\r\n  }\r\n\r\n  /** Import 'xy_grid' function for osweb script. */\r\n  xy_grid (n, spacing, pole) {\r\n  }\r\n\r\n  /** Import 'xy_random' function for osweb script. */\r\n  xy_random (n, width, height, min_dist, pole) {\r\n  }\r\n\r\n  /** Import 'xy_to_polar' function for osweb script. */\r\n  xy_to_polar (x, y, pole) {\r\n  }\r\n}\r\n","import filbert from 'filbert'\n\n/** Class implementing a python random library. */\nexport default class PythonRandom {\n  /**\n     * Create a python AST runner.\n     * @param {Object} runner - The runner to which the library belongs.\n     */\n  constructor (runner) {\n    // Set class parameter properties.\n    this._runner = runner // Parent runner attached to the library.\n  }\n\n  /** Initialization phase of the python_library class. */\n  _initialize () {\n    // Insert math library methods into the python interpreter.\n    filbert.pythonRuntime.imports['random'] = {}\n    filbert.pythonRuntime.imports['random']['random'] = this.random\n    filbert.pythonRuntime.imports['random']['shuffle'] = this.shuffle\n  }\n\n  /** Import 'Random' function for osweb script. */\n  random () {\n    return Math.random()\n  }\n\n  /** Import 'Shuffle' function for osweb script. */\n  shuffle (x, random) {\n    // Fisher-Yates (aka Knuth) Shuffle.\n    var currentIndex = x.length, temporaryValue, randomIndex\n\n    // While there remain elements to shuffle...\n    while (currentIndex !== 0) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex)\n      currentIndex -= 1\n\n      // And swap it with the current element.\n      temporaryValue = x[currentIndex]\n      x[currentIndex] = x[randomIndex]\n      x[randomIndex] = temporaryValue\n    }\n    return x\n  }\n}\n","/** Class implementing a python string library. */\r\nexport default class PythonString {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the library belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the library.\r\n  }\r\n\r\n  /** Initialization phase of the python_library class. */\r\n  _initialize () {\r\n  }\r\n\r\n  /** Import 'capitalize' function for osweb script. */\r\n  capitalize () {\r\n  }\r\n\r\n  /** Import 'center' function for osweb script. */\r\n  center (width, fillchar) {\r\n  }\r\n\r\n  /** Import 'upper' function for osweb script. */\r\n  upper () {\r\n  }\r\n}\r\n","import filbert from 'filbert'\r\nimport PythonMath from './python_math.js'\r\nimport PythonOpenSesame from './python_opensesame.js'\r\nimport PythonRandom from './python_random.js'\r\nimport PythonString from './python_string.js'\r\nimport toNumber from 'lodash/toNumber'\r\n\r\n/** Class implementing a python AST interpreter. */\r\nexport default class PythonParser {\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {Object} runner - The runner to which the AST object belongs.\r\n     */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the AST object.\r\n\r\n    // Set class properties.\r\n    this.python_math = new PythonMath(this._runner)\r\n    this.python_opensesame = new PythonOpenSesame(this._runner)\r\n    this.python_random = new PythonRandom(this._runner)\r\n    this.python_string = new PythonString(this._runner)\r\n\r\n    // Definition of private properties.\r\n    this._classes = {} // Accessible classes within the script code.\r\n    this._function_stack = [] // Function call stack.\r\n    this._global_return_value = null // Global return value for blocking calls.\r\n    this._inline_script = null // Parent inline_script item.\r\n    this._node = null // Current active node.\r\n    this._onConsole = null\r\n    this._stack = 0 // Stack counter (hack to precent stack overflow).\r\n    this._statement = null // process one statement or an script.\r\n    this._status = 0 // Status of the walker.\r\n    this._variables = {} // Object containing all global objects and variables.\r\n  }\r\n\r\n  /** Initialization phase of the python class. */\r\n  _initialize () {\r\n    // Set the python variable connections with opensesame.\r\n    this._variables['clock'] = this._runner._experiment.clock\r\n    this._variables['exp'] = this._runner._experiment\r\n    this._variables['items'] = this._runner._itemStore\r\n    this._variables['pool'] = this._runner._pool\r\n    this._variables['var'] = this._runner._experiment.vars\r\n\r\n    // Set the console handler.\r\n    if (this._runner._onConsole !== null) {\r\n      this._onConsole = this._runner._onConsole\r\n    }\r\n\r\n    // Initialize internal libraries to the interpreter.\r\n    this.python_math._initialize()\r\n    this.python_opensesame._initialize()\r\n    this.python_random._initialize()\r\n    this.python_string._initialize()\r\n  }\r\n\r\n  /**\r\n     * Create a python AST runner.\r\n     * @param {String} script - Parse a python script using the filbert library.\r\n     */\r\n  _parse (script) {\r\n    // Check if the script exists.\r\n    if (script !== '\"\"') {\r\n      var locations = false\r\n      var parseFn = filbert.parse\r\n      var ranges = false\r\n\r\n      // Try to parse the script.\r\n      try {\r\n        var code = script\r\n        var ast = parseFn(code, {\r\n          locations: locations,\r\n          ranges: ranges })\r\n        return ast\r\n      } catch (e) {\r\n        this._runner._debugger.addError('Script parsing error: ' + e.message)\r\n        return null\r\n      }\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get the context part of a identifier (before the dot '.').\r\n     * @param {String} identifier - Full name of the identifier.\r\n     */\r\n  _get_context (identifier) {\r\n    // Split the identifer\r\n    var items = identifier.value.split('.')\r\n\r\n    if ((items[0] === '__pythonRuntime') && (items[1] === 'imports')) {\r\n      return this._variables[items[2]]\r\n    } else {\r\n      // Return the object context\r\n      if (this._variables[items[0]] !== undefined) {\r\n        return this._variables[items[0]]\r\n      } else {\r\n        return window[items[0]]\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get an element form a library of the variable container.\r\n     * @param {String} element - Full name of the element to retrieve.\r\n     * @return {Object} - The given element found in the context.\r\n     */\r\n  _get_element (element) {\r\n    // Split the identifier name space.\r\n    var items = element.value.split('.')\r\n\r\n    // Check if the identifier is part of the internal scope.\r\n    if (items[0] === '__pythonRuntime') {\r\n      // Check if the identifier is part of the import scope.\r\n      if (items[1] === 'imports') {\r\n        var import_lib = filbert.pythonRuntime.imports[items[2]]\r\n        let value = import_lib[items[3]]\r\n        // Attempt to convert the value to a number,\r\n        // if this fails return the original value\r\n        return isNaN(toNumber(value)) ? value : toNumber(value)\r\n      } else {\r\n        var default_lib = filbert.pythonRuntime[items[1]]\r\n        return default_lib[items[2]]\r\n      }\r\n    } else {\r\n      // No internal scope, check if it is defined in the global scope\r\n      if (this._variables[items[0]] !== undefined) {\r\n        if (items.length === 1) {\r\n          return this._variables[items[0]]\r\n        } else {\r\n          return this._variables[items[0]][items[1]]\r\n        }\r\n      } else {\r\n        if (window[items[0]] !== undefined) {\r\n          if (items.length === 1) {\r\n            return window[items[0]]\r\n          } else {\r\n            return window[items[0]][items[1]]\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Get the value of an element form a library of the variable container.\r\n     * @param {String} element - Full name of the element to retrieve.\r\n     * @return {Boolean|Number|Object|String} - The value of the given element.\r\n     */\r\n  _get_element_value (element) {\r\n    switch (element.type) {\r\n      case 'identifier':\r\n        // Split the identifier name space.\r\n        var items = element.value.split('.')\r\n\r\n        // Set the element value in the global scope.\r\n        if (items.length === 1) {\r\n          if (this._variables[items[0]] !== undefined) {\r\n            return this._variables[items[0]]\r\n          } else {\r\n            return window[items[0]]\r\n          }\r\n        } else {\r\n          if (items[0].indexOf('__filbertRight') !== -1) {\r\n            if (items[1].indexOf('__filbertIndex') !== -1) {\r\n              var container = this._variables[items[0]]\r\n              var index = this._variables[items[1]]\r\n              return container[index]\r\n            } else {\r\n              if (this._variables[items[0]] !== undefined) {\r\n                return this._variables[items[0]][items[1]]\r\n              } else {\r\n                return window[items[0]][items[1]]\r\n              }\r\n            }\r\n          } else if (items[0] === '__pythonRuntime') {\r\n            if (items[1] === 'imports') {\r\n              const import_lib = filbert.pythonRuntime.imports[items[2]]\r\n              let value = import_lib[items[3]]\r\n              // Attempt to convert the value to a number,\r\n              // if this fails return the original value\r\n              return isNaN(toNumber(value)) ? value : toNumber(value)\r\n            } else {\r\n              var default_lib = filbert.pythonRuntime[items[1]]\r\n              return default_lib[items[2]]\r\n            }\r\n          } else {\r\n            if (this._variables[items[0]] !== undefined) {\r\n              return this._variables[items[0]][items[1]]\r\n            } else {\r\n              return window[items[0]][items[1]]\r\n            }\r\n          }\r\n        }\r\n      case 'literal':\r\n        // return the value of the literal.\r\n        return element.value\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Set the value of an element.\r\n     * @param {String} element - Full name of the element to set.\r\n     * @param {Boolean|Number|Object|String} value - The value for the given element.\r\n     */\r\n  _set_element_value (element, value) {\r\n    // Split the identifier name space.\r\n    var items = element.value.split('.')\r\n\r\n    // Set the element value in the global scope.\r\n    if (items.length === 1) {\r\n      if (window[items[0]] !== undefined) {\r\n        window[items[0]] = value\r\n      } else {\r\n        this._variables[items[0]] = value\r\n      }\r\n    } else {\r\n      if (window[items[0]] !== undefined) {\r\n        window[items[0]][items[1]] = value\r\n      } else {\r\n        this._variables[items[0]][items[1]] = value\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Set the given node to the current node.\r\n     * @param {Object} node - The node to set as current node.\r\n     */\r\n  _set_node (node) {\r\n    // Set the current node as the parent node\r\n    node.parent = this._node\r\n\r\n    // Set the new node as the current node.\r\n    this._node = node\r\n  }\r\n\r\n  /**\r\n     * Set the return value of a node.\r\n     * @param {Boolean|Number|Object|String} value - The return value for the processed node.\r\n     */\r\n  _set_return_value (value) {\r\n    // Create or acces the return_values array.\r\n    this._node.parent.return_values = (typeof this._node.parent.return_values === 'undefined') ? [] : this._node.parent.return_values\r\n\r\n    // Push the value.\r\n    this._node.parent.return_values.push(value)\r\n  }\r\n\r\n  /** Process an AST array expression. */\r\n  _array_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if (this._node.index < this._node.elements.length) {\r\n      // Set current node to node in body.\r\n      this._node.index++\r\n      this._set_node(this._node.elements[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Redefine the return values.\r\n      for (var i = 0; i < this._node.return_values.length; i++) {\r\n        this._node.return_values[i] = this._get_element_value(this._node.return_values[i])\r\n      }\r\n      var return_value = { type: 'literal', value: this._node.return_values }\r\n\r\n      // Set the return value.\r\n      this._set_return_value(return_value)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST assignment expression. */\r\n  _assignment_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n      case 0:\r\n        // process id.\r\n        this._node.status = 1\r\n        this._set_node(this._node.left)\r\n\r\n        // Return to the processor.\r\n        this._process_nodes()\r\n        break\r\n      case 1:\r\n        // Process init.\r\n        this._node.status = 2\r\n        this._set_node(this._node.right)\r\n\r\n        // Return to the processor.\r\n        this._process_nodes()\r\n        break\r\n      case 2:\r\n        // define variables\r\n        var tmp_value\r\n\r\n        // Select binary operator.\r\n        switch (this._node.operator) {\r\n          case '=':\r\n            // Process the init value.\r\n            this._set_element_value(this._node.return_values[0], this._get_element_value(this._node.return_values[1]))\r\n            break\r\n          case '-=':\r\n            tmp_value = this._get_element_value(this._node.return_values[0])\r\n            this._set_element_value(this._node.return_values[0], tmp_value - this._get_element_value(this._node.return_values[1]))\r\n            break\r\n          case '/=':\r\n            tmp_value = this._get_element_value(this._node.return_values[0])\r\n            this._set_element_value(this._node.return_values[0], tmp_value / this._get_element_value(this._node.return_values[1]))\r\n            break\r\n          case '%=':\r\n            tmp_value = this._get_element_value(this._node.return_values[0])\r\n            this._set_element_value(this._node.return_values[0], tmp_value % this._get_element_value(this._node.return_values[1]))\r\n            break\r\n        }\r\n\r\n        // Reset node index and return to the parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Process an AST binary expression. */\r\n  _binary_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n      case 0:\r\n        // Process object.\r\n        this._node.status = 1\r\n        this._set_node(this._node.left)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n        break\r\n      case 1:\r\n        // Process property\r\n        this._node.status = 2\r\n        this._set_node(this._node.right)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n        break\r\n      case 2:\r\n        // define variables.\r\n        var left = this._get_element_value(this._node.return_values[0])\r\n        var right = this._get_element_value(this._node.return_values[1])\r\n        var return_value = { type: 'literal' }\r\n\r\n        // Select binary operator.\r\n        switch (this._node.operator) {\r\n          case '-':\r\n            return_value.value = left - right\r\n            break\r\n          case '/':\r\n            return_value.value = left / right\r\n            break\r\n          case '==':\r\n            return_value.value = (left === right)\r\n            break\r\n          case '!=':\r\n            return_value.value = (left !== right)\r\n            break\r\n          case '>':\r\n            return_value.value = (left > right)\r\n            break\r\n          case '<':\r\n            return_value.value = (left < right)\r\n            break\r\n          case '>=':\r\n            return_value.value = (left >= right)\r\n            break\r\n          case '<=':\r\n            return_value.value = (left <= right)\r\n            break\r\n          case '%':\r\n            if ((typeof left === 'number') && (typeof right === 'number')) {\r\n              return_value.value = left % right\r\n            } else {\r\n              return_value.value = left.replace(/%s/g, right)\r\n            }\r\n            break\r\n          case 'instanceof':\r\n            return_value.value = left instanceof right\r\n            break\r\n        }\r\n\r\n        // Set the return value.\r\n        this._set_return_value(return_value)\r\n\r\n        // Reset node index and return to the parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Process an AST block statement. */\r\n  _block_statement () {\r\n    // Initialize node specific properties.\r\n    this._node.break = (typeof this._node.break === 'undefined') ? false : this._node.break\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if ((this._node.index < this._node.body.length) && (this._node.break === false)) {\r\n      // Set current node to node in body.\r\n      this._node.index++\r\n      this._set_node(this._node.body[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Reset node index and return to the parent node.\r\n      if (this._node.break === true) {\r\n        this._node.break = false\r\n        this._node.parent.break = true\r\n      }\r\n\r\n      this._node.index = 0\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST break statement. */\r\n  _break_statement () {\r\n    // Set break flag for parent element.\r\n    this._node.parent.break = true\r\n\r\n    // Return to the parent node.\r\n    this._node = this._node.parent\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST call expression. */\r\n  _call_expression () {\r\n    // Initialize status properties.\r\n    this._node.arguments = (typeof this._node.arguments === 'undefined') ? [] : this._node.arguments\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n      case 0:\r\n        // Process arguments and caller.\r\n        if (this._node.index < this._node.arguments.length) {\r\n          // Set current node to next node in list.\r\n          this._node.index++\r\n          this._set_node(this._node.arguments[this._node.index - 1])\r\n\r\n          // Return to the node processessor.\r\n          this._process_nodes()\r\n        } else {\r\n          // Set parent node.\r\n          this._node.status = 1\r\n          this._set_node(this._node.callee)\r\n\r\n          // Return to the node processor.\r\n          this._process_nodes()\r\n        }\r\n        break\r\n      case 1:\r\n        // Get the first return value, which is the name of the caller element.\r\n        var return_value = this._node.return_values.pop()\r\n\r\n        // Get the arguments used on the caller element.\r\n        var tmp_arguments = []\r\n        for (var i = 0; i < this._node.return_values.length; i++) {\r\n          tmp_arguments.push(this._get_element_value(this._node.return_values[i]))\r\n        }\r\n\r\n        var caller = this._get_element(return_value)\r\n        var context = this._get_context(return_value)\r\n\r\n        if ((return_value.value === 'sleep') || (return_value.value === '__pythonRuntime.imports.clock.sleep')) {\r\n          // Adjust the status to special.\r\n          this._node.status = 2\r\n\r\n          // Check the context.\r\n          if (typeof context === 'undefined') {\r\n            context = this\r\n          }\r\n\r\n          // Execute the blocking call.\r\n          caller.apply(context, tmp_arguments)\r\n        } else {\r\n          // Check the context.\r\n          if (typeof context === 'undefined') {\r\n            context = this\r\n          }\r\n\r\n          // Execute the call, check first for internal function call.\r\n          if (this._node.callee.type === 'FunctionExpression') {\r\n            return_value = { type: 'literal', value: caller }\r\n          } else {\r\n            return_value = { type: 'literal', value: caller.apply(context, tmp_arguments) }\r\n          }\r\n\r\n          // Set the return value.\r\n          this._set_return_value(return_value)\r\n\r\n          // Reset node index and return to the parent node.\r\n          this._node.index = 0\r\n          this._node.status = 0\r\n          this._node.return_values = []\r\n          this._node = this._node.parent\r\n          this._process_nodes()\r\n        }\r\n        break\r\n      case 2:\r\n        // Special state used when calling a blocking method (sleep, clock.sleep, keyboard.get_key(), mouse.get_click).\r\n        this._set_return_value(this.global_return_value)\r\n\r\n        // Reset node index and return to the parent node.\r\n        this._node.index = 0\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Process an AST empty statment. */\r\n  _empty_statement () {\r\n    // Set parent node.\r\n    this._node = this._node.parent\r\n\r\n    // Return to the node processessor.\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST expression statement. */\r\n  _expression_statement () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Set parent node.\r\n      this._node.status = 1\r\n      this._set_node(this._node.expression)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Set parent node.\r\n      this._node.status = 0\r\n      this._node = this._node.parent\r\n\r\n      // Return to the node processessor.\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST for statement. */\r\n  _for_statement () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n      case 0:\r\n        // Process object.\r\n        this._node.status = 1\r\n        this._set_node(this._node.init)\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n        break\r\n      case 1:\r\n        // Process object.\r\n        this._node.status = 2\r\n        this._set_node(this._node.test)\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n        break\r\n      case 2:\r\n        // Check if the test node has returned true.\r\n        if (this._node.return_values[0].value === true) {\r\n          // Process object.\r\n          this._node.status = 3\r\n          this._node.return_values = []\r\n          this._set_node(this._node.body)\r\n\r\n          // Return to the node processessor.\r\n          this._process_nodes()\r\n        } else {\r\n          // Range has ended.\r\n          this._node.status = 0\r\n          this._node.return_values = []\r\n          this._node = this._node.parent\r\n\r\n          // Return to the node processessor.\r\n          this._process_nodes()\r\n        }\r\n        break\r\n      case 3:\r\n        // Process object.\r\n        this._node.status = 1\r\n        this._set_node(this._node.update)\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Process an AST for in statement. */\r\n  _for_in_statement () {\r\n    // Initialize status property.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n      case 0:\r\n        // Process object.\r\n        this._node.status = 1\r\n        this._set_node(this._node.left)\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n        break\r\n      case 1:\r\n        // Process object.\r\n        this._node.status = 2\r\n        this._set_node(this._node.right)\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n        break\r\n      case 2:\r\n        // Retrieve the range on which the loop travels.\r\n        var tmp_range = this._get_element_value(this._node.return_values[1])\r\n\r\n        // Execute the range.\r\n        if (this._node.index < tmp_range.length) {\r\n          // Set the value of the range.\r\n          this._set_element_value(this._node.return_values[0], tmp_range[this._node.index])\r\n\r\n          // Increase the index.\r\n          this._node.index++\r\n\r\n          // Execute the body.\r\n          this._set_node(this._node.body)\r\n          this._process_nodes()\r\n        } else {\r\n          this._node.index = 0\r\n          this._node.status = 0\r\n          this._node.return_values = []\r\n          this._node = this._node.parent\r\n          this._process_nodes()\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Process an AST function expression. */\r\n  _function_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n      case 0:\r\n        // Process defaults.\r\n        this._node.status = 1\r\n        this._set_node(this._node.body)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n        break\r\n      case 1:\r\n        // Remove the last return value from the global function stack.\r\n        var return_value = this._function_stack.pop()\r\n\r\n        // Set the return value\r\n        this._set_return_value(return_value)\r\n\r\n        // Set parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Process an AST identifier. */\r\n  _identifier () {\r\n    // Retrieve the identifier information.\r\n    const return_value = { type: 'identifier', value: this._node.name }\r\n\r\n    // Set the return value.\r\n    this._set_return_value(return_value)\r\n\r\n    // Set parent node.\r\n    this._node = this._node.parent\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST if statement. */\r\n  _if_statement () {\r\n    // Initialize status property.\r\n    this._node.break = (typeof this._node.break === 'undefined') ? false : this._node.break\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n      case 0:\r\n        // Process object.\r\n        this._node.status = 1\r\n        this._set_node(this._node.test)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n        break\r\n      case 1:\r\n        // Check if expression is true.\r\n        if (this._node.return_values[0].value === true) {\r\n          this._node.status = 2\r\n          this._set_node(this._node.consequent)\r\n\r\n          // Return to the node processor.\r\n          this._process_nodes()\r\n        } else if (this._node.alternate !== null) {\r\n          this._node.status = 2\r\n          this._set_node(this._node.alternate)\r\n\r\n          // Return to the node processor.\r\n          this._process_nodes()\r\n        } else {\r\n          this._node.status = 2\r\n          this._process_nodes()\r\n        }\r\n        break\r\n      case 2:\r\n        // Set parent node.\r\n        if (this._node.break === true) {\r\n          this._node.break = false\r\n          this._node.parent.break = true\r\n        }\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Process an AST literal. */\r\n  _literal () {\r\n    // Retrieve the identifier information.\r\n    var return_value = { type: 'literal', value: this._node.value }\r\n\r\n    // Set the return value.\r\n    this._set_return_value(return_value)\r\n\r\n    // Set parent node.\r\n    this._node = this._node.parent\r\n    this._process_nodes()\r\n  }\r\n\r\n  /** Process an AST logical expression. */\r\n  _logical_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n      case 0:\r\n        // Process object.\r\n        this._node.status = 1\r\n        this._set_node(this._node.left)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n        break\r\n      case 1:\r\n        // Process property\r\n        this._node.status = 2\r\n        this._set_node(this._node.right)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n        break\r\n      case 2:\r\n        // define variables.\r\n        var left = this._get_element_value(this._node.return_values[0])\r\n        var right = this._get_element_value(this._node.return_values[1])\r\n        var return_value = { type: 'literal' }\r\n\r\n        // Select binary operator.\r\n        switch (this._node.operator) {\r\n          case '&&':\r\n            return_value.value = left && right\r\n            break\r\n          case '||':\r\n            return_value.value = left || right\r\n            break\r\n        }\r\n\r\n        // Set the return value.\r\n        this._set_return_value(return_value)\r\n\r\n        // Reset node index and return to the parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Process an AST member expression */\r\n  _member_expression () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n      case 0:\r\n        // Process object.\r\n        this._node.status = 1\r\n        this._set_node(this._node.object)\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n        break\r\n      case 1:\r\n        // Process property\r\n        this._node.status = 2\r\n        this._set_node(this._node.property)\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n        break\r\n      case 2:\r\n        // Build the combing return value.\r\n        var return_value = { type: 'identifier', value: this._node.return_values[0].value + '.' + this._node.return_values[1].value }\r\n\r\n        // Set the return value\r\n        this._set_return_value(return_value)\r\n\r\n        // Reset node index and return to the parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Process an AST new expression. */\r\n  _new_expression () {\r\n    // Initialize status properties.\r\n    this._node.arguments = (typeof this._node.arguments === 'undefined') ? [] : this._node.arguments\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Process arguments and caller.\r\n      if (this._node.index < this._node.arguments.length) {\r\n        // Set current node to next node in list.\r\n        this._node.index++\r\n        this._set_node(this._node.arguments[this._node.index - 1])\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n      } else {\r\n        // Set parent node.\r\n        this._node.status = 1\r\n        this._set_node(this._node.callee)\r\n\r\n        // Return to the node processor.\r\n        this._process_nodes()\r\n      }\r\n    } else {\r\n      // Get the caller and context element.\r\n      let returnValue = this._node.return_values.pop()\r\n      var caller = this._get_element(returnValue)\r\n      var context = this._get_context(returnValue)\r\n\r\n      // Create the aruments array.\r\n      var tmp_arguments = []\r\n      for (var i = 0; i < this._node.return_values.length; i++) {\r\n        tmp_arguments.push(this._get_element_value(this._node.return_values[i]))\r\n      }\r\n\r\n      // Execute the call.\r\n      returnValue = { type: 'literal', value: caller.apply(context, tmp_arguments) }\r\n\r\n      // Set the return value\r\n      this._set_return_value(returnValue)\r\n\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST program. */\r\n  _program () {\r\n    // Initialize node specific properties.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if (this._node.index < this._node.body.length) {\r\n      // Set current node to node in body.\r\n      this._node.index++\r\n      this._set_node(this._node.body[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Change status and end the running process.\r\n      this._node.index = 0\r\n      this._status = 2\r\n\r\n      // Complete the inline item.\r\n      if (this._inline_script !== null) {\r\n        this._inline_script._complete()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Process an AST return statement. */\r\n  _return_statement () {\r\n    // Initialize status property.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n      case 0:\r\n        // Process object.\r\n        this._node.status = 1\r\n        this._set_node(this._node.argument)\r\n\r\n        // Return to the node processessor.\r\n        this._process_nodes()\r\n        break\r\n      case 1:\r\n        // Set return value.\r\n        const returnValue = { type: 'identifier', value: this._node.return_values[0].value }\r\n\r\n        // Set the return value\r\n        this._function_stack.push(returnValue)\r\n\r\n        // Reset node index and return to the parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Process an AST unary expression. */\r\n  _unary_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Set parent node.\r\n      this._node.status = 1\r\n      this._set_node(this._node.argument)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n    } else {\r\n      var return_value = { type: 'literal' }\r\n\r\n      // process the operator.\r\n      switch (this._node.operator) {\r\n        case '!' :\r\n          return_value.value = !(this._node.return_values[0].value)\r\n          break\r\n        case '-' :\r\n          return_value.value = -(this._node.return_values[0].value)\r\n          break\r\n      }\r\n\r\n      // Set the return value\r\n      this._set_return_value(return_value)\r\n\r\n      // Return to the node processessor.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST update expression. */\r\n  _update_expression () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    if (this._node.status === 0) {\r\n      // Set parent node.\r\n      this._node.status = 1\r\n      this._set_node(this._node.argument)\r\n\r\n      // Return to the node processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Process the init value.\r\n      switch (this._node.operator) {\r\n        case '++' :\r\n          this._set_element_value(this._node.return_values[0], this._get_element_value(this._node.return_values[0]) + 1)\r\n          break\r\n      }\r\n\r\n      // Return to the node processessor.\r\n      this._node.status = 0\r\n      this._node.return_values = []\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST variable declaration. */\r\n  _variable_declaration () {\r\n    // Initialize node specific properties.\r\n    this._node.index = (typeof this._node.index === 'undefined') ? 0 : this._node.index\r\n\r\n    // Check if all nodes in script have been processed.\r\n    if (this._node.index < this._node.declarations.length) {\r\n      // Set current node to next node in list.\r\n      this._node.index++\r\n      this._set_node(this._node.declarations[this._node.index - 1])\r\n\r\n      // Return to the processor.\r\n      this._process_nodes()\r\n    } else {\r\n      // Reset node index and return to the parent node.\r\n      this._node.index = 0\r\n      this._node = this._node.parent\r\n      this._process_nodes()\r\n    }\r\n  }\r\n\r\n  /** Process an AST variable declarator. */\r\n  _variable_declarator () {\r\n    // Initialize node specific properties.\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n      case 0:\r\n        // process id.\r\n        this._node.status = 1\r\n        this._set_node(this._node.id)\r\n\r\n        // Return to the processor.\r\n        this._process_nodes()\r\n        break\r\n      case 1:\r\n        // Process init.\r\n        this._node.status = 2\r\n        this._set_node(this._node.init)\r\n\r\n        // Return to the processor.\r\n        this._process_nodes()\r\n        break\r\n      case 2:\r\n        // Process the init value.\r\n        this._set_element_value(this._node.return_values[0], this._get_element_value(this._node.return_values[1]))\r\n\r\n        // Reset node index and return to the parent node.\r\n        this._node.status = 0\r\n        this._node.return_values = []\r\n        this._node = this._node.parent\r\n        this._process_nodes()\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Process an AST while statement. */\r\n  _while_statement () {\r\n    // Initialize status property.\r\n    this._node.break = (typeof this._node.break === 'undefined') ? false : this._node.break\r\n    this._node.status = (typeof this._node.status === 'undefined') ? 0 : this._node.status\r\n\r\n    // Process the current status.\r\n    switch (this._node.status) {\r\n      case 0:\r\n        // Check for the break flag.\r\n        if (this._node.break === true) {\r\n          this._node.break = false\r\n          // Set parent node.\r\n          this._node.status = 0\r\n          this._node.return_values = []\r\n          this._node = this._node.parent\r\n          this._process_nodes()\r\n        } else {\r\n          // Process object.\r\n          this._node.status = 1\r\n          this._set_node(this._node.test)\r\n\r\n          // Return to the node processeor.\r\n          this._process_nodes()\r\n        }\r\n        break\r\n      case 1:\r\n        // Check if expression is true.\r\n        if (this._node.return_values[0].value === true) {\r\n          // Reset the test\r\n          this._node.status = 0\r\n          this._node.return_values = []\r\n\r\n          // execute the body.\r\n          this._set_node(this._node.body)\r\n\r\n          // Return to the node processor.\r\n          this._process_nodes()\r\n        } else {\r\n          // Set parent node.\r\n          this._node.status = 0\r\n          this._node.return_values = []\r\n          this._node = this._node.parent\r\n          this._process_nodes()\r\n        }\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Process all AST nodes. */\r\n  _process_nodes () {\r\n    // Select type of processing.\r\n    if (this._statement === null) {\r\n      // Script processing.\r\n      this._process_nodes_jump()\r\n    } else {\r\n      if (this._node === this._statement) {\r\n        // Return the result value of the expression.\r\n        return (this._node.body[0].return_values[0].value)\r\n      } else {\r\n        // Statement processing.\r\n        this._process_nodes_timeout()\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Process a single AST nodes (timeout is for non-blocking) */\r\n  _process_nodes_jump () {\r\n    // Increase the stack counter.\r\n    this._stack++\r\n    if (this._stack > 500) {\r\n      // Clear the stack.\r\n      this._stack = 0\r\n\r\n      // Process nodes with a timeout (this is a hack for clearing the browser cache.\r\n      setTimeout(function () {\r\n        this._process_nodes_timeout()\r\n      }.bind(this), 1)\r\n    } else {\r\n      // Process the nodes without a timeout.\r\n      this._process_nodes_timeout()\r\n    }\r\n  }\r\n\r\n  /** Process a single AST nodes (timeout is for non-blocking) */\r\n  _process_nodes_timeout () {\r\n    // Select the type of node to process\r\n    switch (this._node.type) {\r\n      case 'ArrayExpression':\r\n        this._array_expression()\r\n        break\r\n      case 'AssignmentExpression':\r\n        this._assignment_expression()\r\n        break\r\n      case 'BinaryExpression':\r\n        this._binary_expression()\r\n        break\r\n      case 'BlockStatement':\r\n        this._block_statement()\r\n        break\r\n      case 'BreakStatement':\r\n        this._break_statement()\r\n        break\r\n      case 'CallExpression':\r\n        this._call_expression()\r\n        break\r\n      case 'EmptyStatement':\r\n        this._empty_statement()\r\n        break\r\n      case 'ExpressionStatement':\r\n        this._expression_statement()\r\n        break\r\n      case 'ForStatement':\r\n        this._for_statement()\r\n        break\r\n      case 'ForInStatement':\r\n        this._for_in_statement()\r\n        break\r\n      case 'FunctionExpression':\r\n        this._function_expression()\r\n        break\r\n      case 'Identifier':\r\n        this._identifier()\r\n        break\r\n      case 'IfStatement':\r\n        this._if_statement()\r\n        break\r\n      case 'Literal':\r\n        this._literal()\r\n        break\r\n      case 'LogicalExpression':\r\n        this._logical_expression()\r\n        break\r\n      case 'MemberExpression':\r\n        this._member_expression()\r\n        break\r\n      case 'NewExpression':\r\n        this._new_expression()\r\n        break\r\n      case 'Program':\r\n        this._program()\r\n        break\r\n      case 'ReturnStatement':\r\n        this._return_statement()\r\n        break\r\n      case 'UnaryExpression':\r\n        this._unary_expression()\r\n        break\r\n      case 'UpdateExpression':\r\n        this._update_expression()\r\n        break\r\n      case 'VariableDeclaration':\r\n        this._variable_declaration()\r\n        break\r\n      case 'VariableDeclarator':\r\n        this._variable_declarator()\r\n        break\r\n      case 'WhileStatement':\r\n        this._while_statement()\r\n        break\r\n      default:\r\n        this._runner._debugger.addError('Invalid node type to process: ' + this._node.type)\r\n    }\r\n  }\r\n\r\n  /**\r\n     * Run a single line python AST statement.\r\n     * @param {Object} ast_tree - The AST tree to run.\r\n     * @return {Boolean|Number|Object|String} - The result value of the AST evaluation.\r\n     */\r\n  _run_statement (ast_tree) {\r\n    this._node = ast_tree.body[0]\r\n    this._node.parent = ast_tree\r\n    this._statement = ast_tree\r\n\r\n    // Adjust status of partser to running and start the process.\r\n    this._status = 1\r\n\r\n    // Process the nodes.\r\n    this._process_nodes()\r\n\r\n    // Return the result value of the expression.\r\n    let returnValue\r\n    if (ast_tree.body[0].return_values[0].type === 'identifier') {\r\n      returnValue = this._get_element_value(ast_tree.body[0].return_values[0])\r\n    } else {\r\n      returnValue = ast_tree.body[0].return_values[0].value\r\n    }\r\n\r\n    // Clear the return value container for next cycle.\r\n    ast_tree.body[0].return_values = []\r\n\r\n    // Retur value of the statement.\r\n    return returnValue\r\n  }\r\n\r\n  /**\r\n     * Run an AST python script.\r\n     * @param {Object} inline_script - The Inline Script item to which the AST tree belongs.\r\n     * @param {Object} ast_tree - The AST tree to run.\r\n     */\r\n  _run (inline_script, ast_tree) {\r\n    // Set the inline item.\r\n    this._inline_script = inline_script\r\n\r\n    // set the self parameter.\r\n    this._variables['self'] = inline_script\r\n\r\n    // Set the first node and its parent.\r\n    this._node = ast_tree\r\n    this._node.parent = null\r\n    this._statement = null\r\n\r\n    // Adjust status of partser to running and start the process.\r\n    this._status = 1\r\n    this._process_nodes()\r\n  }\r\n}\r\n","import isFunction from 'lodash/isFunction'\r\n\r\n/** Class representing a data logger. */\r\nexport default class Log {\r\n  /**\r\n   * Create a log object which stores all the response data.\r\n   * @param {Object} experiment - The experiment to which the logger belongs.\r\n   */\r\n  constructor (experiment) {\r\n    this._experiment = experiment // Anchor to the experiment object.\r\n  }\r\n\r\n  /**\r\n   * Write one signle line to the message log.\r\n   * @param {Array} varList - Array with variables to write to the log.\r\n   */\r\n  write_vars (varList) {\r\n    const entry = {}\r\n    for (const varName of varList) {\r\n      const value = this._experiment.vars.get(varName, 'NA', false)\r\n      if (isFunction(value)) continue\r\n      entry[varName] = value\r\n    }\r\n    if (isFunction(this._experiment.onLog)) {\r\n      this._experiment.onLog(entry)\r\n    }\r\n    this._experiment._runner._data.push(entry)\r\n  }\r\n}\r\n","import Item from './item.js'\r\nimport JavaScriptWorkspace from '../classes/javascript_workspace.js'\r\nimport Canvas from '../backends/canvas.js'\r\nimport Log from '../backends/log'\r\nimport {\r\n  constants\r\n} from '../system/constants.js'\r\nimport {\r\n  VERSION_NAME,\r\n  VERSION_NUMBER\r\n} from '../index.js'\r\n\r\n/**\r\n * Class representing an Experiment item.\r\n * @extends Item\r\n */\r\nexport default class Experiment extends Item {\r\n  /** The experiment class defines the starting point for an experiment. */\r\n  constructor (experiment, name, script) {\r\n    // Inherited.\r\n    super(experiment, name, script)\r\n\r\n    // Create and set private properties.\r\n    this._canvas = new Canvas(this)\r\n    this._currentCanvas = this._canvas\r\n    this._log = new Log(this)\r\n    this._scale_x = 1 // Scaling of the canvas for fullscreen mode.\r\n    this._scale_y = 1 // Scaling of the canvas for fullscreen mode.\r\n    this._javascriptWorkspace = new JavaScriptWorkspace(this)\r\n\r\n    // Create and set public properties.\r\n    this.debug = this._runner._debugger.enabled\r\n    this.items = this._runner._itemStore\r\n    this.pool = this._runner._pool\r\n\r\n    // Set default variables\r\n    this.vars.start = 'experiment'\r\n    this.vars.title = 'My Experiment'\r\n    this.vars.bidi = 'no'\r\n    this.vars.round_decimals = 2\r\n    this.vars.form_clicks = 'no'\r\n    this.vars.uniform_coordinates = 'no'\r\n    this.vars.sessionid = new Date().valueOf() + Math.floor(Math.random() * 100000)\r\n\r\n    // Sound parameters.\r\n    this.vars.sound_freq = 48000\r\n    this.vars.sound_sample_size = -16\r\n    this.vars.sound_channels = 2\r\n    this.vars.sound_buf_size = 1024\r\n\r\n    // Default backend\r\n    this.vars.canvas_backend = 'xpyriment'\r\n\r\n    // Display parameters.\r\n    this.vars.width = 1024\r\n    this.vars.height = 768\r\n    this.vars.background = 0x000000\r\n    this.vars.foreground = 0xFFFFFF\r\n\r\n    // Font parameters.\r\n    this.vars.font_size = 18\r\n    this.vars.font_family = 'mono'\r\n    this.vars.font_italic = 'no'\r\n    this.vars.font_bold = 'no'\r\n    this.vars.font_underline = 'no'\r\n  }\r\n\r\n  /** Resets the feedback variables (acc, avg_rt, etc.). */\r\n  reset_feedback () {\r\n    this.vars.total_responses = 0\r\n    this.vars.total_correct = 0\r\n    this.vars.total_response_time = 0\r\n    this.vars.avg_rt = 'undefined'\r\n    this.vars.average_response_time = 'undefined'\r\n    this.vars.accuracy = 'undefined'\r\n    this.vars.acc = 'undefined'\r\n  }\r\n\r\n  /**\r\n    * Sets the subject number and parity (even/ odd).\r\n    * @param  {Number} pNr - The subject number to be used.\r\n    */\r\n  set_subject (pNr) {\r\n    // Sets the subject number and parity (even/ odd).\r\n    this.vars.subject_nr = pNr\r\n    if ((pNr % 2) === 0) {\r\n      this.vars.subject_parity = 'even'\r\n    } else {\r\n      this.vars.subject_parity = 'odd'\r\n    }\r\n  }\r\n\r\n  /**\r\n    * Extracts a the definition of a single item from the string.\r\n    * @param {String} script - The script to read the definition form.\r\n    * @return {String} - The definition found from the script.\r\n    */\r\n  read_definition (script) {\r\n    // Extracts a the definition of a single item from the string.\r\n    var line = script.shift()\r\n    var def_str = ''\r\n    while ((line !== null) && (line.length > 0) && (line.charAt(0) === '\\t')) {\r\n      def_str = def_str + line.substring(1) + '\\n'\r\n      line = script.shift()\r\n    }\r\n    return def_str\r\n  }\r\n\r\n  /**\r\n   * Construct the experiment object from OpenSesame script.\r\n   * @param {String} script - The opensesame script contents\r\n   */\r\n  from_string (script) {\r\n    // Split the string into an array of lines.\r\n    if (script !== null) {\r\n      this._source = script.split('\\n')\r\n      var l = this._source.shift()\r\n      while (l != null) {\r\n        // Set the processing of the next line.\r\n        var get_next = true\r\n        try {\r\n          var cmd, args, kwargs;\r\n          // Split the single line into a set of tokens.\r\n          [cmd, args, kwargs] = this._runner._syntax.parse_cmd(l)\r\n        } catch (e) {\r\n          this._runner._debugger.addError('Failed to parse script. Maybe it contains illegal characters or unclosed quotes: ' + e.message)\r\n        }\r\n\r\n        if ((cmd !== null) && (args.length > 0)) {\r\n          // Try to parse the line as variable (or comment)\r\n          if (this.parse_variable(l) === false) {\r\n            if (cmd === 'define') {\r\n              if (args.length === 2) {\r\n                // Get the type, name and definition string of an item.\r\n                var item_type = args[0]\r\n                var item_name = this._runner._syntax.sanitize(args[1])\r\n                var def_str = this.read_definition(this._source)\r\n                this._runner._itemStore.newItem(item_type, item_name, def_str)\r\n              } else {\r\n                this._runner._debugger.addError('Failed to parse definition: ' + l)\r\n              }\r\n            }\r\n          }\r\n        }\r\n\r\n        // Get the next line.\r\n        if (get_next === true) {\r\n          l = this._source.shift()\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /** Initializes the clock backend. */\r\n  init_clock () {\r\n    // Initializes the clock backend.\r\n    this.clock._initialize()\r\n  }\r\n\r\n  /** Initializes the canvas backend. */\r\n  init_display () {\r\n    // Initializes the canvas backend.\r\n    this._canvas.init_display(this)\r\n  }\r\n\r\n  /** Event handler for external data retrieval. */\r\n  onLog (data) {\r\n    // Function to be overwritten by external handler\r\n  }\r\n\r\n  /** Implements the run phase of an item. */\r\n  run () {\r\n    // Inherited.\r\n    super.run()\r\n\r\n    // Runs the experiment.\r\n    switch (this._status) {\r\n      case constants.STATUS_INITIALIZE:\r\n        // Adjust the status of the item.\r\n        this._status = constants.STATUS_FINALIZE\r\n\r\n        // Save the date and time, and the version of OpenSesame\r\n        this.vars.datetime = new Date().toString()\r\n        this.vars.opensesame_version = VERSION_NUMBER\r\n        this.vars.opensesame_codename = VERSION_NAME\r\n        this.init_clock()\r\n        this.init_display()\r\n        this.reset_feedback()\r\n\r\n        // Add closing message to debug system.\r\n        this._runner._debugger.addMessage('experiment.run(): experiment started at ' + new Date().toUTCString())\r\n\r\n        if (this._runner._itemStore._items[this.vars.start] !== null) {\r\n          this._runner._itemStack.clear()\r\n          this._runner._itemStore.prepare(this.vars.start, this)\r\n        } else {\r\n          this._runner._debugger.addError('Could not find the item that is the entry point of the experiment: ' + this.vars.start)\r\n        }\r\n        break\r\n      case constants.STATUS_FINALIZE:\r\n        // Add closing message to debug system.\r\n        this._runner._debugger.addMessage('experiment.run(): experiment finished at ' + new Date().toUTCString())\r\n\r\n        // Complete the run process.\r\n        this.end()\r\n        break\r\n    }\r\n  }\r\n\r\n  /** Ends an experiment. */\r\n  end () {\r\n    this._runner._finalize()\r\n  }\r\n}\r\n","import { autoDetectRenderer } from 'pixi.js'\r\nimport {\r\n  constants\r\n} from './constants.js'\r\nimport Debugger from './debugger.js'\r\nimport Convertor from './convertor.js'\r\nimport Events from './events.js'\r\nimport Parameters from './parameters.js'\r\nimport Screen from './screen.js'\r\nimport Session from './session.js'\r\nimport Transfer from './transfer.js'\r\nimport ItemStack from '../classes/item_stack.js'\r\nimport ItemStore from '../classes/item_store.js'\r\nimport PythonWorkspace from '../classes/python_workspace.js'\r\nimport FilePoolStore from '../classes/file_pool_store.js'\r\nimport Syntax from '../classes/syntax.js'\r\nimport PythonParser from '../python/python.js'\r\nimport Experiment from '../items/experiment.js'\r\n\r\n/** Class representing the Runner. */\r\nexport default class Runner {\r\n  /** Create a runner which runs an experiment. */\r\n  constructor (content) {\r\n    // Create and set private properties.\r\n    this._confirm = null // Optionale confirm dialog function.\r\n    this._container = null // HTML: The container (div) element.\r\n    this._data = [] // Experiment result data.\r\n    this._experiment = null // The experiment container.\r\n    this._fullScreen = false // Full screen toggle mode.\r\n    this._mimetype = null // Distinction between text and binanry files.\r\n    this._name = 'noname.exp' // Name of the experiment which is run.\r\n    this._onConsole = null // Event handler for processing print messages.\r\n    this._onFinished = null // Event handler for finishing the experiment.\r\n    this._onLog = null // Event handler to call when logger is encountered.\r\n    this._onError = null // Event handler to call when an error is encountered.\r\n    this._prompt = null // Optional prompt dialog function.\r\n    this._renderer = null // PIXI: The visual stimuli renderer.\r\n    this._scaleMode = 'noScale' // Scale type used for full screen mode.\r\n    this._script = null // Container for the experiment script.\r\n    this._source = null // Link to the source experiment file.\r\n    this._subject = null // If defined containing the subject number.\r\n    this._target = null // Link to the target location for the data.\r\n\r\n    // Create and set private class properties.\r\n    this._debugger = new Debugger(this) // Internal error system.\r\n    this._convertor = new Convertor(this)\r\n    this._events = new Events(this) // The event processor.\r\n    this._itemStack = new ItemStack(this) // The global item stack.\r\n    this._itemStore = new ItemStore(this) // The global item store.\r\n    this._parameters = new Parameters(this) // Parameter processor.\r\n    this._pool = new FilePoolStore(this) // The virtual file pool store.\r\n    this._pythonParser = new PythonParser(this) // Python parser\r\n    this._pythonWorkspace = new PythonWorkspace(this) // Python workspace.\r\n    this._screen = new Screen(this) // Introduction screen renderer.\r\n    this._session = new Session(this) // Session information container.\r\n    this._syntax = new Syntax(this) // The script syntax checker.\r\n    this._transfer = new Transfer(this) // File transfer system.\r\n\r\n    // Create the content container.\r\n    this._setupContent(content)\r\n  }\r\n\r\n  /**\r\n   * Setup the content container which shows all the visual output.\r\n   * @param {String|Object} content - The content (div element) in which the experiment is projected.\r\n   */\r\n  _setupContent (content) {\r\n    // Check if the experiment container is defined.\r\n    if (typeof content !== 'undefined') {\r\n      // Get the div element from the DOM element tree\r\n      this._container = (typeof content === 'string') ? document.getElementById(content) : content\r\n\r\n      // Create and set the experiment canvas.\r\n      this._renderer = autoDetectRenderer(800, 600, {\r\n        antialias: true,\r\n        transparent: false,\r\n        resolution: 1\r\n      })\r\n      this._renderer.backgroundColor = 0x000000\r\n\r\n      // Append the canvas to the container.\r\n      this._container.appendChild(this._renderer.view)\r\n    } else {\r\n      // Show error message.\r\n      this._debugger.addError('No content parameter specified.')\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Setup the context from which the experiment is created.\r\n   * @param {Object} context - An JSON object containing information about the experiment.\r\n   */\r\n  async _setupContext (context) {\r\n    // Check if the script parameter is defined.\r\n    if (typeof context !== 'undefined') {\r\n      // Initialize the context parameters.\r\n      // Use ES6 destructuring to determine values and set default ones if\r\n      // required.\r\n      ({\r\n        confirm: this._confirm = null,\r\n        debug: this._debugger.enabled = false,\r\n        fullScreen: this._fullScreen = false,\r\n        introClick: this._screen._click = true,\r\n        introScreen: this._screen._active = true,\r\n        mimetype: this._mimetype = null,\r\n        name: this._name = 'noname.exp',\r\n        onConsole: this._onConsole = null,\r\n        onFinished: this._onFinished = null,\r\n        onLog: this._onLog = null,\r\n        onError: this._onError = null,\r\n        prompt: this._prompt = null,\r\n        scaleMode: this._scaleMode = 'noScale',\r\n        source: this._source = null,\r\n        subject: this._subject = null,\r\n        target: this._target = null\r\n      } = context)\r\n\r\n      // Set up the introscreen.\r\n      this._screen._setupIntroScreen()\r\n\r\n      this._screen._updateIntroScreen('Loading experiment.')\r\n      this._screen._updateProgressBar(-1)\r\n\r\n      // Load the script file, using the source parameter.\r\n      try {\r\n        this._script = await this._transfer._readSource(this._source)\r\n      } catch (e) {\r\n        this._debugger.addError(`Error reading osexp: ${e}`)\r\n        this._exit()\r\n        return\r\n      }\r\n\r\n      // Update the introscreen\r\n      this._screen._updateIntroScreen('Building experiment structure.')\r\n\r\n      // Continue the experiment build.\r\n      this._build()\r\n\r\n      // Initialize the parameters class and request user input.\r\n      this._parameters._initialize()\r\n    } else {\r\n      // Show error message.\r\n      this.debugger.addError('No context parameter specified.')\r\n    }\r\n  }\r\n\r\n  /** Build the experiment system. */\r\n  _build () {\r\n    // Create the experiment item.\r\n    this._experiment = new Experiment(this, this._name, this._script)\r\n    this._convertor.parseScript(this._script)\r\n    this._experiment.from_string(this._script)\r\n\r\n    // Set the onlog event handler (if defined).\r\n    if (this._onLog) {\r\n      this._experiment.onLog = this._onLog\r\n    }\r\n  }\r\n\r\n  /** initialize the runner. */\r\n  _initialize () {\r\n    // Initialize the helper classes.\r\n    this._debugger._initialize()\r\n    this._events._initialize()\r\n    this._pythonParser._initialize()\r\n    this._session._initialize()\r\n\r\n    // Prepare and run the experiment item.\r\n    this._experiment.prepare()\r\n    this._experiment.run()\r\n  }\r\n\r\n  /** finalize the runner. */\r\n  _finalize () {\r\n    // Finalize the event system.\r\n    this._events._finalize()\r\n\r\n    // Finalize the debugger.\r\n    this._debugger._finalize()\r\n\r\n    // Clear the item store and file pool.\r\n    this._itemStore._clean_up()\r\n    this._pool._clean_up()\r\n\r\n    // Exit the runner.\r\n    this._exit()\r\n  }\r\n\r\n  /** Exit the experiment environment and execute the optional callback. */\r\n  _exit () {\r\n    // Leave the full screen mode\r\n    this._screen._fullScreenExit()\r\n\r\n    // Reset te size of the container and the canvas.\r\n    this._experiment._canvas._exitDisplay()\r\n\r\n    // Clear the experiment item.\r\n    this._experiment = null\r\n\r\n    // Check if a callback function is defined.\r\n    if (this._onFinished) {\r\n      // Execute callback function.\r\n      this._onFinished(this._data, this._session._session)\r\n    }\r\n  }\r\n\r\n  /** Exit a running experiment. */\r\n  exit () {\r\n    // Set state of the event system to break.\r\n    this._events._state = constants.TIMER_BREAK\r\n  }\r\n\r\n  /** Run an experiment */\r\n  run (context) {\r\n    // Build the experiment.\r\n    this._setupContext(context)\r\n  }\r\n}\r\n","/* eslint-disable no-extend-native */\n/*\n * OsWeb\n *\n * An experiment research tool written in Javascript (ES2016) and HTML to be\n * used in Qualtrics or other web-based tools. Based upon OpenSesame.\n *\n * Author: drs. J. Bos, D. Schreij & S. Mathot\n *\n * Copyright (c) University of Groningen\n * Faculty of Behavioural and Social Sciences\n * Technical Support Service\n *\n */\n\nimport Runner from './system/runner.js'\n\nexport const VERSION_NAME = OSWEB_VERSION_NAME\nexport const VERSION_NUMBER = OSWEB_VERSION_NO\n\n// Add replaceAll function to string prototype\n// eslint-disable-next-line no-extend-native\nString.prototype.replaceAll = function (str1, str2, ignore) {\n  return this.replace(\n    new RegExp(\n      str1.replace(/([\\/\\,\\!\\\\\\^\\$\\{\\}\\[\\]\\(\\)\\.\\*\\+\\?\\|\\<\\>\\-\\&])/g, '\\\\$&'),\n      (ignore ? 'gi' : 'g')),\n    (typeof (str2) === 'string') ? str2.replace(/\\$/g, '$$$$') : str2)\n}\n\n// Add _pySlide function to string prototype (HACK for the filbert interpreter).\nString.prototype._pySlice = function (start, end, step) {\n  if (end !== null) {\n    return this.slice(start, end)\n  } else {\n    return this.slice(start)\n  }\n}\n\n// Create the osweb library container.\nconst osweb = {\n  printVersionInfo: function () {\n    // Show library name and library version number in the console.\n    console.log(`${VERSION_NAME} v${VERSION_NUMBER}`)\n  },\n  getRunner: function (target) {\n    return new Runner(target)\n  }\n}\n\nexport default osweb\n","/* This is the entry script for the webpack builder\nThis script ties all needed modules or files together and provides the\ncorrect setting for the webpack-devserver\n*/\nimport './scss/osweb.scss'\nimport osweb from './js/osweb/index.js'\n\nif (typeof window !== 'undefined') {\n  window.alertify = require('alertifyjs')\n  require('alertifyjs/build/css/alertify.css')\n  require('alertifyjs/build/css/themes/default.css')\n  window.osweb = osweb\n  window.osweb.printVersionInfo()\n}\n\nif (module.hot) {\n  module.hot.accept()\n}\n","import { Container, Graphics, Sprite, Text, Texture } from 'pixi.js'\nimport Styles from './styles.js'\n\n/** Class representing a drawing canvas. */\nexport default class Canvas {\n  /**\n   * Create a canvas object which is used to show all visual stimuli.\n   * @param {Object} experiment - The experiment to which the canvas belongs.\n   * @param {Boolean} auto_prepare - If true the canvas is prepared after drawing.\n   * @param {Object} style_args - Optional styling argument for the canvas.\n   */\n  constructor (experiment, auto_prepare) {\n    // Create and set public properties.\n    this.auto_prepare = (typeof auto_prepare === 'undefined') ? true : auto_prepare // Set autoprepare toggle (not supported yet).\n    this.experiment = experiment // Anchor to the experiment object.\n\n    // Create and set private properties.\n    this._container = new Container() // Create the container which represents the canvas.\n    this._font_string = 'bold 18px Courier New' // Default font definition string.\n    this._height = this.experiment._runner._renderer.height // Height of the HTML canvas used for drawing.\n    this._styles = new Styles() // The style container.\n    this._width = this.experiment._runner._renderer.width // Width of the HTML canvas used for drawing.\n  }\n\n  /**\n   * Calculate the coordinates for the arraw shape.\n   * @param {Number} sx - The starting x coordinate of the element.\n   * @param {Number} sy - The starting y coordinate of the element.\n   * @param {Number} ex - The ending x coordinate of the element.\n   * @param {Number} ey - The ending y coordinate of the element.\n   * @param {Number} bodyWidth - The width of the element body.\n   * @param {Number} bodyLength - The height of the element body.\n   * @param {Number} headWidth - The width of the element head.\n   * @return {Array} - The coordinates defining the arrow element.\n   */\n  _arrow_shape (sx, sy, ex, ey, bodyWidth, bodyLength, headWidth) {\n    // Length\n    var d = Math.sqrt(Math.pow(ey - sy, 2) + Math.pow(sx - ex, 2))\n    var angle = Math.atan2(ey - sy, ex - sx)\n    var _headWidth = (1 - bodyWidth) / 2.0\n    bodyWidth = bodyWidth / 2.0\n\n    // calculate coordinates\n    var p4 = [ex, ey]\n    var p1 = [sx + bodyWidth * headWidth * Math.cos(angle - Math.PI / 2), sy + bodyWidth * headWidth * Math.sin(angle - Math.PI / 2)]\n    var p2 = [p1[0] + bodyLength * Math.cos(angle) * d, p1[1] + bodyLength * Math.sin(angle) * d]\n    var p3 = [p2[0] + _headWidth * headWidth * Math.cos(angle - Math.PI / 2), p2[1] + _headWidth * headWidth * Math.sin(angle - Math.PI / 2)]\n    var p7 = [sx + bodyWidth * headWidth * Math.cos(angle + Math.PI / 2), sy + bodyWidth * headWidth * Math.sin(angle + Math.PI / 2)]\n    var p6 = [p7[0] + bodyLength * Math.cos(angle) * d, p7[1] + bodyLength * Math.sin(angle) * d]\n    var p5 = [p6[0] + _headWidth * headWidth * Math.cos(angle + Math.PI / 2), p6[1] + _headWidth * headWidth * Math.sin(angle + Math.PI / 2)]\n\n    return [p1, p2, p3, p4, p5, p6, p7]\n  }\n\n  /**\n   * Checks if the supplied string contains HTML markup.\n   * @param {String} str - The string to check.\n   * @return {Boolean} - True if HTML markup was found, false if not.\n   */\n  _containsHTML (str) {\n    let doc\n    try {\n      doc = new DOMParser().parseFromString(str, 'text/html')\n      return Array.from(doc.childNodes).some(node => node.nodeType === 1)\n    } catch (e) {\n      console.error('Could not parse DOM: ' + e.message)\n    }\n  }\n\n  /** Exit the display and return to default settings. */\n  _exitDisplay () {\n    // Clear container.\n    this.clear()\n\n    // Set the cursor visibility to default (visible).\n    this.experiment._runner._renderer.view.style.cursor = 'default'\n\n    //  Set the renderer dimensions.\n    this.experiment._runner._renderer.resize(800, 600)\n\n    // Clear the renderer.\n    this.experiment._runner._renderer.backgroundColor = 0x000000\n    this.experiment._runner._renderer.clear()\n    this.experiment._runner._renderer.render(this._container)\n\n    try {\n      document.body.style.backgroundColor = '#FFFFFF'\n    } catch (e) {\n      console.log('Could not reset body color to white', e)\n    }\n  }\n\n  /**\n   * Checks if addiotional style is defined otherwise use default.\n   * @param {Object} styleArgs - The additional style.\n   * @return {Object} - returns a style object.\n   */\n  _getStyle (styleArgs) {\n    // Check if the supplied style does exist.\n    if (typeof (styleArgs) === 'undefined') {\n      return this._styles\n    } else {\n      const styles = new Styles()\n      // Shorter notation: (but keeping old code in comments if this does not work as expected)\n      Object.assign(styles, styleArgs)\n      // styles._background_color = (typeof (styleArgs._background_color) !== 'undefined') ? styleArgs._background_color : 0x000000\n      // styles._bidi = (typeof (styleArgs._bidi) !== 'undefined') ? styleArgs._bidi : false\n      // styles._color = (typeof (styleArgs._color) !== 'undefined') ? styleArgs._color : 0xffffff\n      // styles._fill = (typeof (styleArgs._fill) !== 'undefined') ? styleArgs._fill : false\n      // styles._font_bold = (typeof (styleArgs._font_bold) !== 'undefined') ? styleArgs._font_bold : true\n      // styles._font_family = (typeof (styleArgs._font_family) !== 'undefined') ? styleArgs._font_family : 'Arial'\n      // styles._font_italic = (typeof (styleArgs._font_italic) !== 'undefined') ? styleArgs._font_italic : false\n      // styles._font_size = (typeof (styleArgs._font_size) !== 'undefined') ? styleArgs._font_size : 24\n      // styles._font_underline = (typeof (styleArgs._font_underline) !== 'undefined') ? styleArgs._font_underline : false\n      // styles._penwidth = (typeof (styleArgs._penwidth) !== 'undefined') ? styleArgs._penwidth : 1\n      return styles\n    }\n  }\n\n  /**\n   * Calculates the height, ascent en descent in pixels for the given font.\n   * @param {String} textLine The line of text.\n   * @param {String} fontFamily The font family to use.\n   * @param {Number} fontSize The size of the font.\n   * @return {Object} object containing the height, ascent en descent of the text.\n   */\n  _getTextBaseline (textLine, fontFamily, fontSize, fontBold) {\n    // Create the text element.\n    const text = document.createElement('span')\n    text.style.fontFamily = fontFamily || 'Arial'\n    text.style.fontWeight = (fontBold === true) ? 'bold' : 'normal'\n    text.style.fontSize = String(fontSize) + 'px'\n    text.innerHTML = textLine\n    // Create the calculation div.\n    const block = document.createElement('div')\n    block.style.display = 'inline-block'\n    block.style.lineHeight = 'normal'\n    // block.style.width = '1px'\n    // block.style.height = '0px'\n    // Create the container div.\n    const div = document.createElement('div')\n    div.append(text, block)\n    document.body.appendChild(div)\n\n    // Set the variables.\n    const result = {}\n    let rect\n    let top1\n    let top2\n\n    // Calculate the ascent\n    block.style.verticalAlign = 'baseline'\n    rect = block.getBoundingClientRect()\n    top1 = rect.top + document.body.scrollTop\n    rect = text.getBoundingClientRect()\n    top2 = rect.top + document.body.scrollTop\n    result.ascent = Math.round(top1 - top2)\n\n    // Calculate the descent and the heigt.\n    block.style.verticalAlign = 'bottom'\n    rect = block.getBoundingClientRect()\n    top1 = rect.top + document.body.scrollTop\n    rect = text.getBoundingClientRect()\n    top2 = rect.top + document.body.scrollTop\n    result.height = Math.round(top1 - top2)\n    result.descent = result.height - result.ascent\n\n    document.body.removeChild(div)\n\n    // Return the result.\n    return result\n  }\n\n  /**\n   * Returns the correct envelop setting to use.\n   * @param {String} env - Envelop parameter.\n   * @return {String} - The envelop type to use.\n   */\n  _match_env (env) {\n    if (['c', 'circular', 'round'].includes(env)) {\n      return 'c'\n    } else if (['g', 'gaussian', 'gauss', 'normal', 'rect', 'square'].includes(env)) {\n      return 'g'\n    } else if (['rectangular', 'rectangle'].includes(env)) {\n      return 'r'\n    } else if (['l', 'linear', 'lin', 'ln'].includes(env)) {\n      return 'l'\n    } else {\n      return 'g'\n    }\n  }\n\n  /**\n   * Parse recursively a HTML based text area and returns a set of text elements.\n   * @param {Object} htmlNode - The html node to process.\n   * @param {Object} textBlock - Object containing the translated text block.\n   * @param {Object} currentStyle - Object containing the current style to use.\n   */\n  _parseHtmlNode (htmlNode, textBlock, currentStyle) {\n    // Create a style for the current leven\n    var elementStyle = this._getStyle(currentStyle)\n\n    // Process the node content itself.\n    switch (htmlNode.nodeType) {\n      case 1:\n        // Select the proper html tag\n        switch (htmlNode.nodeName) {\n          case 'B':\n            // Process bold tag.\n            elementStyle.font_bold = true\n            break\n          case 'BR':\n            // Process break tag, get the total width of the line.\n            textBlock.row.height = (textBlock.row.height > 0) ? textBlock.row.height : textBlock.prev_height\n            textBlock.row.width = (textBlock.x_pos > textBlock.row.width) ? textBlock.x_pos : textBlock.row.width\n            textBlock.width = (textBlock.width > textBlock.row.width) ? textBlock.width : textBlock.row.width\n            textBlock.y_pos = textBlock.y_pos + textBlock.row.height\n            textBlock.x_pos = 4\n            textBlock.height = textBlock.height + textBlock.row.height\n            // new row with elements.\n            textBlock.rows.push(textBlock.row)\n            textBlock.row = {\n              ascent: 0,\n              width: 0,\n              height: 0,\n              text_elements: [],\n              text_dimensions: [],\n              text_underline: []\n            }\n            break\n          case 'I':\n            // Process italic tag.\n            elementStyle.font_italic = true\n            break\n          case 'SPAN':\n            // Get the style tokens.\n            if (htmlNode.attributes.length > 0) {\n              var tokens = htmlNode.attributes[0].value.split(';')\n              // parse through the style tokens.\n              for (var j = 0; j < tokens.length; j++) {\n                var property = tokens[j].slice(0, tokens[j].indexOf(':'))\n                var value = tokens[j].slice(tokens[j].indexOf(':') + 1, tokens[j].length)\n                // Set the supported properties.\n                switch (property) {\n                  case 'color':\n                    elementStyle.color = value\n                    break\n                  case 'font-size':\n                    elementStyle.font_size = value\n                    break\n                  case 'font-family':\n                    elementStyle.font_family = value\n                    break\n                }\n              }\n            }\n            break\n          case 'U':\n            // Process underline tag.\n            elementStyle.font_underline = true\n            break\n        }\n        break\n      case 3:\n        // Create the text style element.\n        var textStyle = {\n          fontFamily: elementStyle.font_family,\n          fontStyle: (elementStyle.font_italic === true) ? 'italic' : 'normal',\n          fontWeight: (elementStyle.font_bold === true) ? 'bold' : 'normal',\n          fontSize: elementStyle.font_size,\n          fill: elementStyle.color\n        }\n\n        // Create the text element and get the dimension.\n        var bounds = {}\n        var textElement = new Text(htmlNode.textContent, textStyle)\n        textElement.getBounds(false, bounds)\n\n        // Get the height and descent (for vertical positioning);\n        var dimension = this._getTextBaseline(htmlNode.textContent, elementStyle.font_family, elementStyle.font_size, elementStyle.font_bold)\n\n        // Position the text element and update the width.\n        textElement.x = textBlock.x_pos\n        textElement.y = textBlock.y_pos\n        textBlock.x_pos = textBlock.x_pos + bounds.width\n        textBlock.row.width = (textBlock.x_pos > textBlock.row.width) ? textBlock.x_pos : textBlock.row.width\n        textBlock.width = (textBlock.width > textBlock.row.width) ? textBlock.width : textBlock.row.width\n        textBlock.row.height = ((bounds.height + 1) > textBlock.row.height) ? bounds.height + 1 : textBlock.row.height\n        textBlock.row.ascent = (dimension.ascent > textBlock.row.ascent) ? dimension.ascent : textBlock.row.ascent\n        textBlock.prev_height = textBlock.row.height\n        textBlock.row.text_elements.push(textElement)\n        textBlock.row.text_dimensions.push(dimension)\n        textBlock.row.text_underline.push(elementStyle.font_underline)\n        break\n    }\n\n    // Process the child nodes recursive (if any).\n    for (var i = 0; i < htmlNode.childNodes.length; i++) {\n      this._parseHtmlNode(htmlNode.childNodes[i], textBlock, elementStyle, (i === (htmlNode.childNodes.length - 1)))\n    }\n  }\n\n  /**\n   * Resizes the container div (osweb_div), which contains all elements on display\n   * @param {Number} width - Width to set.\n   * @param {Number} height -Hheight to set.\n   */\n  _resizeContainer (width, height) {\n    // Set the parent container dimensions.\n    this.experiment._runner._container.style.width = width + 'px'\n    this.experiment._runner._container.style.height = height + 'px'\n  }\n\n  /**\n   * Draws an arrow element on the canvas.\n   * @param {Number} sx - The starting x coordinate of the element.\n   * @param {Number} sy - The starting y coordinate of the element.\n   * @param {Number} ex - The ending x coordinate of the element.\n   * @param {Number} ey - The ending y coordinate of the element.\n   * @param {Number} bodyWidth - The width of the element body.\n   * @param {Number} bodyLength - The height of the element body.\n   * @param {Number} headWidth - The width of the element head.\n   * @param {Object} styleArgs - Optional styling arguments for the element.\n   */\n  arrow (sx, sy, ex, ey, bodyWidth, bodyLength, headWidth, styleArgs) {\n    // Calculate coordinate points for the arrow.\n    var points = this._arrow_shape(sx, sy, ex, ey, bodyWidth, bodyLength, headWidth)\n\n    // Draw the arrow as a polygon.\n    this.polygon(points, styleArgs)\n  }\n\n  /**\n   * Draws an arrow element on the canvas.\n   * @param {Number} sx - The x coordinate of the element.\n   * @param {Number} sy - The y coordinate of the element.\n   * @param {Number} ex - The radius the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  circle (x, y, r, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Create a circle element.\n    var circle = new Graphics()\n    circle.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) {\n      circle.beginFill(elementStyle.background_color)\n      circle.drawCircle(0, 0, r)\n      circle.endFill()\n    } else {\n      circle.drawCircle(0, 0, r)\n    }\n    circle.x = x\n    circle.y = y\n\n    // Add the circle element to container.\n    this._container.addChild(circle)\n  }\n\n  /**\n   * Clear the current canvas.\n   * @param {Number} background_color - The color to draw (optional).\n   * @param {Object} style_args - JSON object containing style arguments (optional).\n   */\n  clear (backgroundColor, styleArgs) {\n    // Clear the stage by temoving al the child elements.\n    for (var i = this._container.children.length - 1; i >= 0; i--) {\n      this._container.removeChild(this._container.children[i])\n    }\n  }\n\n  /**\n   * Copies the contents of the passed canvas onto current one.\n   * @param  {osweb.canvas} canvas The source canvas to copy\n   * @return {void}\n   */\n  copy (canvas) {\n    this.clear()\n\n    // Loop over the shapes on the passed canvas and copy them onto the current one\n    for (const shape of canvas._container.children) {\n      this._container.addChild(shape.clone())\n    }\n  }\n\n  /**\n   * Draws an ellipse element on the canvas.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Number} w - The width the element.\n   * @param {Number} h - The height the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  ellipse (x, y, w, h, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Create an ellipse element.\n    var ellipse = new Graphics()\n    ellipse.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) {\n      ellipse.beginFill(elementStyle.background_color)\n      ellipse.drawEllipse(0, 0, (w / 2), (h / 2))\n      ellipse.endFill()\n    } else {\n      ellipse.drawEllipse(0, 0, (w / 2), (h / 2))\n    }\n    ellipse.x = x + (w / 2)\n    ellipse.y = y + (h / 2)\n\n    // Add the ellipse element to container.\n    this._container.addChild(ellipse)\n  }\n\n  /**\n   * Draws a fixdot element on the canvas.\n   * @param {int} x - The x coordinate of the element.\n   * @param {int} y - The y coordinate of the element.\n   * @param {String} - The style of the fixation dot.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  fixdot (x, y, style, styleArgs) {\n    // Check the color and style arguments.\n    style = (typeof style === 'undefined') ? 'default' : style\n\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    if (typeof x === 'undefined') {\n      if (this.uniform_coordinates === true) {\n        x = 0\n      } else {\n        x = this._width / 2\n      }\n    }\n    if (typeof y === 'undefined') {\n      if (this.uniform_coordinates === true) {\n        y = 0\n      } else {\n        y = this._height / 2\n      }\n    }\n\n    var s = 4\n    var h = 2\n    if (style.indexOf('large') !== -1) {\n      s = 16\n    } else if ((style.indexOf('medium') !== -1) || (style === 'default')) {\n      s = 8\n    } else if (style.indexOf('small') !== -1) {\n      s = 4\n    } else {\n      this.experiment._runner._debugger.addError('Unknown style: ' + style)\n    }\n\n    var styles = new Styles()\n    if ((style.indexOf('open') !== -1) || (style === 'default')) {\n      styles._fill = true\n      styles._background_color = elementStyle.color\n      styles._color = elementStyle.color\n      this.ellipse(x - s, y - s, 2 * s, 2 * s, styles)\n      styles._background_color = elementStyle.background_color\n      styles._color = elementStyle.background_color\n      this.ellipse(x - h, y - h, 2 * h, 2 * h, styles)\n    } else if (style.indexOf('filled') !== -1) {\n      styles._fill = true\n      styles._background_color = elementStyle.color\n      styles._color = elementStyle.color\n      this.ellipse(x - s, y - s, 2 * s, 2 * s, styles)\n    } else if (style.indexOf('cross') !== -1) {\n      styles._penwidth = 1\n      styles._color = elementStyle.color\n      this.line(x, y - s, x, y + s, styles)\n      this.line(x - s, y, x + s, y, styles)\n    } else {\n      this.experiment._runner._debugger.addError('Unknown style: ' + style)\n    }\n  }\n\n  /**\n   * Draws a gabor element on the canvas.\n   *\n   * @param {Number} x The x coordinate of the element\n   * @param {Number} y The y coordinate of the element\n   * @param {float} orient The rotation of the element (range between 0 and 1)\n   * @param {float} freq The frequency of the bands\n   * @param {String} env The type of envelope used for the element\n   * @param {*} size The size of the gabor\n   * @param {*} stdev The standard deviation of the guass fade\n   * @param {*} phase The phase of the element (start offset)\n   * @param {*} color1 The first color for the element\n   * @param {*} color2 The second color for the element\n   * @param {*} bgmode The background mode of the element\n   * @memberof Canvas\n   */\n  gabor (x, y, orient, freq, env, size, stdev, phase, color1, color2, bgmode) {\n    // Returns a surface containing a Gabor patch.\n    env = this._match_env(env)\n\n    // Create a temporary canvas to make an image data array.\n    const canvas = document.createElement('canvas')\n    canvas.width = size\n    canvas.height = size\n    const ctx = canvas.getContext('2d')\n    const px = ctx.getImageData(0, 0, size, size)\n\n    // Conver the orientation to radians.\n    orient = Math.PI * orient / -180\n    color1 = this._styles._convertColorValueToRGB(color1)\n    color2 = this._styles._convertColorValueToRGB(color2)\n\n    // rx and ry reflect the real coordinates in the target image\n    for (let rx = 0; rx < size; rx++) {\n      for (let ry = 0; ry < size; ry++) {\n        // Distance from the center\n        const dx = rx - 0.5 * size\n        const dy = ry - 0.5 * size\n\n        // Get the coordinates (x, y) in the unrotated Gabor patch.\n        const t = Math.atan2(dy, dx) + orient\n        const r = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2))\n        const ux = r * Math.cos(t)\n        const uy = r * Math.sin(t)\n        let f\n\n        // Get the amplitude without the envelope (0 .. 1).\n        let amp = 0.5 + 0.5 * Math.cos(2.0 * Math.PI * (ux * freq + phase))\n\n        // The envelope adjustment\n        if (env === 'g') {\n          // $f = exp(-0.5 * pow($x / $std, 2) - 0.5 * pow($y / $std, 2));\n          f = Math.exp(-0.5 * Math.pow(ux / stdev, 2) - 0.5 * Math.pow(uy / stdev, 2))\n        } else if (env === 'l') {\n          f = Math.max(0, (0.5 * size - r) / (0.5 * size))\n        } else if (env === 'c') {\n          if (r > 0.5 * size) {\n            f = 0.0\n          } else {\n            f = 1.0\n          }\n        } else {\n          f = 1.0\n        }\n\n        // Apply the envelope\n        if (bgmode === 'avg') {\n          amp = amp * f + 0.5 * (1.0 - f)\n        } else {\n          amp = amp * f\n        }\n\n        // Recalculate the color values.\n        const color = {\n          r: color1.r * amp + color2.r * (1.0 - amp),\n          g: color1.g * amp + color2.g * (1.0 - amp),\n          b: color1.b * amp + color2.b * (1.0 - amp)\n        }\n\n        // Set the color values at pixel level.\n        var position = rx * 4 + (ry * size * 4)\n        px.data[position] = color.r\n        px.data[position + 1] = color.g\n        px.data[position + 2] = color.b\n        px.data[position + 3] = 255\n      }\n    }\n\n    // Put the calculated data back on the canvas and create an image of it.\n    ctx.putImageData(px, 0, 0)\n\n    // Retrieve the image from the recourses\n    var sprite = new Sprite(Texture.from(canvas))\n\n    // Position the image.\n    sprite.x = x - (size / 2)\n    sprite.y = y - (size / 2)\n\n    // Add the image to the stage.\n    this._container.addChild(sprite)\n  }\n\n  /**\n   * Returns the canvas height\n   * @return {Number} - The height of the canvas in pixels.\n   */\n  get height () {\n    return this._height\n  }\n\n  /**\n   * Returns the canvas width\n   * @return {Number} - The width of the canvas in pixels.\n   */\n  get width () {\n    return this._width\n  }\n\n  /**\n   * Draws an image element on the canvas.\n   * @param {String} fname - The name of the element to draw.\n   * @param {Boolean|Number|String} center - If true the image is centered.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Number} scale - The scaling factor of the element.\n   */\n  image (fname, center, x, y, scale) {\n    // Get image from file pool.\n    let name = this.experiment._runner._syntax.remove_quotes(fname)\n    let path = this.experiment._runner._pool[name]\n    if (typeof (path) === 'undefined') {\n      this.experiment._runner._debugger.addError(`\"${fname}\" does not exist`)\n    }\n    let img = path.data\n    // Create a temporary canvas to make an image data array.\n    let canvas = document.createElement('canvas')\n    canvas.width = img.width\n    canvas.height = img.height\n    let ctx = canvas.getContext('2d')\n    ctx.drawImage(img, 0, 0)\n\n    let sprite = new Sprite(Texture.from(canvas))\n\n    // Scale the image.\n    sprite.scale.x = scale\n    sprite.scale.y = scale\n\n    // Position the image\n    if ([1, '1', true, 'yes'].indexOf(center) !== -1) {\n      sprite.x = x - (sprite.width / 2)\n      sprite.y = y - (sprite.height / 2)\n    } else {\n      sprite.x = x\n      sprite.y = y\n    }\n\n    // Add the image to the stage.\n    this._container.addChild(sprite)\n  }\n\n  /**\n   * Initializes the  display container on which the canvas is displayed.\n   * @param {Object} experiment - The experiment to which the canvas belongs.\n   */\n  init_display (experiment) {\n    // Set the dimension properties.\n    this._height = experiment.vars.height\n    this._width = experiment.vars.width\n\n    // Set the renderer dimensions.\n    experiment._runner._renderer.resize(this._width, this._height)\n\n    // Set the renderer background color.\n    experiment._runner._renderer.clear(this._styles._convertColorValue(experiment.vars.background, 'number'))\n    experiment._runner._renderer.backgroundColor = this._styles._convertColorValue(experiment.vars.background, 'number')\n\n    // PIXU: Set the cursor visibility to none (default).\n    experiment._runner._renderer.view.style.cursor = 'none'\n\n    // Start the fullscreen mode (if enabled).\n    experiment._runner._screen._fullScreenInit()\n\n    // Set focus to the experiment canvas.\n    experiment._runner._renderer.view.focus()\n  }\n\n  /**\n   * Draws a line element on the canvas.\n   * @param {Number} sx - The starting x coordinate of the element.\n   * @param {Number} sy - The starting y coordinate of the element.\n   * @param {Number} ex - The ending x coordinate of the element.\n   * @param {Number} ey - The ending y coordinate of the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  line (sx, sy, ex, ey, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Create a line element.\n    var line = new Graphics()\n    line.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    line.moveTo(0, 0)\n    line.lineTo(ex - sx, ey - sy)\n    line.x = sx\n    line.y = sy\n\n    // Add the line element to container.\n    this._container.addChild(line)\n  }\n\n  /**\n   * Draws a gabor element on the canvas.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {String} env - The type of envelop used  for the element.\n   * @param {Object} size - Optional styling argument for the element.\n   * @param {Number} stdev - The standard deviation  for the element.\n   * @param {Number|String} color1 - The first color for the element.\n   * @param {Number|String} color2 - Teh second color for the element.\n   * @param {String} bgmode - The type of background mode for the element.\n   */\n  noise (x, y, env, size, stdev, color1, color2, bgmode) {\n    // Returns a surface containing a noise patch.\n    env = this._match_env(env)\n\n    // Create a temporary canvas to make an image data array.\n    var canvas = document.createElement('canvas')\n    canvas.width = size\n    canvas.height = size\n    var ctx = canvas.getContext('2d')\n    var px = ctx.getImageData(0, 0, size, size)\n\n    // Create a surface\n    color1 = this._styles._convertColorValueToRGB(color1)\n    color2 = this._styles._convertColorValueToRGB(color2)\n\n    // rx and ry reflect the real coordinates in the target image\n    for (let rx = 0; rx < size; rx++) {\n      for (let ry = 0; ry < size; ry++) {\n        // Distance from the center\n        const ux = rx - 0.5 * size\n        const uy = ry - 0.5 * size\n        const r = Math.sqrt(Math.pow(ux, 2) + Math.pow(uy, 2))\n        let f\n        // Get the amplitude without the envelope (0 .. 1)\n        var amp = Math.random()\n        // The envelope adjustment\n        if (env === 'g') {\n          f = Math.exp(-0.5 * Math.pow(ux / stdev, 2) - 0.5 * Math.pow(uy / stdev, 2))\n        } else if (env === 'l') {\n          f = Math.max(0, (0.5 * size - r) / (0.5 * size))\n        } else if (env === 'c') {\n          if (r > 0.5 * size) {\n            f = 0.0\n          } else {\n            f = 1.0\n          }\n        } else {\n          f = 1.0\n        }\n\n        // Apply the envelope\n        if (bgmode === 'avg') {\n          amp = amp * f + 0.5 * (1.0 - f)\n        } else {\n          amp = amp * f\n        }\n\n        // Recalculate the collor values.\n        const color = {\n          r: color1.r * amp + color2.r * (1.0 - amp),\n          g: color1.g * amp + color2.g * (1.0 - amp),\n          b: color1.b * amp + color2.b * (1.0 - amp)\n        }\n\n        // Set the color values at pixel level.\n        var position = rx * 4 + (ry * size * 4)\n        px.data[position] = color.r\n        px.data[position + 1] = color.g\n        px.data[position + 2] = color.b\n        px.data[position + 3] = 255\n      }\n    }\n\n    // Put the calculated data back on the canvas and create an image of it.\n    ctx.putImageData(px, 0, 0)\n\n    // Retrieve the image from the recourses\n    var sprite = new Sprite(Texture.from(canvas))\n\n    // Position the image.\n    sprite.x = x - (size / 2)\n    sprite.y = y - (size / 2)\n\n    // Add the image to the stage.\n    this._container.addChild(sprite)\n  }\n\n  /**\n   * Draws a polygon element on the canvas.\n   * @param {Array} verticles - The coordinates of the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  polygon (verticles, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n\n    // Adjust the points.\n    var path = []\n    for (var i = 0; i < verticles.length; i++) {\n      path.push(verticles[i][0])\n      path.push(verticles[i][1])\n    }\n    path.push(verticles[0][0])\n    path.push(verticles[0][1])\n\n    // Create a polygon element.\n    var polygon = new Graphics()\n    polygon.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) polygon.beginFill(elementStyle.background_color)\n    polygon.drawPolygon(path)\n    if (elementStyle.fill === true) polygon.endFill()\n\n    // Add the polygon item to container.\n    this._container.addChild(polygon)\n  }\n\n  /** Implements the prepare phase of a canvas. */\n  prepare () {}\n\n  /**\n   * Draws a rectangle element on the canvas.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Number} w - The width of the element.\n   * @param {Number} h - The height of the element.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  rect (x, y, w, h, styleArgs) {\n    // Get the style\n    var elementStyle = this._getStyle(styleArgs)\n    // Create a rectangle element.\n    var rectangle = new Graphics()\n    rectangle.lineStyle(elementStyle.penwidth, elementStyle.color, 1)\n    if (elementStyle.fill === true) {\n      rectangle.beginFill(elementStyle.background_color)\n      rectangle.drawRect(0, 0, w, h)\n      rectangle.endFill()\n    } else {\n      rectangle.drawRect(0, 0, w, h)\n    }\n    rectangle.x = x\n    rectangle.y = y\n\n    // Add the rectangle element to container.\n    this._container.addChild(rectangle)\n  }\n\n  /**\n   * Returns the size ion pixels of the canvas.\n   * @return {Array} - The widht an height as an array tupple.\n   */\n  size () {\n    // Create object tuple.\n    var size = {\n      width: this._width,\n      height: this._height\n    }\n    return size\n  }\n\n  /**\n   * Show a canvas on the ptimary canvas.\n   * @param {Object} experiment - The experiment to which the canvas belongs.\n   * @return {Number} - The current time stamp.\n   */\n  show (experiment) {\n    // Check parameter.\n    experiment = (typeof experiment !== 'undefined') ? experiment : this.experiment\n\n    // Add the container to the stage object and update the stage.\n    this.experiment._currentCanvas = this\n\n    // Set the scaling.\n    this._container.scale.x = this.experiment._scale_x\n    this._container.scale.y = this.experiment._scale_y\n\n    // Set renderer background and render the content.\n    this.experiment._runner._renderer.backgroundColor = this._styles._background_color\n    try {\n      const c = this._styles.rgb\n      document.body.style.backgroundColor = `rgb(${c.r},${c.g},${c.b})`\n    } catch (e) {\n      console.error(e)\n    }\n    this.experiment._runner._renderer.render(this._container)\n\n    // Return the current time.\n    if (experiment != null) {\n      return experiment.clock.time()\n    } else {\n      return null\n    }\n  }\n\n  /**\n   * Draws a text element on the canvas.\n   * @param {String} txt - The x coordinate of the element.\n   * @param {Boolean} center - If true the text must be centered.\n   * @param {Number} x - The x coordinate of the element.\n   * @param {Number} y - The y coordinate of the element.\n   * @param {Boolean} html - If true the text parameter contains HTML tags.\n   * @param {Object} styleArgs - Optional styling argument for the element.\n   */\n  text (txt, center, x, y, html, styleArgs) {\n    // Get the style\n    const elementStyle = this._getStyle(styleArgs)\n\n    // Only jump through the HTML rendering hoops if the html == 'yes' and\n    // text actually contains HTML markup.\n    if ((html === 'yes') && (this._containsHTML(txt))) {\n      //  Define the text block object.\n      const textBlock = {\n        element_style: elementStyle,\n        height: 0,\n        row: {\n          ascent: 0,\n          height: 0,\n          text_elements: [],\n          text_dimensions: [],\n          text_underline: [],\n          width: 0\n        },\n        rows: [],\n        styles: [],\n        width: 0,\n        x_pos: 4,\n        y_pos: 0\n      }\n\n      // First create a div container for parsing the html text.\n      const div = document.createElement('div')\n      document.body.appendChild(div)\n      div.style.fontFamily = elementStyle.font_family\n      div.style.fontSize = String(elementStyle.font_size) + 'px'\n      div.style.fontWeight = (elementStyle.font_bold === true) ? 'bold' : 'normal'\n      div.style.lineHeight = 'normal'\n      div.style.display = 'inline-block'\n      div.style.visibility = 'hidden'\n      div.innerHTML = txt\n\n      // Parse the html recursive.\n      this._parseHtmlNode(div, textBlock, elementStyle)\n\n      // Remove the html div.\n      document.body.removeChild(div)\n\n      // Add the last row (if any).\n      if (textBlock.row.text_elements.length !== 0) {\n        textBlock.height = textBlock.height + textBlock.row.height\n        textBlock.rows.push(textBlock.row)\n      }\n\n      // Recalculate the x and y positions depending on height, width and centering.\n      textBlock.y_pos = 0\n      for (let i = 0; i < textBlock.rows.length; i++) {\n        // Parse a textline.\n        for (let j = 0; j < textBlock.rows[i].text_elements.length; j++) {\n          // Check for vertical correction.\n          const adjust = textBlock.rows[i].ascent - textBlock.rows[i].text_dimensions[j].ascent\n          textBlock.rows[i].text_elements[j].y = textBlock.y_pos + adjust\n\n          // Check for horizontal centering.\n          if ([1, '1', true, 'yes'].indexOf(center) !== -1) {\n            textBlock.rows[i].text_elements[j].x = textBlock.rows[i].text_elements[j].x + x - (textBlock.rows[i].width / 2)\n            textBlock.rows[i].text_elements[j].y = textBlock.rows[i].text_elements[j].y + y - (textBlock.height / 2)\n          } else {\n            textBlock.rows[i].text_elements[j].x = textBlock.rows[i].text_elements[j].x + x\n            textBlock.rows[i].text_elements[j].y = textBlock.rows[i].text_elements[j].y + y + 6\n          }\n\n          // if underlined add additional styling.\n          if (textBlock.rows[i].text_underline[j] === true) {\n            this.line(textBlock.rows[i].text_elements[j].x,\n              textBlock.rows[i].text_elements[j].y + textBlock.rows[i].text_dimensions[j].ascent + 7,\n              textBlock.rows[i].text_elements[j].x + textBlock.rows[i].text_elements[j].width,\n              textBlock.rows[i].text_elements[j].y + textBlock.rows[i].text_dimensions[j].ascent + 7,\n              elementStyle)\n          }\n\n          //  Add text element to the stage.\n          this._container.addChild(textBlock.rows[i].text_elements[j])\n        }\n        textBlock.y_pos = textBlock.y_pos + textBlock.rows[i].height\n      }\n    } else {\n      //  Create the text element\n      var textStyle = {\n        fontFamily: elementStyle.font_family,\n        fontSize: elementStyle.font_size,\n        fontWeight: (elementStyle.font_bold === true) ? 'bold' : 'normal',\n        fill: elementStyle.color\n      }\n      var textElement = new Text(txt, textStyle)\n\n      if ([1, '1', true, 'yes'].indexOf(center) !== -1) {\n        textElement.x = x - (textElement.width / 2)\n        textElement.y = y - (textElement.height / 2)\n      } else {\n        textElement.x = x\n        textElement.y = y\n      }\n\n      //  Add text element to the stage.\n      this._container.addChild(textElement)\n    }\n  }\n}\n","import isInteger from 'lodash/isInteger'\n\n/** Class representing a style container. */\nexport default class Styles {\n  /** Styles is a simple class that holds information about the style. */\n  constructor (item) {\n    this._initConstants()\n    // Set class private properties.\n    if (typeof (item) === 'undefined') {\n      this._background_color = 0x000000\n      this._bidi = false\n      this._color = 'white'\n      this._fill = false\n      this._font_bold = false\n      this._font_family = 'Arial'\n      this._font_italic = false\n      this._font_size = 24\n      this._font_underline = false\n      this._html = false\n      this._penwidth = 1\n    } else {\n      this.background_color = item.vars.get('background', 0x000000)\n      this.bidi = item.vars.get('bidi', 'no')\n      this.color = item.vars.get('foreground', 'white')\n      this.fill = item.vars.get('fill', 'no') === 'yes'\n      this.font_bold = item.vars.get('font_bold', 'no')\n      this.font_family = item.vars.get('font_family', 'Arial')\n      this.font_italic = item.vars.get('font_italic', 'no')\n      this.font_size = item.vars.get('font_size', 24)\n      this.font_underline = item.vars.get('font_underline', 'no')\n      this.html = item.vars.get('html', 'no')\n      this.penwidth = item.vars.get('penwidth', 1)\n    }\n  }\n\n  /**\n   * Converts a color value (string, number of rgb to a numeric value for use in PIXI.\n   * @param {String|Number|Object} color - The color to convert.\n   * @return {Number} - The color value.\n   */\n\n  _convertColorValue (color) {\n    var convertedColor = 0\n    // Check if the color definition is a number or a string value.\n    if (typeof (color) === 'string') {\n      // Check if the string is a hex string.\n      if (/(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(color) === true) {\n        // Check if hex string is 3 of 6 character based.\n        if (color.length === 4) {\n          // Expand the color to 6 characters.\n          convertedColor = parseInt('0x' + color[1] + color[1] + color[2] + color[2] + color[3] + color[3], 16)\n        } else {\n          convertedColor = parseInt('0x' + color[1] + color[2] + color[3] + color[4] + color[5] + color[6], 16)\n        }\n      } else if (typeof this._DEFAULT_COLOURS[color.toLowerCase()] !== 'undefined') {\n        // Value is a constant color name, convert it.\n        convertedColor = parseInt(this._DEFAULT_COLOURS[color.toLowerCase()], 16)\n      } else if (color.slice(0, 3).toLowerCase() === 'rgb') {\n        // Value is a rgb string number, convert it.\n        var a = color.split('(')[1].split(')')[0]\n        a = a.split(',')\n        var b = a.map(function (x) {\n          // For each array element\n          if (/^\\d+(\\.\\d+)?%$/.test(x)) {\n            // pass\n            x = x.slice(0, -1)\n            x = Math.round((parseInt(x) / 100) * 255)\n            x = x.toString(16)\n          } else {\n            // fail\n            x = parseInt(x).toString(16) // Convert to a base16 string\n          }\n          return (x.length === 1) ? '0' + x : x // Add zero if we get only one character\n        })\n        convertedColor = parseInt('0x' + b.join(''))\n      }\n    } else if (this._isInt(color) === true) {\n      if (color < 256) {\n        // Luminant value, so convert it to gray scale.\n        convertedColor = (256 * 256 * color) + (256 * color) + color\n      } else {\n        // Luminant values above 255 are not supported, return white.\n        convertedColor = 16843008\n      }\n    }\n    // Return the converted color as nubmer value.\n    return convertedColor\n  }\n\n  _convertColorValueToRGB (color) {\n    // Convert the color to numeric values.\n    var convertedColor = this._convertColorValue(color)\n    // Convert colors to rgb format.\n    return {\n      r: convertedColor >> 16,\n      g: convertedColor >> 8 & 0xFF,\n      b: convertedColor & 0xFF\n    }\n  }\n\n  get rgb () {\n    return {\n      r: this._background_color >> 16,\n      g: this._background_color >> 8 & 0xFF,\n      b: this._background_color & 0xFF\n    }\n  }\n\n  set rgb (val) {\n  }\n\n  /**\n   * Checks if the passed value is an integer.\n   * @param {Number} value -  The value to check.\n   * @return {Boolean} - True if passed value is an integer.\n   */\n  _isInt (value) {\n    return isInteger(value)\n  }\n\n  /**\n   * Checks if value is possibly specified as 'yes'/'no' or 1/0 instead of\n   * true or false (as is done in OS script). Convert 'yes' and 'no' values\n   * to booleans\n   * @param {Number|String} value - The value to check.\n   * @return {Boolean} - The original boolean, or true if value was 'yes'.\n   */\n  _checkVal (value) {\n    return [true, 'yes', 1, '1'].indexOf(value) !== -1\n  }\n\n  /**\n   * Get the background_color value.\n   * @return {String} The background_color value.\n   */\n  get background_color () {\n    return this._background_color\n  }\n\n  /**\n   * Set the background_color value.\n   * @param {Number|String} val - The background_color value to set.\n   */\n  set background_color (val) {\n    this._background_color = this._convertColorValue(val, 'number')\n  }\n\n  /**\n   * Get the bidi value.\n   * @return {Boolean} The bidi value.\n   */\n  get bidi () {\n    return this._bidi\n  }\n\n  /**\n   * Set the bidi value.\n   * @param {Boolean} val - The bidi value to set.\n   */\n  set bidi (val) {\n    this._bidi = this._checkVal(val)\n  }\n\n  /**\n   * Get the color value.\n   * @return {String} The color value.\n   */\n  get color () {\n    return this._color\n  }\n\n  /**\n   * Set the color value.\n   * @param {Number|String} val - The color value to set.\n   */\n  set color (val) {\n    this._color = this._convertColorValue(val, 'number')\n  }\n\n  /**\n   * Get the fill value.\n   * @return {Boolean} The fill value.\n   */\n  get fill () {\n    return this._fill\n  }\n\n  /**\n   * Set the fill value.\n   * @param {Boolean} val - The fill value to set.\n   */\n  set fill (val) {\n    this._fill = ([1, '1', true, 'yes'].indexOf(val) !== -1)\n  }\n\n  /**\n   * Get the font_bold value.\n   * @return {Boolean} The font_bold value.\n   */\n  get font_bold () {\n    return this._font_bold\n  }\n\n  /**\n   * Set the font_bold value.\n   * @param {Boolean} val - The font_bold value to set.\n   */\n  set font_bold (val) {\n    this._font_bold = this._checkVal(val)\n  }\n\n  /**\n   * Get the font_family value.\n   * @return {String} The font_family value.\n   */\n  get font_family () {\n    return this._font_family\n  }\n\n  /**\n   * Set the font_family value.\n   * @param {String} val - The font_family value to set.\n   */\n  set font_family (val) {\n    if (val in this._DEFAULT_FONTS) {\n      this._font_family = this._DEFAULT_FONTS[val]\n    } else {\n      this._font_family = val\n    }\n  }\n\n  /**\n   * Get the font_italic value.\n   * @return {Boolean} The font_italic value.\n   */\n  get font_italic () {\n    return this._font_italic\n  }\n\n  /**\n   * Set the font_italic value.\n   * @param {Boolean} val - The font_bold value to set.\n   */\n  set font_italic (val) {\n    this._font_italic = this._checkVal(val)\n  }\n\n  /**\n   * Get the font_size value.\n   * @return {Number} The font_size value.\n   */\n  get font_size () {\n    return this._font_size\n  }\n\n  /**\n   * Set the font_size value.\n   * @param {Number} val - The font_size value to set.\n   */\n  set font_size (val) {\n    if (!this._isInt(val)) {\n      // remove px part\n      this._font_size = Number(val.slice(0, -2))\n    } else {\n      this._font_size = val\n    }\n  }\n\n  /**\n   * Get the font_underline value.\n   * @return {Boolean} The font_underline value.\n   */\n  get font_underline () {\n    return this._font_underline\n  }\n\n  /**\n   * Set the font_underline value.\n   * @param {Boolean} val - The font_underline value to set.\n   */\n  set font_underline (val) {\n    this._font_underline = this._checkVal(val)\n  }\n\n  /**\n   * Get the html value.\n   * @return {Boolean} The html value.\n   */\n  get html () {\n    return this._html\n  }\n\n  /**\n   * Set the html value.\n   * @param {Boolean} val - The html value to set.\n   */\n  set html (val) {\n    this._html = this._checkVal(val)\n  }\n\n  /**\n   * Get the penwidth value.\n   * @return {Boolean} The penwidth value.\n   */\n  get penwidth () {\n    return this._penwidth\n  }\n\n  /**\n   * Set the penwidth value.\n   * @param {Boolean} val - The penwidth value to set.\n   */\n  set penwidth (val) {\n    if (!this._isInt(val)) {\n      this._penwidth = 1\n    }\n    this._penwidth = val\n  }\n\n  _initConstants () {\n    // Set constant default colors.\n    this._DEFAULT_COLOURS = {\n      'aliceblue': '0xf0f8ff',\n      'antiquewhite': '0xfaebd7',\n      'aqua': '0x00ffff',\n      'aquamarine': '0x7fffd4',\n      'azure': '0xf0ffff',\n      'beige': '0xf5f5dc',\n      'bisque': '0xffe4c4',\n      'black': '0x000000',\n      'blanchedalmond': '0xffebcd',\n      'blue': '0x0000ff',\n      'blueviolet': '0x8a2be2',\n      'brown': '0xa52a2a',\n      'burlywood': '0xdeb887',\n      'cadetblue': '0x5f9ea0',\n      'chartreuse': '0x7fff00',\n      'chocolate': '0xd2691e',\n      'coral': '0xff7f50',\n      'cornflowerblue': '0x6495ed',\n      'cornsilk': '0xfff8dc',\n      'crimson': '0xdc143c',\n      'cyan': '0x00ffff',\n      'darkblue': '0x00008b',\n      'darkcyan': '0x008b8b',\n      'darkgoldenrod': '0xb8860b',\n      'darkgray': '0xa9a9a9',\n      'darkgreen': '0x006400',\n      'darkgrey': '0xa9a9a9',\n      'darkkhaki': '0xbdb76b',\n      'darkmagenta': '0x8b008b',\n      'darkolivegreen': '0x556b2f',\n      'darkorange': '0xff8c00',\n      'darkorchid': '0x9932cc',\n      'darkred': '0x8b0000',\n      'darksalmon': '0xe9967a',\n      'darkseagreen': '0x8fbc8f',\n      'darkslateblue': '0x483d8b',\n      'darkslategray': '0x2f4f4f',\n      'darkslategrey': '0x2f4f4f',\n      'darkturquoise': '0x00ced1',\n      'darkviolet': '0x9400d3',\n      'deeppink': '0xff1493',\n      'deepskyblue': '0x00bfff',\n      'dimgray': '0x696969',\n      'dimgrey': '0x696969',\n      'dodgerblue': '0x1e90ff',\n      'firebrick': '0xb22222',\n      'floralwhite': '0xfffaf0',\n      'forestgreen': '0x228b22',\n      'fuchsia': '0xff00ff',\n      'gainsboro': '0xdcdcdc',\n      'ghostwhite': '0xf8f8ff',\n      'gold': '0xffd700',\n      'goldenrod': '0xdaa520',\n      'gray': '0x808080',\n      'grey': '0x808080',\n      'green': '0x008000',\n      'greenyellow': '0xadff2f',\n      'honeydew': '0xf0fff0',\n      'hotpink': '0xff69b4',\n      'indianred ': '0xcd5c5c',\n      'indigo': '0x4b0082',\n      'ivory': '0xfffff0',\n      'khaki': '0xf0e68c',\n      'lavender': '0xe6e6fa',\n      'lavenderblush': '0xfff0f5',\n      'lawngreen': '0x7cfc00',\n      'lemonchiffon': '0xfffacd',\n      'lightblue': '0xadd8e6',\n      'lightcoral': '0xf08080',\n      'lightcyan': '0xe0ffff',\n      'lightgoldenrodyellow': '0xfafad2',\n      'lightgray': '0xd3d3d3',\n      'lightgrey': '0xd3d3d3',\n      'lightgreen': '0x90ee90',\n      'lightpink': '0xffb6c1',\n      'lightsalmon': '0xffa07a',\n      'lightseagreen': '0x20b2aa',\n      'lightskyblue': '0x87cefa',\n      'lightslategray': '0x778899',\n      'lightslategrey': '0x778899',\n      'lightsteelblue': '0xb0c4de',\n      'lightyellow': '0xffffe0',\n      'lime': '0x00ff00',\n      'limegreen': '0x32cd32',\n      'linen': '0xfaf0e6',\n      'magenta': '0xff00ff',\n      'maroon': '0x800000',\n      'mediumaquamarine': '0x66cdaa',\n      'mediumblue': '0x0000cd',\n      'mediumorchid': '0xba55d3',\n      'mediumpurple': '0x9370d8',\n      'mediumseagreen': '0x3cb371',\n      'mediumslateblue': '0x7b68ee',\n      'mediumspringgreen': '0x00fa9a',\n      'mediumturquoise': '0x48d1cc',\n      'mediumvioletred': '0xc71585',\n      'midnightblue': '0x191970',\n      'mintcream': '0xf5fffa',\n      'mistyrose': '0xffe4e1',\n      'moccasin': '0xffe4b5',\n      'navajowhite': '0xffdead',\n      'navy': '0x000080',\n      'oldlace': '0xfdf5e6',\n      'olive': '0x808000',\n      'olivedrab': '0x6b8e23',\n      'orange': '0xffa500',\n      'orangered': '0xff4500',\n      'orchid': '0xda70d6',\n      'palegoldenrod': '0xeee8aa',\n      'palegreen': '0x98fb98',\n      'paleturquoise': '0xafeeee',\n      'palevioletred': '0xd87093',\n      'papayawhip': '0xffefd5',\n      'peachpuff': '0xffdab9',\n      'peru': '0xcd853f',\n      'pink': '0xffc0cb',\n      'plum': '0xdda0dd',\n      'powderblue': '0xb0e0e6',\n      'purple': '0x800080',\n      'red': '0xff0000',\n      'rosybrown': '0xbc8f8f',\n      'royalblue': '0x4169e1',\n      'saddlebrown': '0x8b4513',\n      'salmon': '0xfa8072',\n      'sandybrown': '0xf4a460',\n      'seagreen': '0x2e8b57',\n      'seashell': '0xfff5ee',\n      'sienna': '0xa0522d',\n      'silver': '0xc0c0c0',\n      'skyblue': '0x87ceeb',\n      'slateblue': '0x6a5acd',\n      'slategray': '0x708090',\n      'slategrey': '0x708090',\n      'snow': '0xfffafa',\n      'springgreen': '0x00ff7f',\n      'steelblue': '0x4682b4',\n      'tan': '0xd2b48c',\n      'teal': '0x008080',\n      'thistle': '0xd8bfd8',\n      'tomato': '0xff6347',\n      'turquoise': '0x40e0d0',\n      'violet': '0xee82ee',\n      'wheat': '0xf5deb3',\n      'white': '0xffffff',\n      'whitesmoke': '0xf5f5f5',\n      'yellow': '0xffff00',\n      'yellowgreen': '0x9acd32'\n    }\n\n    // Set constant default fonts.\n    this._DEFAULT_FONTS = {\n      'sans': 'Droid Sans',\n      'serif': 'Droid Serif',\n      'mono': 'Droid Sans Mono',\n      'chinese-japanese-korean': 'WenQuanYi Micro Hei',\n      'arabic': 'Droid Arabic Naskh',\n      'hebrew': 'Droid Sans Hebrew',\n      'hindi': 'Lohit Hindi'\n    }\n  };\n}\n","import CanvasClass from '../backends/canvas'\n\n/**\n * A proxy handler for the VarStore that maps properties onto calls to\n * VarStore.get(), so that variables are automatically evaluated, just like\n * in the OpenSesame `var` API.\n */\nclass VarStoreHandler {\n  get (target, prop) {\n    // The VarStore sets a property on itself to bypass this proxy. This\n    // avoids feedback loops when the VarStore tries to get a variable without\n    // evaluating it.\n    if (target._bypass_proxy === true) {\n      return target[prop]\n    }\n    return typeof target[prop] === 'string'\n      ? target.get(prop, null, true, null, false)\n      : target[prop]\n  }\n}\n\n/**\n * A workspace for executing inline JavaScript code. For now, the workspace is\n * not persistent, and only exposes the vars object.\n */\nexport default class JavaScriptWorkspace {\n  /**\n     * Create a JavaScript workspace.\n     * @param {Object} experiment - The experiment item to which the item belongs.\n     */\n  constructor (experiment) {\n    this.experiment = experiment\n    this.vars_proxy = new Proxy(this.experiment.vars, new VarStoreHandler())\n  }\n\n  /**\n     * Executes JavaScript code in the workspace.\n     * @param {String} js - JavaScript code to execute\n     */\n  _eval (js) {\n    let vars = this.vars_proxy\n    let Canvas = () => new CanvasClass(this.experiment)\n    eval(js)\n  }\n}\n","import {\r\n  isBoolean\r\n} from 'lodash'\r\n\r\n/** Class representing a python workspace. */\r\nexport default class PythonWorkspace {\r\n  /**\r\n   * Create a python workspace object.\r\n   * @param {Object} runner - The runner to which the python workspace belongs.\r\n   */\r\n  constructor (runner) {\r\n    // Set class parameter properties.\r\n    this._runner = runner // Parent runner attached to the python workspace class.\r\n  }\r\n\r\n  /**\r\n   * Evaluate an expression within osweb.\r\n   * @param {Boolean|Object|String} bytecode - The expression to evaluate.\r\n   * @return {Boolean|Number|Object|String} - The result of the evaluated expression.\r\n   */\r\n  _eval (bytecode) {\r\n    // Check wich type of expression must be evaled.\r\n    if (isBoolean(bytecode)) {\r\n      return bytecode\r\n    } else if (typeof bytecode === 'string') {\r\n      // Open sesame script, first check for parameter values.\r\n      bytecode = this._runner._syntax.eval_text(bytecode, null, true)\r\n\r\n      // Evaluate the expression.\r\n      var evalString = this._runner._syntax.remove_quotes(bytecode)\r\n      if (evalString === 'always') {\r\n        return true\r\n      } else if (evalString === 'never') {\r\n        return false\r\n      } else {\r\n        return eval(evalString)\r\n      }\r\n    } else {\r\n      // Python script, run the internal Python interpreter.\r\n      return this._runner._pythonParser._run_statement(bytecode)\r\n    }\r\n  }\r\n}\r\n"],"sourceRoot":""}